/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";var t="127";const W=0,j=1,X=2;const A=1,R=3,L=0,q=1,Y=2;const Z=0,J=1,K=2,Q=3,$=4,ee=5,te=100,ne=101,ie=102,re=103,ae=104,se=200,oe=201,le=202,ce=203,he=204,ue=205,de=206,pe=207,me=208,fe=209,ge=210,ve=0,ye=1,xe=2,_e=3,be=4,Me=5,we=6,Ee=7,Se=0,w=301,E=302,l=303,c=304,T=306,S=307,H=1e3,z=1001,G=1002,k=1003,V=1004;const Te=1005;const Ae=1006,Re=1007;const Le=1008;const Ce=1009,a=1010,s=1011,Pe=1012,o=1013,Ie=1014,De=1015,Ne=1016,h=1017,u=1018,d=1019,Oe=1020,p=1021,Fe=1022,Be=1023,m=1024,f=1025,i=Be,Ue=1026,He=1027,g=1028,v=1029,y=1030,x=1031,_=1032,b=1033,M=33776,C=33777,P=33778,I=33779,D=35840,N=35841,O=35842,F=35843,B=36196,U=37492,ze=37496,Ge=37808,ke=37809,Ve=37810,We=37811,je=37812,Xe=37813,qe=37814,Ye=37815,Ze=37816,Je=37817,Ke=37818,Qe=37819,$e=37820,et=37821,tt=36492,nt=37840,it=37841,rt=37842,at=37843,st=37844,ot=37845,lt=37846,ct=37847,ht=37848,ut=37849,dt=37850,pt=37851,mt=37852,ft=37853,r=2300,gt=2301,vt=2400,yt=2401,xt=2402;const _t=3e3,bt=3001,Mt=3201,wt=0,Et=1;const Tt=35044,n=35048;const St="300 es";function At(){}Object.assign(At.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){const n=this._listeners[e];void 0===n||-1!==(t=n.indexOf(t))&&n.splice(t,1)}},dispatchEvent:function(n){if(void 0!==this._listeners){const e=this._listeners[n.type];if(void 0!==e){n.target=this;const i=e.slice(0);for(let e=0,t=i.length;e<t;e++)i[e].call(this,n);n.target=null}}}});const Rt=[];for(let e=0;e<256;e++)Rt[e]=(e<16?"0":"")+e.toString(16);let Lt=1234567;const Ct={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;const r=Rt[255&e]+Rt[e>>8&255]+Rt[e>>16&255]+Rt[e>>24&255]+"-"+Rt[255&t]+Rt[t>>8&255]+"-"+Rt[t>>16&15|64]+Rt[t>>24&255]+"-"+Rt[63&n|128]+Rt[n>>8&255]+"-"+Rt[n>>16&255]+Rt[n>>24&255]+Rt[255&i]+Rt[i>>8&255]+Rt[i>>16&255]+Rt[i>>24&255];return r.toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:function(e,t,n){return(1-n)*e+n*t},damp:function(e,t,n,i){return Ct.lerp(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(Ct.euclideanModulo(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(Lt=e%2147483647),Lt=16807*Lt%2147483647,(Lt-1)/2147483646},degToRad:function(e){return e*Ct.DEG2RAD},radToDeg:function(e){return e*Ct.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const a=Math.cos,s=Math.sin;var o=a(n/2),l=s(n/2),c=a((t+i)/2),h=s((t+i)/2),u=a((t-i)/2),d=s((t-i)/2),p=a((i-t)/2),m=s((i-t)/2);switch(r){case"XYX":e.set(o*h,l*u,l*d,o*c);break;case"YZY":e.set(l*d,o*h,l*u,o*c);break;case"ZXZ":e.set(l*u,l*d,o*h,o*c);break;case"XZX":e.set(o*h,l*m,l*p,o*c);break;case"YXY":e.set(l*p,o*h,l*m,o*c);break;case"ZYZ":e.set(l*m,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Pt{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,n=this.y,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6],this.y=e[1]*t+e[4]*n+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,t=this.y-e.y;return this.x=r*n-t*i+e.x,this.y=r*i+t*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Pt.prototype.isVector2=!0;class It{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,s,o,l){const c=this.elements;return c[0]=e,c[1]=i,c[2]=s,c[3]=t,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var n=e.elements,i=t.elements;const r=this.elements;var a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],m=i[0],f=i[3],g=i[6],v=i[1],y=i[4],e=i[7],t=i[2],n=i[5],i=i[8];return r[0]=a*m+s*v+o*t,r[3]=a*f+s*y+o*n,r[6]=a*g+s*e+o*i,r[1]=l*m+c*v+h*t,r[4]=l*f+c*y+h*n,r[7]=l*g+c*e+h*i,r[2]=u*m+d*v+p*t,r[5]=u*f+d*y+p*n,r[8]=u*g+d*e+p*i,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-n*r*e+n*s*o+i*r*l-i*a*o}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=c*a-s*l,u=s*o-c*r,d=l*r-a*o,p=t*h+n*u+i*d;if(0==p)return this.set(0,0,0,0,0,0,0,0,0);var m=1/p;return e[0]=h*m,e[1]=(i*l-c*n)*m,e[2]=(s*n-i*a)*m,e[3]=u*m,e[4]=(c*t-i*o)*m,e[5]=(i*r-s*t)*m,e[6]=d*m,e[7]=(n*o-l*t)*m,e[8]=(a*t-n*r)*m,this}transpose(){var e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,s){var o=Math.cos(r),r=Math.sin(r);return this.set(n*o,n*r,-n*(o*a+r*s)+a+e,-i*r,i*o,-i*(-r*a+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){var t=Math.cos(e),n=Math.sin(e);const i=this.elements;var r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],e=i[7];return i[0]=t*r+n*o,i[3]=t*a+n*l,i[6]=t*s+n*e,i[1]=-n*r+t*o,i[4]=-n*a+t*l,i[7]=-n*s+t*e,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<9;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}It.prototype.isMatrix3=!0;let Dt;const Nt={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Dt&&(Dt=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Dt.width=e.width,Dt.height=e.height;const n=Dt.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Dt}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}};let Ot=0;class Ft extends At{constructor(e=Ft.DEFAULT_IMAGE,t=Ft.DEFAULT_MAPPING,n=z,i=z,r=Ae,a=Le,s=Be,o=Ce,l=1,c=_t){super(),Object.defineProperty(this,"id",{value:Ot++}),this.uuid=Ct.generateUUID(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Pt(0,0),this.repeat=new Pt(1,1),this.center=new Pt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new It,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=Ct.generateUUID()),!t&&void 0===e.images[i.uuid]){let n;if(Array.isArray(i)){n=[];for(let e=0,t=i.length;e<t;e++)i[e].isDataTexture?n.push(Bt(i[e].image)):n.push(Bt(i[e]))}else n=Bt(i);e.images[i.uuid]={uuid:i.uuid,url:n}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case H:e.x=e.x-Math.floor(e.x);break;case z:e.x=e.x<0?0:1;break;case G:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case H:e.y=e.y-Math.floor(e.y);break;case z:e.y=e.y<0?0:1;break;case G:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function Bt(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Nt.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Ft.DEFAULT_IMAGE=void 0,Ft.DEFAULT_MAPPING=300,Ft.prototype.isTexture=!0;class Ut{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,n=this.y,i=this.z,r=this.w,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*i+e[12]*r,this.y=e[1]*t+e[5]*n+e[9]*i+e[13]*r,this.z=e[2]*t+e[6]*n+e[10]*i+e[14]*r,this.w=e[3]*t+e[7]*n+e[11]*i+e[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;var a=e.elements,s=a[0],o=a[4],l=a[8],c=a[1],h=a[5],u=a[9],d=a[2],p=a[6],m=a[10];if(Math.abs(o-c)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(o+c)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+h+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var f=(s+1)/2,g=(h+1)/2,v=(m+1)/2,y=(o+c)/4,e=(l+d)/4,a=(u+p)/4;return g<f&&v<f?r=f<.01?(n=0,i=.707106781):(n=Math.sqrt(f),i=y/n,e/n):v<g?r=g<.01?(n=.707106781,i=0,.707106781):(i=Math.sqrt(g),n=y/i,a/i):v<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=e/r,i=a/r),this.set(n,i,r,t),this}let x=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(c-o)*(c-o));return Math.abs(x)<.001&&(x=1),this.x=(p-u)/x,this.y=(l-d)/x,this.z=(c-o)/x,this.w=Math.acos((s+h+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}Ut.prototype.isVector4=!0;class Ht extends At{constructor(e,t,n){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ut(0,0,e,t),this.scissorTest=!1,this.viewport=new Ut(0,0,e,t),n=n||{},this.texture=new Ft(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Ae,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Ht.prototype.isWebGLRenderTarget=!0;class zt extends Ht{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}zt.prototype.isWebGLMultisampleRenderTarget=!0;class Gt{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,r,a,s){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];var u=r[a+0],d=r[a+1],p=r[a+2],n=r[a+3];if(0===s)return e[t+0]=o,e[t+1]=l,e[t+2]=c,void(e[t+3]=h);if(1===s)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=n);if(h!==n||o!==u||l!==d||c!==p){let e=1-s;i=o*u+l*d+c*p+h*n,r=0<=i?1:-1,a=1-i*i;a>Number.EPSILON&&(a=Math.sqrt(a),i=Math.atan2(a,i*r),e=Math.sin(e*i)/a,s=Math.sin(s*i)/a);r=s*r;o=o*e+u*r,l=l*e+d*r,c=c*e+p*r,h=h*e+n*r,e===1-s&&(s=1/Math.sqrt(o*o+l*l+c*c+h*h),o*=s,l*=s,c*=s,h*=s)}e[t]=o,e[t+1]=l,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,a){var s=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[a],n=r[a+1],i=r[a+2],a=r[a+3];return e[t]=s*a+c*h+o*i-l*n,e[t+1]=o*a+c*n+l*h-s*i,e[t+2]=l*a+c*i+s*n-o*h,e[t+3]=c*a-s*h-o*n-l*i,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,i=e._y,r=e._z,a=e._order;const s=Math.cos,o=Math.sin;var l=s(n/2),c=s(i/2),h=s(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var n=t/2,t=Math.sin(n);return this._x=e.x*t,this._y=e.y*t,this._z=e.z*t,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){var t,n=e.elements,i=n[0],r=n[4],a=n[8],s=n[1],o=n[5],l=n[9],c=n[2],h=n[6],e=n[10],n=i+o+e;return 0<n?(n=.5/Math.sqrt(n+1),this._w=.25/n,this._x=(h-l)*n,this._y=(a-c)*n,this._z=(s-r)*n):o<i&&e<i?(t=2*Math.sqrt(1+i-o-e),this._w=(h-l)/t,this._x=.25*t,this._y=(r+s)/t,this._z=(a+c)/t):e<o?(t=2*Math.sqrt(1+o-i-e),this._w=(a-c)/t,this._x=(r+s)/t,this._y=.25*t,this._z=(l+h)/t):(o=2*Math.sqrt(1+e-i-o),this._w=(s-r)/o,this._x=(a+c)/o,this._y=(l+h)/o,this._z=.25*o),this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ct.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){var n=this.angleTo(e);if(0===n)return this;n=Math.min(1,t/n);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var n=e._x,i=e._y,r=e._z,a=e._w,s=t._x,o=t._y,e=t._z,t=t._w;return this._x=n*t+a*s+i*e-r*o,this._y=i*t+a*o+r*s-n*e,this._z=r*t+a*e+n*o-i*s,this._w=a*t-n*s-i*o-r*e,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,i=this._y,r=this._z,a=this._w;let s=a*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=a,this._x=n,this._y=i,this._z=r,this;var o=1-s*s;if(o<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*i+t*this._y,this._z=l*r+t*this._z,this.normalize(),this._onChangeCallback(),this}e=Math.sqrt(o),l=Math.atan2(e,s),o=Math.sin((1-t)*l)/e,e=Math.sin(t*l)/e;return this._w=a*o+this._w*e,this._x=n*o+this._x*e,this._y=i*o+this._y*e,this._z=r*o+this._z*e,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Gt.prototype.isQuaternion=!0;class kt{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Wt.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Wt.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,n=this.y,i=this.z,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6]*i,this.y=e[1]*t+e[4]*n+e[7]*i,this.z=e[2]*t+e[5]*n+e[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,n=this.y,i=this.z,r=e.elements,e=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*e,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*e,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*e,this}applyQuaternion(e){var t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*i-s*n,c=o*n+s*t-r*i,e=o*i+r*n-a*t,i=-r*t-a*n-s*i;return this.x=l*o+i*-r+c*-s-e*-a,this.y=c*o+i*-a+e*-r-l*-s,this.z=e*o+i*-s+l*-a-c*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,n=this.y,i=this.z,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*i,this.y=e[1]*t+e[5]*n+e[9]*i,this.z=e[2]*t+e[6]*n+e[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var n=e.x,i=e.y,r=e.z,a=t.x,e=t.y,t=t.z;return this.x=i*t-r*e,this.y=r*a-n*t,this.z=n*e-i*a,this}projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);t=e.dot(this)/t;return this.copy(e).multiplyScalar(t)}projectOnPlane(e){return Vt.copy(this).projectOnVector(e),this.sub(Vt)}reflect(e){return this.sub(Vt.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;t=this.dot(e)/t;return Math.acos(Ct.clamp(t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){var i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}kt.prototype.isVector3=!0;const Vt=new kt,Wt=new Gt;class jt{constructor(e=new kt(1/0,1/0,1/0),t=new kt(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(n){let i=1/0,r=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.length;e<t;e+=3){var c=n[e],h=n[e+1],u=n[e+2];c<i&&(i=c),h<r&&(r=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(i,r,a),this.max.set(s,o,l),this}setFromBufferAttribute(n){let i=1/0,r=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.count;e<t;e++){var c=n.getX(e),h=n.getY(e),u=n.getZ(e);c<i&&(i=c),h<r&&(r=h),u<a&&(a=u),c>s&&(s=c),h>o&&(o=h),u>l&&(l=u)}return this.min.set(i,r,a),this.max.set(s,o,l),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=qt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new kt),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new kt),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),Yt.copy(t.boundingBox),Yt.applyMatrix4(e.matrixWorld),this.union(Yt));var n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new kt),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,qt),qt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return n=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(tn),nn.subVectors(this.max,tn),Zt.subVectors(e.a,tn),Jt.subVectors(e.b,tn),Kt.subVectors(e.c,tn),Qt.subVectors(Jt,Zt),$t.subVectors(Kt,Jt),en.subVectors(Zt,Kt),!!sn([0,-Qt.z,Qt.y,0,-$t.z,$t.y,0,-en.z,en.y,Qt.z,0,-Qt.x,$t.z,0,-$t.x,en.z,0,-en.x,-Qt.y,Qt.x,0,-$t.y,$t.x,0,-en.y,en.x,0],Zt,Jt,Kt,nn)&&(!!sn([1,0,0,0,1,0,0,0,1],Zt,Jt,Kt,nn)&&(rn.crossVectors(Qt,$t),sn([rn.x,rn.y,rn.z],Zt,Jt,Kt,nn))))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new kt),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=qt.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(qt).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Xt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xt)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}jt.prototype.isBox3=!0;const Xt=[new kt,new kt,new kt,new kt,new kt,new kt,new kt,new kt],qt=new kt,Yt=new jt,Zt=new kt,Jt=new kt,Kt=new kt,Qt=new kt,$t=new kt,en=new kt,tn=new kt,nn=new kt,rn=new kt,an=new kt;function sn(n,i,r,a,s){for(let e=0,t=n.length-3;e<=t;e+=3){an.fromArray(n,e);var o=s.x*Math.abs(an.x)+s.y*Math.abs(an.y)+s.z*Math.abs(an.z),l=i.dot(an),c=r.dot(an),h=a.dot(an);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const on=new jt,ln=new kt,cn=new kt,hn=new kt;class un{constructor(e=new kt,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(n,e){const i=this.center;void 0!==e?i.copy(e):on.setFromPoints(n).getCenter(i);let r=0;for(let e=0,t=n.length;e<t;e++)r=Math.max(r,i.distanceToSquared(n[e]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new kt),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new jt),this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){hn.subVectors(e,this.center);var t=hn.lengthSq();return t>this.radius*this.radius&&(t=.5*((e=Math.sqrt(t))-this.radius),this.center.add(hn.multiplyScalar(t/e)),this.radius+=t),this}union(e){return cn.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(ln.copy(e.center).add(cn)),this.expandByPoint(ln.copy(e.center).sub(cn)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const dn=new kt,pn=new kt,mn=new kt,fn=new kt,gn=new kt,vn=new kt,yn=new kt;class xn{constructor(e=new kt,t=new kt(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new kt),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,dn)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new kt),t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=dn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(dn.copy(this.direction).multiplyScalar(t).add(this.origin),dn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){pn.copy(e).add(t).multiplyScalar(.5),mn.copy(t).sub(e).normalize(),fn.copy(this.origin).sub(pn);var r=.5*e.distanceTo(t),a=-this.direction.dot(mn),s=fn.dot(this.direction),o=-fn.dot(mn),e=fn.lengthSq(),t=Math.abs(1-a*a);let l,c,h,u;return h=0<t?(l=a*o-s,c=a*s-o,u=r*t,0<=l?c>=-u?c<=u?(t=1/t,l*=t,c*=t,l*(l+a*c+2*s)+c*(a*l+c+2*o)+e):(c=r,l=Math.max(0,-(a*c+s)),-l*l+c*(c+2*o)+e):(c=-r,l=Math.max(0,-(a*c+s)),-l*l+c*(c+2*o)+e):c<=-u?(l=Math.max(0,-(-a*r+s)),c=0<l?-r:Math.min(Math.max(-r,-o),r),-l*l+c*(c+2*o)+e):c<=u?(l=0,c=Math.min(Math.max(-r,-o),r),c*(c+2*o)+e):(l=Math.max(0,-(a*r+s)),c=0<l?r:Math.min(Math.max(-r,-o),r),-l*l+c*(c+2*o)+e)):(c=0<a?-r:r,l=Math.max(0,-(a*c+s)),-l*l+c*(c+2*o)+e),n&&n.copy(this.direction).multiplyScalar(l).add(this.origin),i&&i.copy(mn).multiplyScalar(c).add(pn),h}intersectSphere(e,t){dn.subVectors(e.center,this.origin);var n=dn.dot(this.direction),i=dn.dot(dn)-n*n,e=e.radius*e.radius;if(e<i)return null;e=Math.sqrt(e-i),i=n-e,e=n+e;return i<0&&e<0?null:i<0?this.at(e,t):this.at(i,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;t=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=t?t:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,s,o;var l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return i=0<=l?(n=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=c?(r=(e.min.y-u.y)*c,(e.max.y-u.y)*c):(r=(e.max.y-u.y)*c,(e.min.y-u.y)*c),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),o=0<=h?(s=(e.min.z-u.z)*h,(e.max.z-u.z)*h):(s=(e.max.z-u.z)*h,(e.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(0<=n?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,dn)}intersectTriangle(e,t,n,i,r){gn.subVectors(t,e),vn.subVectors(n,e),yn.crossVectors(gn,vn);let a=this.direction.dot(yn),s;if(0<a){if(i)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}fn.subVectors(this.origin,e);i=s*this.direction.dot(vn.crossVectors(fn,vn));if(i<0)return null;e=s*this.direction.dot(gn.cross(fn));if(e<0)return null;if(i+e>a)return null;e=-s*fn.dot(yn);return e<0?null:this.at(e/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class _n{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,a,s,o,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new _n).fromArray(this.elements)}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements;var n=e.elements,i=1/bn.setFromMatrixColumn(e,0).length(),r=1/bn.setFromMatrixColumn(e,1).length(),e=1/bn.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements;var n,i,r,a,s,o,l,c,h,u,d,p=e.x,m=e.y,f=e.z,g=Math.cos(p),v=Math.sin(p),y=Math.cos(m),x=Math.sin(m),p=Math.cos(f),m=Math.sin(f);return"XYZ"===e.order?(n=g*p,r=g*m,i=v*p,f=v*m,t[0]=y*p,t[4]=-y*m,t[8]=x,t[1]=r+i*x,t[5]=n-f*x,t[9]=-v*y,t[2]=f-n*x,t[6]=i+r*x,t[10]=g*y):"YXZ"===e.order?(a=y*p,n=y*m,i=x*p,r=x*m,t[0]=a+r*v,t[4]=i*v-n,t[8]=g*x,t[1]=g*m,t[5]=g*p,t[9]=-v,t[2]=n*v-i,t[6]=r+a*v,t[10]=g*y):"ZXY"===e.order?(l=y*p,a=y*m,s=x*p,o=x*m,t[0]=l-o*v,t[4]=-g*m,t[8]=s+a*v,t[1]=a+s*v,t[5]=g*p,t[9]=o-l*v,t[2]=-g*x,t[6]=v,t[10]=g*y):"ZYX"===e.order?(s=g*p,o=g*m,c=v*p,l=v*m,t[0]=y*p,t[4]=c*x-o,t[8]=s*x+l,t[1]=y*m,t[5]=l*x+s,t[9]=o*x-c,t[2]=-x,t[6]=v*y,t[10]=g*y):"YZX"===e.order?(u=g*y,c=g*x,h=v*y,d=v*x,t[0]=y*p,t[4]=d-u*m,t[8]=h*m+c,t[1]=m,t[5]=g*p,t[9]=-v*p,t[2]=-x*p,t[6]=c*m+h,t[10]=u-d*m):"XZY"===e.order&&(h=g*y,u=g*x,d=v*y,e=v*x,t[0]=y*p,t[4]=-m,t[8]=x*p,t[1]=h*m+e,t[5]=g*p,t[9]=u*m-d,t[2]=d*m-u,t[6]=v*p,t[10]=e*m+h),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(wn,e,En)}lookAt(e,t,n){const i=this.elements;return An.subVectors(e,t),0===An.lengthSq()&&(An.z=1),An.normalize(),Tn.crossVectors(n,An),0===Tn.lengthSq()&&(1===Math.abs(n.z)?An.x+=1e-4:An.z+=1e-4,An.normalize(),Tn.crossVectors(n,An)),Tn.normalize(),Sn.crossVectors(An,Tn),i[0]=Tn.x,i[4]=Sn.x,i[8]=An.x,i[1]=Tn.y,i[5]=Sn.y,i[9]=An.y,i[2]=Tn.z,i[6]=Sn.z,i[10]=An.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var n=e.elements,i=t.elements;const r=this.elements;var a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=i[0],M=i[4],w=i[8],E=i[12],T=i[1],S=i[5],A=i[9],R=i[13],L=i[2],C=i[6],P=i[10],I=i[14],e=i[3],t=i[7],n=i[11],i=i[15];return r[0]=a*b+s*T+o*L+l*e,r[4]=a*M+s*S+o*C+l*t,r[8]=a*w+s*A+o*P+l*n,r[12]=a*E+s*R+o*I+l*i,r[1]=c*b+h*T+u*L+d*e,r[5]=c*M+h*S+u*C+d*t,r[9]=c*w+h*A+u*P+d*n,r[13]=c*E+h*R+u*I+d*i,r[2]=p*b+m*T+f*L+g*e,r[6]=p*M+m*S+f*C+g*t,r[10]=p*w+m*A+f*P+g*n,r[14]=p*E+m*R+f*I+g*i,r[3]=v*b+y*T+x*L+_*e,r[7]=v*M+y*S+x*C+_*t,r[11]=v*w+y*A+x*P+_*n,r[15]=v*E+y*R+x*I+_*i,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],s=e[5],o=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+r*o*h-i*l*h-r*s*u+n*l*u+i*s*d-n*o*d)+e[7]*(+t*o*d-t*l*u+r*a*u-i*a*d+i*l*c-r*o*c)+e[11]*(+t*l*h-t*s*d-r*a*h+n*a*d+r*s*c-n*l*c)+e[15]*(-i*s*c-t*o*h+t*s*u+i*a*h-n*a*u+n*o*c)}transpose(){const e=this.elements;var t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=h*f*l-m*u*l+m*o*d-s*f*d-h*o*g+s*u*g,y=p*u*l-c*f*l-p*o*d+a*f*d+c*o*g-a*u*g,x=c*m*l-p*h*l+p*s*d-a*m*d-c*s*g+a*h*g,_=p*h*o-c*m*o-p*s*u+a*m*u+c*s*f-a*h*f;var b=t*v+n*y+i*x+r*_;if(0==b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);b=1/b;return e[0]=v*b,e[1]=(m*u*r-h*f*r-m*i*d+n*f*d+h*i*g-n*u*g)*b,e[2]=(s*f*r-m*o*r+m*i*l-n*f*l-s*i*g+n*o*g)*b,e[3]=(h*o*r-s*u*r-h*i*l+n*u*l+s*i*d-n*o*d)*b,e[4]=y*b,e[5]=(c*f*r-p*u*r+p*i*d-t*f*d-c*i*g+t*u*g)*b,e[6]=(p*o*r-a*f*r-p*i*l+t*f*l+a*i*g-t*o*g)*b,e[7]=(a*u*r-c*o*r+c*i*l-t*u*l-a*i*d+t*o*d)*b,e[8]=x*b,e[9]=(p*h*r-c*m*r-p*n*d+t*m*d+c*n*g-t*h*g)*b,e[10]=(a*m*r-p*s*r+p*n*l-t*m*l-a*n*g+t*s*g)*b,e[11]=(c*s*r-a*h*r-c*n*l+t*h*l+a*n*d-t*s*d)*b,e[12]=_*b,e[13]=(c*m*i-p*h*i+p*n*u-t*m*u-c*n*f+t*h*f)*b,e[14]=(p*s*i-a*m*i-p*n*o+t*m*o+a*n*f-t*s*f)*b,e[15]=(a*h*i-c*s*i+c*n*o-t*h*o-a*n*u+t*s*u)*b,this}scale(e){const t=this.elements;var n=e.x,i=e.y,e=e.z;return t[0]*=n,t[4]*=i,t[8]*=e,t[1]*=n,t[5]*=i,t[9]*=e,t[2]*=n,t[6]*=i,t[10]*=e,t[3]*=n,t[7]*=i,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,e))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,s=e.y,o=e.z,t=r*a,e=r*s;return this.set(t*a+n,t*s-i*o,t*o+i*s,0,t*s+i*o,e*s+n,e*o-i*a,0,t*o-i*s,e*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements;var r=t._x,a=t._y,s=t._z,o=t._w,l=r+r,c=a+a,h=s+s,u=r*l,d=r*c,p=r*h,t=a*c,r=a*h,a=s*h,s=o*l,l=o*c,c=o*h,o=n.x,h=n.y,n=n.z;return i[0]=(1-(t+a))*o,i[1]=(d+c)*o,i[2]=(p-l)*o,i[3]=0,i[4]=(d-c)*h,i[5]=(1-(u+a))*h,i[6]=(r+s)*h,i[7]=0,i[8]=(p+l)*n,i[9]=(r-s)*n,i[10]=(1-(u+t))*n,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){var i=this.elements;let r=bn.set(i[0],i[1],i[2]).length();var a=bn.set(i[4],i[5],i[6]).length(),s=bn.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Mn.copy(this);var o=1/r,e=1/a,i=1/s;return Mn.elements[0]*=o,Mn.elements[1]*=o,Mn.elements[2]*=o,Mn.elements[4]*=e,Mn.elements[5]*=e,Mn.elements[6]*=e,Mn.elements[8]*=i,Mn.elements[9]*=i,Mn.elements[10]*=i,t.setFromRotationMatrix(Mn),n.x=r,n.y=a,n.z=s,this}makePerspective(e,t,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements;var o=2*r/(n-i),l=(t+e)/(t-e),n=(n+i)/(n-i),i=-(a+r)/(a-r),a=-2*a*r/(a-r);return s[0]=2*r/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=n,s[13]=0,s[2]=0,s[6]=0,s[10]=i,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,i,r,a){const s=this.elements;var o=1/(t-e),l=1/(n-i),c=1/(a-r),e=(t+e)*o,i=(n+i)*l,r=(a+r)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-e,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-i,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-r,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<16;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}_n.prototype.isMatrix4=!0;const bn=new kt,Mn=new _n,wn=new kt(0,0,0),En=new kt(1,1,1),Tn=new kt,Sn=new kt,An=new kt,Rn=new _n,Ln=new Gt;class Cn{constructor(e=0,t=0,n=0,i=Cn.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const i=Ct.clamp;var e=e.elements,r=e[0],a=e[4],s=e[8],o=e[1],l=e[5],c=e[9],h=e[2],u=e[6],d=e[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(i(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Rn.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Rn,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return Ln.setFromEuler(this),this.setFromQuaternion(Ln,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new kt(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Cn.prototype.isEuler=!0,Cn.DefaultOrder="XYZ",Cn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Pn{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let In=0;const Dn=new kt,Nn=new Gt,On=new _n,Fn=new kt,Bn=new kt,Un=new kt,Hn=new Gt,zn=new kt(1,0,0),Gn=new kt(0,1,0),kn=new kt(0,0,1),Vn={type:"added"},Wn={type:"removed"};function jn(){Object.defineProperty(this,"id",{value:In++}),this.uuid=Ct.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=jn.DefaultUp.clone();var e=new kt;const t=new Cn,n=new Gt;var i=new kt(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new _n},normalMatrix:{value:new It}}),this.matrix=new _n,this.matrixWorld=new _n,this.matrixAutoUpdate=jn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Pn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}jn.DefaultUp=new kt(0,1,0),jn.DefaultMatrixAutoUpdate=!0,jn.prototype=Object.assign(Object.create(At.prototype),{constructor:jn,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Nn.setFromAxisAngle(e,t),this.quaternion.multiply(Nn),this},rotateOnWorldAxis:function(e,t){return Nn.setFromAxisAngle(e,t),this.quaternion.premultiply(Nn),this},rotateX:function(e){return this.rotateOnAxis(zn,e)},rotateY:function(e){return this.rotateOnAxis(Gn,e)},rotateZ:function(e){return this.rotateOnAxis(kn,e)},translateOnAxis:function(e,t){return Dn.copy(e).applyQuaternion(this.quaternion),this.position.add(Dn.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(zn,e)},translateY:function(e){return this.translateOnAxis(Gn,e)},translateZ:function(e){return this.translateOnAxis(kn,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(On.copy(this.matrixWorld).invert())},lookAt:function(e,t,n){e.isVector3?Fn.copy(e):Fn.set(e,t,n);n=this.parent;this.updateWorldMatrix(!0,!1),Bn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?On.lookAt(Bn,Fn,this.up):On.lookAt(Fn,Bn,this.up),this.quaternion.setFromRotationMatrix(On),n&&(On.extractRotation(n.matrixWorld),Nn.setFromRotationMatrix(On),this.quaternion.premultiply(Nn.invert()))},add:function(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(Vn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this},remove:function(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Wn)),this},clear:function(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Wn)}return this.children.length=0,this},attach:function(e){return this.updateWorldMatrix(!0,!1),On.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),On.multiply(e.parent.matrixWorld)),e.applyMatrix4(On),this.add(e),e.updateWorldMatrix(!1,!0),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(n,i){if(this[n]===i)return this;for(let e=0,t=this.children.length;e<t;e++){const a=this.children[e];var r=a.getObjectByProperty(n,i);if(void 0!==r)return r}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new kt),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Gt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bn,e,Un),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new kt),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bn,Hn,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new kt),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(n){n(this);const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverse(n)},traverseVisible:function(n){if(!1!==this.visible){n(this);const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].traverseVisible(n)}},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n=!(this.matrixWorldNeedsUpdate=!1));const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(n)},updateWorldMatrix:function(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const i=this.children;for(let e=0,t=i.length;e<t;e++)i[e].updateWorldMatrix(!1,!0)}},toJSON:function(n){var e,t,i,r,a,s=void 0===n||"string"==typeof n;const o={};s&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},o.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const l={};function c(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(n)),t.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(l.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){l.geometry=c(n.geometries,this.geometry);var h=this.geometry.parameters;if(void 0!==h&&void 0!==h.shapes){var u=h.shapes;if(Array.isArray(u))for(let e=0,t=u.length;e<t;e++){var d=u[e];c(n.shapes,d)}else c(n.shapes,u)}}if(this.isSkinnedMesh&&(l.bindMode=this.bindMode,l.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(c(n.skeletons,this.skeleton),l.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const f=[];for(let e=0,t=this.material.length;e<t;e++)f.push(c(n.materials,this.material[e]));l.material=f}else l.material=c(n.materials,this.material);if(0<this.children.length){l.children=[];for(let e=0;e<this.children.length;e++)l.children.push(this.children[e].toJSON(n).object)}if(0<this.animations.length){l.animations=[];for(let e=0;e<this.animations.length;e++){var p=this.animations[e];l.animations.push(c(n.animations,p))}}return s&&(e=m(n.geometries),t=m(n.materials),i=m(n.textures),r=m(n.images),a=m(n.shapes),h=m(n.skeletons),s=m(n.animations),0<e.length&&(o.geometries=e),0<t.length&&(o.materials=t),0<i.length&&(o.textures=i),0<r.length&&(o.images=r),0<a.length&&(o.shapes=a),0<h.length&&(o.skeletons=h),0<s.length&&(o.animations=s)),o.object=l,o;function m(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const Xn=new kt,qn=new kt,Yn=new It;class Zn{constructor(e=new kt(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){t=Xn.subVectors(n,t).cross(qn.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(t,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new kt),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new kt);var n=e.delta(Xn),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;i=-(e.start.dot(this.normal)+this.constant)/i;return i<0||1<i?null:t.copy(n).multiplyScalar(i).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new kt),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||Yn.getNormalMatrix(e);const n=this.coplanarPoint(Xn).applyMatrix4(e);t=this.normal.applyMatrix3(t).normalize();return this.constant=-n.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Zn.prototype.isPlane=!0;const Jn=new kt,Kn=new kt,Qn=new kt,$n=new kt,ei=new kt,ti=new kt,ni=new kt,ii=new kt,ri=new kt,ai=new kt;class si{constructor(e=new kt,t=new kt,n=new kt){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new kt),i.subVectors(n,t),Jn.subVectors(e,t),i.cross(Jn);t=i.lengthSq();return 0<t?i.multiplyScalar(1/Math.sqrt(t)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Jn.subVectors(i,t),Kn.subVectors(n,t),Qn.subVectors(e,t);var a=Jn.dot(Jn),s=Jn.dot(Kn),i=Jn.dot(Qn),n=Kn.dot(Kn),e=Kn.dot(Qn),t=a*n-s*s;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new kt),0==t)return r.set(-2,-1,-1);t=1/t,n=(n*i-s*e)*t,t*=a*e-s*i;return r.set(1-n-t,t,n)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,$n),0<=$n.x&&0<=$n.y&&$n.x+$n.y<=1}static getUV(e,t,n,i,r,a,s,o){return this.getBarycoord(e,t,n,i,$n),o.set(0,0),o.addScaledVector(r,$n.x),o.addScaledVector(a,$n.y),o.addScaledVector(s,$n.z),o}static isFrontFacing(e,t,n,i){return Jn.subVectors(n,t),Kn.subVectors(e,t),Jn.cross(Kn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Jn.subVectors(this.c,this.b),Kn.subVectors(this.a,this.b),.5*Jn.cross(Kn).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new kt),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return si.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Zn),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return si.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return si.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return si.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return si.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new kt);var n=this.a,i=this.b,r=this.c;let a,s;ei.subVectors(i,n),ti.subVectors(r,n),ii.subVectors(e,n);var o=ei.dot(ii),l=ti.dot(ii);if(o<=0&&l<=0)return t.copy(n);ri.subVectors(e,i);var c=ei.dot(ri),h=ti.dot(ri);if(0<=c&&h<=c)return t.copy(i);var u=o*h-c*l;if(u<=0&&0<=o&&c<=0)return a=o/(o-c),t.copy(n).addScaledVector(ei,a);ai.subVectors(e,r);var d=ei.dot(ai),e=ti.dot(ai);if(0<=e&&d<=e)return t.copy(r);o=d*l-o*e;if(o<=0&&0<=l&&e<=0)return s=l/(l-e),t.copy(n).addScaledVector(ti,s);l=c*e-d*h;if(l<=0&&0<=h-c&&0<=d-e)return ni.subVectors(r,i),s=(h-c)/(h-c+(d-e)),t.copy(i).addScaledVector(ni,s);l=1/(l+o+u);return a=o*l,s=u*l,t.copy(n).addScaledVector(ei,a).addScaledVector(ti,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let oi=0;function li(){Object.defineProperty(this,"id",{value:oi++}),this.uuid=Ct.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=J,this.side=L,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=he,this.blendDst=ue,this.blendEquation=te,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=_e,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}li.prototype=Object.assign(Object.create(At.prototype),{constructor:li,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const n in e){var t=e[n];if(void 0!==t)if("shading"!==n){const i=this[n];void 0!==i?i&&i.isColor?i.set(t):i&&i.isVector3&&t&&t.isVector3?i.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;else console.warn("THREE.Material: '"+n+"' parameter is undefined.")}},toJSON:function(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}return n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==J&&(n.blending=this.blending),this.side!==L&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),0<this.alphaTest&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),1<this.wireframeLinewidth&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t&&(t=i(e.textures),e=i(e.images),0<t.length&&(n.textures=t),0<e.length&&(n.images=e)),n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){var i=t.length;n=new Array(i);for(let e=0;e!==i;++e)n[e]=t[e].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(li.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});const ci={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},hi={h:0,s:0,l:0},ui={h:0,s:0,l:0};function di(e,t,n){return n<0&&(n+=1),1<n&&--n,n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function pi(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function mi(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class fi{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){return e=Ct.euclideanModulo(e,1),t=Ct.clamp(t,0,1),n=Ct.clamp(n,0,1),0===t?this.r=this.g=this.b=n:(this.r=di(t=2*n-(n=n<=.5?n*(1+t):n+t-n*t),n,e+1/3),this.g=di(t,n,e),this.b=di(t,n,e-1/3)),this}setStyle(t){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){var s=parseFloat(e[1])/360,o=parseInt(e[2],10)/100,l=parseInt(e[3],10)/100;return n(e[4]),this.setHSL(s,o,l)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=i[1];r=e.length;if(3===r)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===r)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=ci[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){t=0<t?1/t:1;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=pi(e.r),this.g=pi(e.g),this.b=pi(e.b),this}copyLinearToSRGB(e){return this.r=mi(e.r),this.g=mi(e.g),this.b=mi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),a=Math.min(t,n,i);let s,o;var l=(a+r)/2;if(a===r)s=0,o=0;else{var c=r-a;switch(o=l<=.5?c/(r+a):c/(2-r-a),r){case t:s=(n-i)/c+(n<i?6:0);break;case n:s=(i-t)/c+2;break;case i:s=(t-n)/c+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(hi),hi.h+=e,hi.s+=t,hi.l+=n,this.setHSL(hi.h,hi.s,hi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(hi),e.getHSL(ui);var n=Ct.lerp(hi.h,ui.h,t),e=Ct.lerp(hi.s,ui.s,t),t=Ct.lerp(hi.l,ui.l,t);return this.setHSL(n,e,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}fi.NAMES=ci,fi.prototype.isColor=!0,fi.prototype.r=1,fi.prototype.g=1,fi.prototype.b=1;class gi extends li{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new fi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}gi.prototype.isMeshBasicMaterial=!0;const vi=new kt,yi=new Pt;function xi(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=Tt,this.updateRange={offset:0,count:-1},this.version=0}function _i(e,t,n){xi.call(this,new Int8Array(e),t,n)}function bi(e,t,n){xi.call(this,new Uint8Array(e),t,n)}function Mi(e,t,n){xi.call(this,new Uint8ClampedArray(e),t,n)}function wi(e,t,n){xi.call(this,new Int16Array(e),t,n)}function Ei(e,t,n){xi.call(this,new Uint16Array(e),t,n)}function Ti(e,t,n){xi.call(this,new Int32Array(e),t,n)}function Si(e,t,n){xi.call(this,new Uint32Array(e),t,n)}function Ai(e,t,n){xi.call(this,new Uint16Array(e),t,n)}function Ri(e,t,n){xi.call(this,new Float32Array(e),t,n)}function Li(e,t,n){xi.call(this,new Float64Array(e),t,n)}function Ci(n){if(0===n.length)return-1/0;let i=n[0];for(let e=1,t=n.length;e<t;++e)n[e]>i&&(i=n[e]);return i}Object.defineProperty(xi.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(xi.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(n,i,r){n*=this.itemSize,r*=i.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[n+e]=i.array[r+e];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new fi),i[r++]=e.r,i[r++]=e.g,i[r++]=e.b}return this},copyVector2sArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Pt),i[r++]=e.x,i[r++]=e.y}return this},copyVector3sArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new kt),i[r++]=e.x,i[r++]=e.y,i[r++]=e.z}return this},copyVector4sArray:function(n){const i=this.array;let r=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new Ut),i[r++]=e.x,i[r++]=e.y,i[r++]=e.z,i[r++]=e.w}return this},applyMatrix3:function(n){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)yi.fromBufferAttribute(this,e),yi.applyMatrix3(n),this.setXY(e,yi.x,yi.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)vi.fromBufferAttribute(this,e),vi.applyMatrix3(n),this.setXYZ(e,vi.x,vi.y,vi.z);return this},applyMatrix4:function(n){for(let e=0,t=this.count;e<t;e++)vi.x=this.getX(e),vi.y=this.getY(e),vi.z=this.getZ(e),vi.applyMatrix4(n),this.setXYZ(e,vi.x,vi.y,vi.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)vi.x=this.getX(e),vi.y=this.getY(e),vi.z=this.getZ(e),vi.applyNormalMatrix(n),this.setXYZ(e,vi.x,vi.y,vi.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)vi.x=this.getX(e),vi.y=this.getY(e),vi.z=this.getZ(e),vi.transformDirection(n),this.setXYZ(e,vi.x,vi.y,vi.z);return this},set:function(e,t=0){return this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Tt&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}),(_i.prototype=Object.create(xi.prototype)).constructor=_i,(bi.prototype=Object.create(xi.prototype)).constructor=bi,(Mi.prototype=Object.create(xi.prototype)).constructor=Mi,(wi.prototype=Object.create(xi.prototype)).constructor=wi,Ei.prototype=Object.create(xi.prototype),Ei.prototype.constructor=Ei,(Ti.prototype=Object.create(xi.prototype)).constructor=Ti,Si.prototype=Object.create(xi.prototype),Si.prototype.constructor=Si,((Ai.prototype=Object.create(xi.prototype)).constructor=Ai).prototype.isFloat16BufferAttribute=!0,(Ri.prototype=Object.create(xi.prototype)).constructor=Ri,(Li.prototype=Object.create(xi.prototype)).constructor=Li;const Pi={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ii(e,t){return new Pi[e](t)}let Di=0;const Ni=new _n,Oi=new jn,Fi=new kt,Bi=new jt,Ui=new jt,Hi=new kt;function zi(){Object.defineProperty(this,"id",{value:Di++}),this.uuid=Ct.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}zi.prototype=Object.assign(Object.create(At.prototype),{constructor:zi,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(65535<Ci(e)?Si:Ei)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},hasAttribute:function(e){return void 0!==this.attributes[e]},addGroup:function(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;var i;void 0!==n&&(i=(new It).getNormalMatrix(e),n.applyNormalMatrix(i),n.needsUpdate=!0);const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return Ni.makeRotationX(e),this.applyMatrix4(Ni),this},rotateY:function(e){return Ni.makeRotationY(e),this.applyMatrix4(Ni),this},rotateZ:function(e){return Ni.makeRotationZ(e),this.applyMatrix4(Ni),this},translate:function(e,t,n){return Ni.makeTranslation(e,t,n),this.applyMatrix4(Ni),this},scale:function(e,t,n){return Ni.makeScale(e,t,n),this.applyMatrix4(Ni),this},lookAt:function(e){return Oi.lookAt(e),Oi.updateMatrix(),this.applyMatrix4(Oi.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Fi).negate(),this.translate(Fi.x,Fi.y,Fi.z),this},setFromPoints:function(n){const i=[];for(let e=0,t=n.length;e<t;e++){var r=n[e];i.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Ri(i,3)),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new jt);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new kt(-1/0,-1/0,-1/0),new kt(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(let e=0,t=n.length;e<t;e++){var i=n[e];Bi.setFromBufferAttribute(i),this.morphTargetsRelative?(Hi.addVectors(this.boundingBox.min,Bi.min),this.boundingBox.expandByPoint(Hi),Hi.addVectors(this.boundingBox.max,Bi.max),this.boundingBox.expandByPoint(Hi)):(this.boundingBox.expandByPoint(Bi.min),this.boundingBox.expandByPoint(Bi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new un);var i=this.attributes.position,r=this.morphAttributes.position;if(i&&i.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new kt,1/0);if(i){const l=this.boundingSphere.center;if(Bi.setFromBufferAttribute(i),r)for(let e=0,t=r.length;e<t;e++){var a=r[e];Ui.setFromBufferAttribute(a),this.morphTargetsRelative?(Hi.addVectors(Bi.min,Ui.min),Bi.expandByPoint(Hi),Hi.addVectors(Bi.max,Ui.max),Bi.expandByPoint(Hi)):(Bi.expandByPoint(Ui.min),Bi.expandByPoint(Ui.max))}Bi.getCenter(l);let n=0;for(let e=0,t=i.count;e<t;e++)Hi.fromBufferAttribute(i,e),n=Math.max(n,l.distanceToSquared(Hi));if(r)for(let e=0,t=r.length;e<t;e++){var s=r[e],o=this.morphTargetsRelative;for(let e=0,t=s.count;e<t;e++)Hi.fromBufferAttribute(s,e),o&&(Fi.fromBufferAttribute(i,e),Hi.add(Fi)),n=Math.max(n,l.distanceToSquared(Hi))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var i=e.array;const h=t.position.array,u=t.normal.array,d=t.uv.array;var r=h.length/3;void 0===t.tangent&&this.setAttribute("tangent",new xi(new Float32Array(4*r),4));const p=t.tangent.array,m=[],f=[];for(let e=0;e<r;e++)m[e]=new kt,f[e]=new kt;const g=new kt,v=new kt,y=new kt,x=new Pt,_=new Pt,b=new Pt,M=new kt,w=new kt;let n=this.groups;0===n.length&&(n=[{start:0,count:i.length}]);for(let e=0,t=n.length;e<t;++e){var a=n[e],s=a.start;for(let e=s,t=s+a.count;e<t;e+=3)!function(e,t,n){g.fromArray(h,3*e),v.fromArray(h,3*t),y.fromArray(h,3*n),x.fromArray(d,2*e),_.fromArray(d,2*t),b.fromArray(d,2*n),v.sub(g),y.sub(g),_.sub(x),b.sub(x);var i=1/(_.x*b.y-b.x*_.y);isFinite(i)&&(M.copy(v).multiplyScalar(b.y).addScaledVector(y,-_.y).multiplyScalar(i),w.copy(y).multiplyScalar(_.x).addScaledVector(v,-b.x).multiplyScalar(i),m[e].add(M),m[t].add(M),m[n].add(M),f[e].add(w),f[t].add(w),f[n].add(w))}(i[e+0],i[e+1],i[e+2])}const E=new kt,T=new kt,S=new kt,A=new kt;for(let e=0,t=n.length;e<t;++e){var o=n[e],l=o.start;for(let e=l,t=l+o.count;e<t;e+=3)c(i[e+0]),c(i[e+1]),c(i[e+2])}function c(e){S.fromArray(u,3*e),A.copy(S);var t=m[e];E.copy(t),E.sub(S.multiplyScalar(S.dot(t))).normalize(),T.crossVectors(A,t);t=T.dot(f[e])<0?-1:1;p[4*e]=E.x,p[4*e+1]=E.y,p[4*e+2]=E.z,p[4*e+3]=t}}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")},computeVertexNormals:function(){const i=this.index;var r=this.getAttribute("position");if(void 0!==r){let n=this.getAttribute("normal");if(void 0===n)n=new xi(new Float32Array(3*r.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const l=new kt,c=new kt,h=new kt,u=new kt,d=new kt,p=new kt,m=new kt,f=new kt;if(i)for(let e=0,t=i.count;e<t;e+=3){var a=i.getX(e+0),s=i.getX(e+1),o=i.getX(e+2);l.fromBufferAttribute(r,a),c.fromBufferAttribute(r,s),h.fromBufferAttribute(r,o),m.subVectors(h,c),f.subVectors(l,c),m.cross(f),u.fromBufferAttribute(n,a),d.fromBufferAttribute(n,s),p.fromBufferAttribute(n,o),u.add(m),d.add(m),p.add(m),n.setXYZ(a,u.x,u.y,u.z),n.setXYZ(s,d.x,d.y,d.z),n.setXYZ(o,p.x,p.y,p.z)}else for(let e=0,t=r.count;e<t;e+=3)l.fromBufferAttribute(r,e+0),c.fromBufferAttribute(r,e+1),h.fromBufferAttribute(r,e+2),m.subVectors(h,c),f.subVectors(l,c),m.cross(f),n.setXYZ(e+0,m.x,m.y,m.z),n.setXYZ(e+1,m.x,m.y,m.z),n.setXYZ(e+2,m.x,m.y,m.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(const s in n)if(void 0!==e.attributes[s]){const o=n[s].array;var i=e.attributes[s],r=i.array,i=i.itemSize*t,a=Math.min(r.length,o.length-i);for(let e=0,t=i;e<a;e++,t++)o[t]=r[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)},normalizeNormals:function(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)Hi.fromBufferAttribute(n,e),Hi.normalize(),n.setXYZ(e,Hi.x,Hi.y,Hi.z)},toNonIndexed:function(){function n(e,n){const i=e.array;var r=e.itemSize,e=e.normalized;const a=new i.constructor(n.length*r);let s=0,o=0;for(let e=0,t=n.length;e<t;e++){s=n[e]*r;for(let e=0;e<r;e++)a[o++]=i[s++]}return new xi(a,r,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new zi;var r=this.index.array,e=this.attributes;for(const h in e){var t=n(e[h],r);i.setAttribute(h,t)}var a=this.morphAttributes;for(const u in a){const d=[];var s=a[u];for(let e=0,t=s.length;e<t;e++){var o=n(s[e],r);d.push(o)}i.morphAttributes[u]=d}i.morphTargetsRelative=this.morphTargetsRelative;var l=this.groups;for(let e=0,t=l.length;e<t;e++){var c=l[e];i.addGroup(c.start,c.count,c.materialIndex)}return i},toJSON:function(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),0<Object.keys(this.userData).length&&(n.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const l in e)void 0!==e[l]&&(n[l]=e[l]);return n}n.data={attributes:{}};var t=this.index;null!==t&&(n.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});var i=this.attributes;for(const c in i){const h=i[c];n.data.attributes[c]=h.toJSON(n.data)}const r={};let a=!1;for(const u in this.morphAttributes){var s=this.morphAttributes[u];const d=[];for(let e=0,t=s.length;e<t;e++){const p=s[e];d.push(p.toJSON(n.data))}0<d.length&&(r[u]=d,a=!0)}a&&(n.data.morphAttributes=r,n.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups;0<t.length&&(n.data.groups=JSON.parse(JSON.stringify(t)));const o=this.boundingSphere;return null!==o&&(n.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),n},clone:function(){return(new zi).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var n={};this.name=e.name;const t=e.index;null!==t&&this.setIndex(t.clone(n));var i=e.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(n))}var r=e.morphAttributes;for(const u in r){const d=[],p=r[u];for(let e=0,t=p.length;e<t;e++)d.push(p[e].clone(n));this.morphAttributes[u]=d}this.morphTargetsRelative=e.morphTargetsRelative;var a=e.groups;for(let e=0,t=a.length;e<t;e++){var s=a[e];this.addGroup(s.start,s.count,s.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Gi=new _n,ki=new xn,Vi=new un,Wi=new kt,ji=new kt,Xi=new kt,qi=new kt,Yi=new kt,Zi=new kt,Ji=new kt,Ki=new kt,Qi=new kt,$i=new Pt,er=new Pt,tr=new Pt,nr=new kt,ir=new kt;function rr(e=new zi,t=new gi){jn.call(this),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}function ar(e,t,n,i,r,a,s,o,l,c,h,u){Wi.fromBufferAttribute(r,c),ji.fromBufferAttribute(r,h),Xi.fromBufferAttribute(r,u);var d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){Ji.set(0,0,0),Ki.set(0,0,0),Qi.set(0,0,0);for(let e=0,t=a.length;e<t;e++){var p=d[e],m=a[e];0!==p&&(qi.fromBufferAttribute(m,c),Yi.fromBufferAttribute(m,h),Zi.fromBufferAttribute(m,u),s?(Ji.addScaledVector(qi,p),Ki.addScaledVector(Yi,p),Qi.addScaledVector(Zi,p)):(Ji.addScaledVector(qi.sub(Wi),p),Ki.addScaledVector(Yi.sub(ji),p),Qi.addScaledVector(Zi.sub(Xi),p)))}Wi.add(Ji),ji.add(Ki),Xi.add(Qi)}e.isSkinnedMesh&&t.skinning&&(e.boneTransform(c,Wi),e.boneTransform(h,ji),e.boneTransform(u,Xi));const f=function(e,t,n,i,r,a,s,o){let l;return l=t.side===q?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,t.side!==Y,o),null===l?null:(ir.copy(o),ir.applyMatrix4(e.matrixWorld),(o=n.ray.origin.distanceTo(ir))<n.near||o>n.far?null:{distance:o,point:ir.clone(),object:e})}(e,t,n,i,Wi,ji,Xi,nr);return f&&(o&&($i.fromBufferAttribute(o,c),er.fromBufferAttribute(o,h),tr.fromBufferAttribute(o,u),f.uv=si.getUV(nr,Wi,ji,Xi,$i,er,tr,new Pt)),l&&($i.fromBufferAttribute(l,c),er.fromBufferAttribute(l,h),tr.fromBufferAttribute(l,u),f.uv2=si.getUV(nr,Wi,ji,Xi,$i,er,tr,new Pt)),l={a:c,b:h,c:u,normal:new kt,materialIndex:0},si.getNormal(Wi,ji,Xi,l.normal),f.face=l),f}rr.prototype=Object.assign(Object.create(jn.prototype),{constructor:rr,isMesh:!0,copy:function(e){return jn.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){var r=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(i,r){const e=this.geometry;var a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),Vi.copy(e.boundingSphere),Vi.applyMatrix4(t),!1!==i.ray.intersectsSphere(Vi)&&(Gi.copy(t).invert(),ki.copy(i.ray).applyMatrix4(Gi),null===e.boundingBox||!1!==ki.intersectsBox(e.boundingBox)))){let n;if(e.isBufferGeometry){const L=e.index;var s=e.attributes.position,o=e.morphAttributes.position,l=e.morphTargetsRelative,c=e.attributes.uv,h=e.attributes.uv2,u=e.groups,d=e.drawRange;if(null!==L)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var p=u[e],m=a[p.materialIndex];for(let e=Math.max(p.start,d.start),t=Math.min(p.start+p.count,d.start+d.count);e<t;e+=3){var f=L.getX(e),g=L.getX(e+1),v=L.getX(e+2);n=ar(this,m,i,ki,s,o,l,c,h,f,g,v),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=p.materialIndex,r.push(n))}}else for(let e=Math.max(0,d.start),t=Math.min(L.count,d.start+d.count);e<t;e+=3){var y=L.getX(e),x=L.getX(e+1),_=L.getX(e+2);n=ar(this,a,i,ki,s,o,l,c,h,y,x,_),n&&(n.faceIndex=Math.floor(e/3),r.push(n))}else if(void 0!==s)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var b=u[e],M=a[b.materialIndex];for(let e=Math.max(b.start,d.start),t=Math.min(b.start+b.count,d.start+d.count);e<t;e+=3){var w=e,E=e+1,T=e+2;n=ar(this,M,i,ki,s,o,l,c,h,w,E,T),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=b.materialIndex,r.push(n))}}else for(let e=Math.max(0,d.start),t=Math.min(s.count,d.start+d.count);e<t;e+=3){var S=e,A=e+1,R=e+2;n=ar(this,a,i,ki,s,o,l,c,h,S,A,R),n&&(n.faceIndex=Math.floor(e/3),r.push(n))}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class sr extends zi{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const A=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const R=[],L=[],C=[],P=[];let I=0,D=0;function s(n,i,r,a,s,e,t,o,l,c,h){var u=e/l,d=t/c,p=e/2,m=t/2,f=o/2,g=l+1,v=c+1;let y=0,x=0;const _=new kt;for(let t=0;t<v;t++){var b=t*d-m;for(let e=0;e<g;e++){var M=e*u-p;_[n]=M*a,_[i]=b*s,_[r]=f,L.push(_.x,_.y,_.z),_[n]=0,_[i]=0,_[r]=0<o?1:-1,C.push(_.x,_.y,_.z),P.push(e/l),P.push(1-t/c),y+=1}}for(let t=0;t<c;t++)for(let e=0;e<l;e++){var w=I+e+g*t,E=I+e+g*(t+1),T=I+(e+1)+g*(t+1),S=I+(e+1)+g*t;R.push(w,E,S),R.push(E,T,S),x+=6}A.addGroup(D,x,h),D+=x,I+=y}s("z","y","x",-1,-1,n,t,e,a,r,0),s("z","y","x",1,-1,n,t,-e,a,r,1),s("x","z","y",1,1,e,n,t,i,a,2),s("x","z","y",1,-1,e,n,-t,i,a,3),s("x","y","z",1,-1,e,t,n,i,r,4),s("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(R),this.setAttribute("position",new Ri(L,3)),this.setAttribute("normal",new Ri(C,3)),this.setAttribute("uv",new Ri(P,2))}}function or(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function lr(t){const n={};for(let e=0;e<t.length;e++){var i=or(t[e]);for(const r in i)n[r]=i[r]}return n}const cr={clone:or,merge:lr};var hr="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",ur="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function dr(e){li.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=hr,this.fragmentShader=ur,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function pr(){jn.call(this),this.type="Camera",this.matrixWorldInverse=new _n,this.projectionMatrix=new _n,this.projectionMatrixInverse=new _n}function mr(e=50,t=1,n=.1,i=2e3){pr.call(this),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}((dr.prototype=Object.create(li.prototype)).constructor=dr).prototype.isShaderMaterial=!0,dr.prototype.copy=function(e){return li.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=or(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},dr.prototype.toJSON=function(e){const t=li.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const a in this.extensions)!0===this.extensions[a]&&(n[a]=!0);return 0<Object.keys(n).length&&(t.extensions=n),t},pr.prototype=Object.assign(Object.create(jn.prototype),{constructor:pr,isCamera:!0,copy:function(e,t){return jn.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new kt),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){jn.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){jn.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),mr.prototype=Object.assign(Object.create(pr.prototype),{constructor:mr,isPerspectiveCamera:!0,copy:function(e,t){return pr.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){e=.5*this.getFilmHeight()/e;this.fov=2*Ct.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(.5*Ct.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Ct.RAD2DEG*Math.atan(Math.tan(.5*Ct.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near;let t=e*Math.tan(.5*Ct.DEG2RAD*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;var a,s=this.view;null!==this.view&&this.view.enabled&&(a=s.fullWidth,o=s.fullHeight,r+=s.offsetX*i/a,t-=s.offsetY*n/o,i*=s.width/a,n*=s.height/o);var o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){const t=jn.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});class fr extends jn{constructor(e,t,n){if(super(),this.type="CubeCamera",!0===n.isWebGLCubeRenderTarget){this.renderTarget=n;const i=new mr(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new kt(1,0,0)),this.add(i);const r=new mr(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new kt(-1,0,0)),this.add(r);const a=new mr(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new kt(0,1,0)),this.add(a);const s=new mr(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new kt(0,-1,0)),this.add(s);const o=new mr(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new kt(0,0,1)),this.add(o);const l=new mr(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new kt(0,0,-1)),this.add(l)}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget;var[i,r,a,s,o,l]=this.children,c=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;var u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c}}class gr extends Ft{constructor(e,t,n,i,r,a,s,o,l,c){super(e=void 0!==e?e:[],t=void 0!==t?t:w,n,i,r,a,s=void 0!==s?s:Fe,o,l,c),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}gr.prototype.isCubeTexture=!0;class vr extends Ht{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new gr(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Ae,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Be,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new sr(5,5,5);const r=new dr({name:"CubemapFromEquirect",uniforms:or(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:q,blending:Z});r.uniforms.tEquirect.value=t;const a=new rr(i,r);i=t.minFilter;t.minFilter===Le&&(t.minFilter=Ae);const s=new fr(1,10,this);return s.update(e,a),t.minFilter=i,a.geometry.dispose(),a.material.dispose(),this}clear(t,n,i,r){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(n,i,r);t.setRenderTarget(e)}}vr.prototype.isWebGLCubeRenderTarget=!0;class yr extends Ft{constructor(e,t,n,i,r,a,s,o,l,c,h,u){super(null,a,s,o,l,c,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==l?l:k,this.minFilter=void 0!==c?c:k,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}yr.prototype.isDataTexture=!0;const xr=new un,_r=new kt;class br{constructor(e=new Zn,t=new Zn,n=new Zn,i=new Zn,r=new Zn,a=new Zn){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const n=this.planes;for(let e=0;e<6;e++)n[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){const t=this.planes;var n=e.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],d=n[9],p=n[10],m=n[11],f=n[12],g=n[13],e=n[14],n=n[15];return t[0].setComponents(s-i,h-o,m-u,n-f).normalize(),t[1].setComponents(s+i,h+o,m+u,n+f).normalize(),t[2].setComponents(s+r,h+l,m+d,n+g).normalize(),t[3].setComponents(s-r,h-l,m-d,n-g).normalize(),t[4].setComponents(s-a,h-c,m-p,n-e).normalize(),t[5].setComponents(s+a,h+c,m+p,n+e).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),xr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(xr)}intersectsSprite(e){return xr.center.set(0,0,0),xr.radius=.7071067811865476,xr.applyMatrix4(e.matrixWorld),this.intersectsSphere(xr)}intersectsSphere(e){const t=this.planes;var n=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){var n=this.planes;for(let e=0;e<6;e++){const i=n[e];if(_r.x=(0<i.normal.x?t.max:t.min).x,_r.y=(0<i.normal.y?t.max:t.min).y,_r.z=(0<i.normal.z?t.max:t.min).z,i.distanceToPoint(_r)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let e=0;e<6;e++)if(n[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Mr(){let n=null,e=!1,i=null,r=null;function a(e,t){i(e,t),r=n.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==i&&(r=n.requestAnimationFrame(a),e=!0)},stop:function(){n.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(e){i=e},setContext:function(e){n=e}}}function wr(s,e){const o=e.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=r.get(e);t&&(s.deleteBuffer(t.buffer),r.delete(e))},update:function(e,t){if(e.isGLBufferAttribute){var n=r.get(e);(!n||n.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}else{e.isInterleavedBufferAttribute&&(e=e.data);const i=r.get(e);void 0===i?r.set(e,function(e,t){var n=e.array,i=e.usage,r=s.createBuffer();s.bindBuffer(t,r),s.bufferData(t,n,i),e.onUploadCallback();let a=s.FLOAT;return n instanceof Float32Array?a=s.FLOAT:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?e.isFloat16BufferAttribute?o?a=s.HALF_FLOAT:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=s.UNSIGNED_SHORT:n instanceof Int16Array?a=s.SHORT:n instanceof Uint32Array?a=s.UNSIGNED_INT:n instanceof Int32Array?a=s.INT:n instanceof Int8Array?a=s.BYTE:n instanceof Uint8Array&&(a=s.UNSIGNED_BYTE),{buffer:r,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,t)):i.version<e.version&&(function(e,t,n){const i=t.array,r=t.updateRange;s.bindBuffer(n,e),-1===r.count?s.bufferSubData(n,0,i):(o?s.bufferSubData(n,r.offset*i.BYTES_PER_ELEMENT,i,r.offset,r.count):s.bufferSubData(n,r.offset*i.BYTES_PER_ELEMENT,i.subarray(r.offset,r.offset+r.count)),r.count=-1)}(i.buffer,e,t),i.version=e.version)}}}}class Er extends zi{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};var r=e/2,a=t/2,s=Math.floor(n),o=Math.floor(i),l=s+1,c=o+1,h=e/s,u=t/o;const d=[],p=[],m=[],f=[];for(let t=0;t<c;t++){var g=t*u-a;for(let e=0;e<l;e++){var v=e*h-r;p.push(v,-g,0),m.push(0,0,1),f.push(e/s),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var y=e+l*t,x=e+l*(t+1),_=e+1+l*(t+1),b=e+1+l*t;d.push(y,x,b),d.push(x,_,b)}this.setIndex(d),this.setAttribute("position",new Ri(p,3)),this.setAttribute("normal",new Ri(m,3)),this.setAttribute("uv",new Ri(f,2))}}const Tr={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Sr={common:{diffuse:{value:new fi(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new It},uv2Transform:{value:new It},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Pt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fi(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fi(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new It}},sprite:{diffuse:{value:new fi(15658734)},opacity:{value:1},center:{value:new Pt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new It}}},Ar={basic:{uniforms:lr([Sr.common,Sr.specularmap,Sr.envmap,Sr.aomap,Sr.lightmap,Sr.fog]),vertexShader:Tr.meshbasic_vert,fragmentShader:Tr.meshbasic_frag},lambert:{uniforms:lr([Sr.common,Sr.specularmap,Sr.envmap,Sr.aomap,Sr.lightmap,Sr.emissivemap,Sr.fog,Sr.lights,{emissive:{value:new fi(0)}}]),vertexShader:Tr.meshlambert_vert,fragmentShader:Tr.meshlambert_frag},phong:{uniforms:lr([Sr.common,Sr.specularmap,Sr.envmap,Sr.aomap,Sr.lightmap,Sr.emissivemap,Sr.bumpmap,Sr.normalmap,Sr.displacementmap,Sr.fog,Sr.lights,{emissive:{value:new fi(0)},specular:{value:new fi(1118481)},shininess:{value:30}}]),vertexShader:Tr.meshphong_vert,fragmentShader:Tr.meshphong_frag},standard:{uniforms:lr([Sr.common,Sr.envmap,Sr.aomap,Sr.lightmap,Sr.emissivemap,Sr.bumpmap,Sr.normalmap,Sr.displacementmap,Sr.roughnessmap,Sr.metalnessmap,Sr.fog,Sr.lights,{emissive:{value:new fi(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Tr.meshphysical_vert,fragmentShader:Tr.meshphysical_frag},toon:{uniforms:lr([Sr.common,Sr.aomap,Sr.lightmap,Sr.emissivemap,Sr.bumpmap,Sr.normalmap,Sr.displacementmap,Sr.gradientmap,Sr.fog,Sr.lights,{emissive:{value:new fi(0)}}]),vertexShader:Tr.meshtoon_vert,fragmentShader:Tr.meshtoon_frag},matcap:{uniforms:lr([Sr.common,Sr.bumpmap,Sr.normalmap,Sr.displacementmap,Sr.fog,{matcap:{value:null}}]),vertexShader:Tr.meshmatcap_vert,fragmentShader:Tr.meshmatcap_frag},points:{uniforms:lr([Sr.points,Sr.fog]),vertexShader:Tr.points_vert,fragmentShader:Tr.points_frag},dashed:{uniforms:lr([Sr.common,Sr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Tr.linedashed_vert,fragmentShader:Tr.linedashed_frag},depth:{uniforms:lr([Sr.common,Sr.displacementmap]),vertexShader:Tr.depth_vert,fragmentShader:Tr.depth_frag},normal:{uniforms:lr([Sr.common,Sr.bumpmap,Sr.normalmap,Sr.displacementmap,{opacity:{value:1}}]),vertexShader:Tr.normal_vert,fragmentShader:Tr.normal_frag},sprite:{uniforms:lr([Sr.sprite,Sr.fog]),vertexShader:Tr.sprite_vert,fragmentShader:Tr.sprite_frag},background:{uniforms:{uvTransform:{value:new It},t2D:{value:null}},vertexShader:Tr.background_vert,fragmentShader:Tr.background_frag},cube:{uniforms:lr([Sr.envmap,{opacity:{value:1}}]),vertexShader:Tr.cube_vert,fragmentShader:Tr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Tr.equirect_vert,fragmentShader:Tr.equirect_frag},distanceRGBA:{uniforms:lr([Sr.common,Sr.displacementmap,{referencePosition:{value:new kt},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Tr.distanceRGBA_vert,fragmentShader:Tr.distanceRGBA_frag},shadow:{uniforms:lr([Sr.lights,Sr.fog,{color:{value:new fi(0)},opacity:{value:1}}]),vertexShader:Tr.shadow_vert,fragmentShader:Tr.shadow_frag}};function Rr(s,o,n,l,i){const c=new fi(0);let h=0,u,d,p=null,m=0,f=null;function g(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return c},setClearColor:function(e,t=1){c.set(e),h=t,g(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(e){h=e,g(c,h)},render:function(e,t,n,i){let r=!0===t.isScene?t.background:null;r&&r.isTexture&&(r=o.get(r));const a=s.xr;(t=a.getSession&&a.getSession())&&"additive"===t.environmentBlendMode&&(r=null),null===r?g(c,h):r&&r.isColor&&(g(r,1),i=!0),(s.autoClear||i)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),r&&(r.isCubeTexture||r.mapping===T)?(void 0===d&&(d=new rr(new sr(1,1,1),new dr({name:"BackgroundCubeMaterial",uniforms:or(Ar.cube.uniforms),vertexShader:Ar.cube.vertexShader,fragmentShader:Ar.cube.fragmentShader,side:q,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),l.update(d)),d.material.uniforms.envMap.value=r,d.material.uniforms.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,p===r&&m===r.version&&f===s.toneMapping||(d.material.needsUpdate=!0,p=r,m=r.version,f=s.toneMapping),e.unshift(d,d.geometry,d.material,0,0,null)):r&&r.isTexture&&(void 0===u&&(u=new rr(new Er(2,2),new dr({name:"BackgroundMaterial",uniforms:or(Ar.background.uniforms),vertexShader:Ar.background.vertexShader,fragmentShader:Ar.background.fragmentShader,side:L,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),l.update(u)),u.material.uniforms.t2D.value=r,!0===r.matrixAutoUpdate&&r.updateMatrix(),u.material.uniforms.uvTransform.value.copy(r.matrix),p===r&&m===r.version&&f===s.toneMapping||(u.material.needsUpdate=!0,p=r,m=r.version,f=s.toneMapping),e.unshift(u,u.geometry,u.material,0,0,null))}}}function Lr(b,M,w,E){const r=b.getParameter(b.MAX_VERTEX_ATTRIBS),o=E.isWebGL2?null:M.get("OES_vertex_array_object"),l=E.isWebGL2||null!==o,c={},e=d(null);let h=e;function u(e){return E.isWebGL2?b.bindVertexArray(e):o.bindVertexArrayOES(e)}function a(e){return E.isWebGL2?b.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function d(e){const t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function T(){const n=h.newAttributes;for(let e=0,t=n.length;e<t;e++)n[e]=0}function S(e){A(e,0)}function A(e,t){const n=h.newAttributes,i=h.enabledAttributes,r=h.attributeDivisors;if(n[e]=1,0===i[e]&&(b.enableVertexAttribArray(e),i[e]=1),r[e]!==t){const a=E.isWebGL2?b:M.get("ANGLE_instanced_arrays");a[E.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),r[e]=t}}function R(){var n=h.newAttributes;const i=h.enabledAttributes;for(let e=0,t=i.length;e<t;e++)i[e]!==n[e]&&(b.disableVertexAttribArray(e),i[e]=0)}function L(e,t,n,i,r,a){!0!==E.isWebGL2||n!==b.INT&&n!==b.UNSIGNED_INT?b.vertexAttribPointer(e,t,n,i,r,a):b.vertexAttribIPointer(e,t,n,r,a)}function s(){t(),h!==e&&(h=e,u(h.object))}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,t,n,i,r){let a=!1;var s;l?(s=function(e,t,n){n=!0===n.wireframe;let i=c[e.id];void 0===i&&(i={},c[e.id]=i);let r=i[t.id];void 0===r&&(r={},i[t.id]=r);let a=r[n];void 0===a&&(a=d(E.isWebGL2?b.createVertexArray():o.createVertexArrayOES()),r[n]=a);return a}(i,n,t),h!==s&&(h=s,u(h.object)),a=function(e,t){var n=h.attributes,i=e.attributes;let r=0;for(const o in i){var a=n[o],s=i[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;r++}return h.attributesNum!==r||h.index!==t}(i,r),a&&function(e,t){const n={},i=e.attributes;let r=0;for(const s in i){var a=i[s];const o={};(o.attribute=a).data&&(o.data=a.data),n[s]=o,r++}h.attributes=n,h.attributesNum=r,h.index=t}(i,r)):(s=!0===t.wireframe,h.geometry===i.id&&h.program===n.id&&h.wireframe===s||(h.geometry=i.id,h.program=n.id,h.wireframe=s,a=!0)),!0===e.isInstancedMesh&&(a=!0),null!==r&&w.update(r,b.ELEMENT_ARRAY_BUFFER),a&&(function(e,t,n,i){if(!1===E.isWebGL2&&(e.isInstancedMesh||i.isInstancedBufferGeometry)&&null===M.get("ANGLE_instanced_arrays"))return;T();var r=i.attributes,a=n.getAttributes(),s=t.defaultAttributeValues;for(const _ in a){var o=a[_];if(0<=o){var l=r[_];if(void 0!==l){var c,h,u,d,p,m=l.normalized,f=l.itemSize,g=w.get(l);void 0!==g&&(c=g.buffer,h=g.type,u=g.bytesPerElement,l.isInterleavedBufferAttribute?(d=l.data,p=d.stride,g=l.offset,d&&d.isInstancedInterleavedBuffer?(A(o,d.meshPerAttribute),void 0===i._maxInstanceCount&&(i._maxInstanceCount=d.meshPerAttribute*d.count)):S(o),b.bindBuffer(b.ARRAY_BUFFER,c),L(o,f,h,m,p*u,g*u)):(l.isInstancedBufferAttribute?(A(o,l.meshPerAttribute),void 0===i._maxInstanceCount&&(i._maxInstanceCount=l.meshPerAttribute*l.count)):S(o),b.bindBuffer(b.ARRAY_BUFFER,c),L(o,f,h,m,0,0)))}else if("instanceMatrix"===_){m=w.get(e.instanceMatrix);void 0!==m&&(y=m.buffer,v=m.type,A(o+0,1),A(o+1,1),A(o+2,1),A(o+3,1),b.bindBuffer(b.ARRAY_BUFFER,y),b.vertexAttribPointer(o+0,4,v,!1,64,0),b.vertexAttribPointer(o+1,4,v,!1,64,16),b.vertexAttribPointer(o+2,4,v,!1,64,32),b.vertexAttribPointer(o+3,4,v,!1,64,48))}else if("instanceColor"===_){var v,y=w.get(e.instanceColor);void 0!==y&&(v=y.buffer,y=y.type,A(o,1),b.bindBuffer(b.ARRAY_BUFFER,v),b.vertexAttribPointer(o,3,y,!1,12,0))}else if(void 0!==s){var x=s[_];if(void 0!==x)switch(x.length){case 2:b.vertexAttrib2fv(o,x);break;case 3:b.vertexAttrib3fv(o,x);break;case 4:b.vertexAttrib4fv(o,x);break;default:b.vertexAttrib1fv(o,x)}}}}R()}(e,t,n,i),null!==r&&b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,w.get(r).buffer))},reset:s,resetDefaultState:t,dispose:function(){s();for(const e in c){const t=c[e];for(const n in t){const i=t[n];for(const r in i)a(i[r].object),delete i[r];delete t[n]}delete c[e]}},releaseStatesOfGeometry:function(e){if(void 0!==c[e.id]){const t=c[e.id];for(const n in t){const i=t[n];for(const r in i)a(i[r].object),delete i[r];delete t[n]}delete c[e.id]}},releaseStatesOfProgram:function(e){for(const t in c){const n=c[t];if(void 0!==n[e.id]){const i=n[e.id];for(const r in i)a(i[r].object),delete i[r];delete n[e.id]}}},initAttributes:T,enableAttribute:S,disableUnusedAttributes:R}}function Cr(a,s,o,e){const l=e.isWebGL2;let c;this.setMode=function(e){c=e},this.render=function(e,t){a.drawArrays(c,e,t),o.update(t,c,1)},this.renderInstances=function(n,i,r){if(0!==r){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,n,i,r),o.update(i,c,r)}}}function Pr(t,n,e){let i;function r(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);var l=!0===e.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),h=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),d=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=0<h,y=a||n.has("OES_texture_float"),o=v&&y,e=a?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:a,getMaxAnisotropy:function(){return void 0!==i||(i=!0===n.has("EXT_texture_filter_anisotropic")?(e=n.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0),i;var e},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:o,maxSamples:e}}function Ir(t){const o=this;let c=null,h=0,u=!1,d=!1;const l=new Zn,p=new It,m={value:null,needsUpdate:!1};function f(){m.value!==c&&(m.value=c,m.needsUpdate=0<h),o.numPlanes=h,o.numIntersection=0}function g(n,e,i,t){var r=null!==n?n.length:0;let a=null;if(0!==r){if(a=m.value,!0!==t||null===a){var t=i+4*r,s=e.matrixWorldInverse;p.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=i;e!==r;++e,t+=4)l.copy(n[e]).applyMatrix4(s,p),l.normal.toArray(a,t),a[t+3]=l.constant}m.value=a,m.needsUpdate=!0}return o.numPlanes=r,o.numIntersection=0,a}this.uniform=m,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,n){var i=0!==e.length||t||0!==h||u;return u=t,c=g(e,n,0),h=e.length,i},this.beginShadows=function(){d=!0,g(null)},this.endShadows=function(){d=!1,f()},this.setState=function(e,n,i){var r=e.clippingPlanes,a=e.clipIntersection,s=e.clipShadows;const o=t.get(e);if(!u||null===r||0===r.length||d&&!s)d?g(null):f();else{var s=d?0:h,l=4*s;let t=o.clippingState||null;m.value=t,t=g(r,n,l,i);for(let e=0;e!==l;++e)t[e]=c[e];o.clippingState=t,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=s}}}function Dr(r){let a=new WeakMap;function s(e,t){return t===l?e.mapping=w:t===c&&(e.mapping=E),e}function o(e){const t=e.target;t.removeEventListener("dispose",o);const n=a.get(t);void 0!==n&&(a.delete(t),n.dispose())}return{get:function(e){if(e&&e.isTexture){var t=e.mapping;if(t===l||t===c){if(a.has(e))return s(a.get(e).texture,e.mapping);var n=e.image;if(n&&0<n.height){t=r.getRenderTarget();const i=new vr(n.height/2);return i.fromEquirectangularTexture(r,e),a.set(e,i),r.setRenderTarget(t),e.addEventListener("dispose",o),s(i.texture,e.mapping)}return null}}return e},dispose:function(){a=new WeakMap}}}function Nr(n){const i={};function r(e){if(void 0!==i[e])return i[e];let t;switch(e){case"WEBGL_depth_texture":t=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=n.getExtension(e)}return i[e]=t,t}return{has:function(e){return null!==r(e)},init:function(e){e.isWebGL2?r("EXT_color_buffer_float"):(r("WEBGL_depth_texture"),r("OES_texture_float"),r("OES_texture_half_float"),r("OES_texture_half_float_linear"),r("OES_standard_derivatives"),r("OES_element_index_uint"),r("OES_vertex_array_object"),r("ANGLE_instanced_arrays")),r("OES_texture_float_linear"),r("EXT_color_buffer_half_float")},get:function(e){var t=r(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Or(s,m,i,r){const a={},f=new WeakMap;function o(e){const t=e.target;null!==t.index&&m.remove(t.index);for(const n in t.attributes)m.remove(t.attributes[n]);t.removeEventListener("dispose",o),delete a[t.id];e=f.get(t);e&&(m.remove(e),f.delete(t)),r.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,i.memory.geometries--}function l(e){const n=[];var t=e.index,i=e.attributes.position;let r=0;if(null!==t){var a=t.array;r=t.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];n.push(s,o,o,l,l,s)}}else{var c=i.array;r=i.version;for(let e=0,t=c.length/3-1;e<t;e+=3){var h=e+0,u=e+1,d=e+2;n.push(h,u,u,d,d,h)}}const p=new(65535<Ci(n)?Si:Ei)(n,1);p.version=r;c=f.get(e);c&&m.remove(c),f.set(e,p)}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",o),a[t.id]=!0,i.memory.geometries++),t},update:function(e){var t=e.attributes;for(const r in t)m.update(t[r],s.ARRAY_BUFFER);var n=e.morphAttributes;for(const a in n){var i=n[a];for(let e=0,t=i.length;e<t;e++)m.update(i[e],s.ARRAY_BUFFER)}},getWireframeAttribute:function(e){var t,n=f.get(e);return(!n||null!==(t=e.index)&&n.version<t.version)&&l(e),f.get(e)}}}function Fr(a,s,o,e){const l=e.isWebGL2;let c;let h,u;this.setMode=function(e){c=e},this.setIndex=function(e){h=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(c,t,h,e*u),o.update(t,c,1)},this.renderInstances=function(n,i,r){if(0!==r){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](c,i,h,n*u,r),o.update(i,c,r)}}}function Br(i){const r={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:r,programs:null,autoReset:!0,reset:function(){r.frame++,r.calls=0,r.triangles=0,r.points=0,r.lines=0},update:function(e,t,n){switch(r.calls++,t){case i.TRIANGLES:r.triangles+=n*(e/3);break;case i.LINES:r.lines+=n*(e/2);break;case i.LINE_STRIP:r.lines+=n*(e-1);break;case i.LINE_LOOP:r.lines+=n*e;break;case i.POINTS:r.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function Ur(e,t){return e[0]-t[0]}function Hr(e,t){return Math.abs(t[1])-Math.abs(e[1])}function zr(p){const m={},f=new Float32Array(8),g=[];for(let e=0;e<8;e++)g[e]=[e,0];return{update:function(e,t,n,i){var r=e.morphTargetInfluences,a=void 0===r?0:r.length;let s=m[t.id];if(void 0===s){s=[];for(let e=0;e<a;e++)s[e]=[e,0];m[t.id]=s}for(let e=0;e<a;e++){const d=s[e];d[0]=e,d[1]=r[e]}s.sort(Hr);for(let e=0;e<8;e++)e<a&&s[e][1]?(g[e][0]=s[e][0],g[e][1]=s[e][1]):(g[e][0]=Number.MAX_SAFE_INTEGER,g[e][1]=0);g.sort(Ur);var o=n.morphTargets&&t.morphAttributes.position,l=n.morphNormals&&t.morphAttributes.normal;let c=0;for(let e=0;e<8;e++){var h=g[e],u=h[0],h=h[1];u!==Number.MAX_SAFE_INTEGER&&h?(o&&t.getAttribute("morphTarget"+e)!==o[u]&&t.setAttribute("morphTarget"+e,o[u]),l&&t.getAttribute("morphNormal"+e)!==l[u]&&t.setAttribute("morphNormal"+e,l[u]),f[e]=h,c+=h):(o&&!0===t.hasAttribute("morphTarget"+e)&&t.deleteAttribute("morphTarget"+e),l&&!0===t.hasAttribute("morphNormal"+e)&&t.deleteAttribute("morphNormal"+e),f[e]=0)}n=t.morphTargetsRelative?1:1-c,i.getUniforms().setValue(p,"morphTargetBaseInfluence",n),i.getUniforms().setValue(p,"morphTargetInfluences",f)}}}function Gr(i,r,a,s){let o=new WeakMap;function l(e){const t=e.target;t.removeEventListener("dispose",l),a.remove(t.instanceMatrix),null!==t.instanceColor&&a.remove(t.instanceColor)}return{update:function(e){var t=s.render.frame,n=e.geometry,n=r.get(e,n);return o.get(n)!==t&&(r.update(n),o.set(n,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",l)&&e.addEventListener("dispose",l),a.update(e.instanceMatrix,i.ARRAY_BUFFER),null!==e.instanceColor&&a.update(e.instanceColor,i.ARRAY_BUFFER)),n},dispose:function(){o=new WeakMap}}}Ar.physical={uniforms:lr([Ar.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Pt(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new fi(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Tr.meshphysical_vert,fragmentShader:Tr.meshphysical_frag};class kr extends Ft{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=k,this.minFilter=k,this.wrapR=z,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}class Vr extends Ft{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=k,this.minFilter=k,this.wrapR=z,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}}Vr.prototype.isDataTexture3D=kr.prototype.isDataTexture2DArray=!0;const Wr=new Ft,jr=new kr,Xr=new Vr,qr=new gr,Yr=[],Zr=[],Jr=new Float32Array(16),Kr=new Float32Array(9),Qr=new Float32Array(4);function $r(n,i,r){const e=n[0];if(e<=0||0<e)return n;var t=i*r;let a=Yr[t];if(void 0===a&&(a=new Float32Array(t),Yr[t]=a),0!==i){e.toArray(a,0);for(let e=1,t=0;e!==i;++e)t+=r,n[e].toArray(a,t)}return a}function ea(n,i){if(n.length===i.length){for(let e=0,t=n.length;e<t;e++)if(n[e]!==i[e])return;return 1}}function ta(n,i){for(let e=0,t=i.length;e<t;e++)n[e]=i[e]}function na(t,n){let i=Zr[n];void 0===i&&(i=new Int32Array(n),Zr[n]=i);for(let e=0;e!==n;++e)i[e]=t.allocateTextureUnit();return i}function ia(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function ra(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y):ea(n,t)||(e.uniform2fv(this.addr,t),ta(n,t))}function aa(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z):void 0!==t.r?n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b):ea(n,t)||(e.uniform3fv(this.addr,t),ta(n,t))}function sa(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w):ea(n,t)||(e.uniform4fv(this.addr,t),ta(n,t))}function oa(e,t){var n=this.cache,i=t.elements;void 0===i?ea(n,t)||(e.uniformMatrix2fv(this.addr,!1,t),ta(n,t)):ea(n,i)||(Qr.set(i),e.uniformMatrix2fv(this.addr,!1,Qr),ta(n,i))}function la(e,t){var n=this.cache,i=t.elements;void 0===i?ea(n,t)||(e.uniformMatrix3fv(this.addr,!1,t),ta(n,t)):ea(n,i)||(Kr.set(i),e.uniformMatrix3fv(this.addr,!1,Kr),ta(n,i))}function ca(e,t){var n=this.cache,i=t.elements;void 0===i?ea(n,t)||(e.uniformMatrix4fv(this.addr,!1,t),ta(n,t)):ea(n,i)||(Jr.set(i),e.uniformMatrix4fv(this.addr,!1,Jr),ta(n,i))}function ha(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function ua(e,t){var n=this.cache;ea(n,t)||(e.uniform2iv(this.addr,t),ta(n,t))}function da(e,t){var n=this.cache;ea(n,t)||(e.uniform3iv(this.addr,t),ta(n,t))}function pa(e,t){var n=this.cache;ea(n,t)||(e.uniform4iv(this.addr,t),ta(n,t))}function ma(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function fa(e,t){var n=this.cache;ea(n,t)||(e.uniform2uiv(this.addr,t),ta(n,t))}function ga(e,t){var n=this.cache;ea(n,t)||(e.uniform3uiv(this.addr,t),ta(n,t))}function va(e,t){var n=this.cache;ea(n,t)||(e.uniform4uiv(this.addr,t),ta(n,t))}function ya(e,t,n){const i=this.cache;var r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||Wr,r)}function xa(e,t,n){const i=this.cache;var r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||Xr,r)}function _a(e,t,n){const i=this.cache;var r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||qr,r)}function ba(e,t,n){const i=this.cache;var r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||jr,r)}function Ma(e,t){e.uniform1fv(this.addr,t)}function wa(e,t){t=$r(t,this.size,2);e.uniform2fv(this.addr,t)}function Ea(e,t){t=$r(t,this.size,3);e.uniform3fv(this.addr,t)}function Ta(e,t){t=$r(t,this.size,4);e.uniform4fv(this.addr,t)}function Sa(e,t){t=$r(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Aa(e,t){t=$r(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function Ra(e,t){t=$r(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function La(e,t){e.uniform1iv(this.addr,t)}function Ca(e,t){e.uniform2iv(this.addr,t)}function Pa(e,t){e.uniform3iv(this.addr,t)}function Ia(e,t){e.uniform4iv(this.addr,t)}function Da(e,t){e.uniform1uiv(this.addr,t)}function Na(e,t){e.uniform2uiv(this.addr,t)}function Oa(e,t){e.uniform3uiv(this.addr,t)}function Fa(e,t){e.uniform4uiv(this.addr,t)}function Ba(e,t,n){var i=t.length,r=na(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e)n.safeSetTexture2D(t[e]||Wr,r[e])}function Ua(e,t,n){var i=t.length,r=na(n,i);e.uniform1iv(this.addr,r);for(let e=0;e!==i;++e)n.safeSetTextureCube(t[e]||qr,r[e])}function Ha(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return ia;case 35664:return ra;case 35665:return aa;case 35666:return sa;case 35674:return oa;case 35675:return la;case 35676:return ca;case 5124:case 35670:return ha;case 35667:case 35671:return ua;case 35668:case 35672:return da;case 35669:case 35673:return pa;case 5125:return ma;case 36294:return fa;case 36295:return ga;case 36296:return va;case 35678:case 36198:case 36298:case 36306:case 35682:return ya;case 35679:case 36299:case 36307:return xa;case 35680:case 36300:case 36308:case 36293:return _a;case 36289:case 36303:case 36311:case 36292:return ba}}(t.type)}function za(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Ma;case 35664:return wa;case 35665:return Ea;case 35666:return Ta;case 35674:return Sa;case 35675:return Aa;case 35676:return Ra;case 5124:case 35670:return La;case 35667:case 35671:return Ca;case 35668:case 35672:return Pa;case 35669:case 35673:return Ia;case 5125:return Da;case 36294:return Na;case 36295:return Oa;case 36296:return Fa;case 35678:case 36198:case 36298:case 36306:case 35682:return Ba;case 35680:case 36300:case 36308:case 36293:return Ua}}(t.type)}function Ga(e){this.id=e,this.seq=[],this.map={}}za.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),ta(t,e)},Ga.prototype.setValue=function(n,i,r){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){const s=a[e];s.setValue(n,i[s.id],r)}};const ka=/(\w+)(\])?(\[|\.)?/g;function Va(e,t){e.seq.push(t),e.map[t.id]=t}function Wa(t,n){this.seq=[],this.map={};var i=t.getProgramParameter(n,t.ACTIVE_UNIFORMS);for(let e=0;e<i;++e){var r=t.getActiveUniform(n,e);!function(e,n,i){var r=e.name,a=r.length;for(ka.lastIndex=0;;){var s=ka.exec(r),o=ka.lastIndex;let t=s[1];var l="]"===s[2],s=s[3];if(l&&(t|=0),void 0===s||"["===s&&o+2===a){Va(i,new(void 0===s?Ha:za)(t,e,n));break}{let e=i.map[t];void 0===e&&(e=new Ga(t),Va(i,e)),i=e}}}(r,t.getUniformLocation(n,r.name),this)}}function ja(e,t,n){t=e.createShader(t);return e.shaderSource(t,n),e.compileShader(t),t}Wa.prototype.setValue=function(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)},Wa.prototype.setOptional=function(e,t,n){t=t[n];void 0!==t&&this.setValue(e,n,t)},Wa.upload=function(n,i,r,a){for(let e=0,t=i.length;e!==t;++e){const s=i[e],o=r[s.id];!1!==o.needsUpdate&&s.setValue(n,o.value,a)}},Wa.seqWithValue=function(n,i){const r=[];for(let e=0,t=n.length;e!==t;++e){var a=n[e];a.id in i&&r.push(a)}return r};let Xa=0;function qa(e){switch(e){case _t:return["Linear","( value )"];case bt:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Ya(e,t,n){var i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();return i&&""===r?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+r+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function Za(e,t){t=qa(t);return"vec4 "+e+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function Ja(e){return""!==e}function Ka(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Qa(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const $a=/^[ \t]*#include +<([\w\d./]+)>/gm;function es(e){return e.replace($a,ts)}function ts(e,t){var n=Tr[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return es(n)}const ns=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,is=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function rs(e){return e.replace(is,ss).replace(ns,as)}function as(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ss(0,t,n,i)}function ss(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function os(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ls(n,e,t,i){const r=n.getContext();var a=t.defines,s=t.vertexShader,o=t.fragmentShader,l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===A?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===R&&(t="SHADOWMAP_TYPE_VSM"),t}(t),c=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case w:case E:t="ENVMAP_TYPE_CUBE";break;case T:case S:t="ENVMAP_TYPE_CUBE_UV"}return t}(t),h=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case E:case S:t="ENVMAP_MODE_REFRACTION"}return t}(t),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(t),d=0<n.gammaFactor?n.gammaFactor:1;const p=t.isWebGL2?"":function(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Ja).join("\n")}(t),m=function(e){const t=[];for(const i in e){var n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}(a),f=r.createProgram();let g,v,y=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(g=[m].filter(Ja).join("\n"),0<g.length&&(g+="\n"),v=[p,m].filter(Ja).join("\n"),0<v.length&&(v+="\n")):(g=[os(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Ja).join("\n"),v=[p,os(t),"#define SHADER_NAME "+t.shaderName,m,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Se?"#define TONE_MAPPING":"",t.toneMapping!==Se?Tr.tonemapping_pars_fragment:"",t.toneMapping!==Se?function(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",Tr.encodings_pars_fragment,t.map?Za("mapTexelToLinear",t.mapEncoding):"",t.matcap?Za("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?Za("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?Za("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?Za("lightMapTexelToLinear",t.lightMapEncoding):"",(x="linearToOutputTexel",_=qa(_=t.outputEncoding),"vec4 "+x+"( vec4 value ) { return LinearTo"+_[0]+_[1]+"; }"),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(Ja).join("\n")),s=Qa(Ka(es(s),t),t),o=Qa(Ka(es(o),t),t),s=rs(s),o=rs(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",t.glslVersion===St?"":"out highp vec4 pc_fragColor;",t.glslVersion===St?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);var u=y+g+s,l=y+v+o,x=ja(r,r.VERTEX_SHADER,u),_=ja(r,r.FRAGMENT_SHADER,l);if(r.attachShader(f,x),r.attachShader(f,_),void 0!==t.index0AttributeName?r.bindAttribLocation(f,0,t.index0AttributeName):!0===t.morphTargets&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),n.debug.checkShaderErrors){s=r.getProgramInfoLog(f).trim(),o=r.getShaderInfoLog(x).trim(),u=r.getShaderInfoLog(_).trim();let e=!0,t=!0;!1===r.getProgramParameter(f,r.LINK_STATUS)?(e=!1,l=Ya(r,x,"vertex"),n=Ya(r,_,"fragment"),console.error("THREE.WebGLProgram: shader error: ",r.getError(),"gl.VALIDATE_STATUS",r.getProgramParameter(f,r.VALIDATE_STATUS),"gl.getProgramInfoLog",s,l,n)):""!==s?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",s):""!==o&&""!==u||(t=!1),t&&(this.diagnostics={runnable:e,programLog:s,vertexShader:{log:o,prefix:g},fragmentShader:{log:u,prefix:v}})}r.deleteShader(x),r.deleteShader(_);let b;this.getUniforms=function(){return void 0===b&&(b=new Wa(r,f)),b};let M;return this.getAttributes=function(){return void 0===M&&(M=function(t,n){const i={};var r=t.getProgramParameter(n,t.ACTIVE_ATTRIBUTES);for(let e=0;e<r;e++){var a=t.getActiveAttrib(n,e).name;i[a]=t.getAttribLocation(n,a)}return i}(r,f)),M},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=Xa++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=x,this.fragmentShader=_,this}function cs(d,p,m,f,t,g){const a=[],v=f.isWebGL2,y=f.logarithmicDepthBuffer,x=f.floatVertexTextures,_=f.maxVertexUniforms,b=f.vertexTextures;let M=f.precision;const w={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},i=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function E(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e.texture.encoding):_t,t}return{getParameters:function(e,t,n,i,r){var a=i.fog,s=e.isMeshStandardMaterial?i.environment:null,o=p.get(e.envMap||s),i=w[e.type],l=r.isSkinnedMesh?(s=(l=r).skeleton.bones,x?1024:(l=_,l=Math.floor((l-20)/4),(l=Math.min(l,s.length))<s.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+s.length+" bones. This GPU supports "+l+"."),0):l)):0;null!==e.precision&&(M=f.getMaxPrecision(e.precision),M!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",M,"instead."));let c,h;h=i?(u=Ar[i],c=u.vertexShader,u.fragmentShader):(c=e.vertexShader,e.fragmentShader);var u=d.getRenderTarget();return{isWebGL2:v,shaderID:i,shaderName:e.type,vertexShader:c,fragmentShader:h,defines:e.defines,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:M,instancing:!0===r.isInstancedMesh,instancingColor:!0===r.isInstancedMesh&&null!==r.instanceColor,supportsVertexTextures:b,outputEncoding:null!==u?E(u.texture):d.outputEncoding,map:!!e.map,mapEncoding:E(e.map),matcap:!!e.matcap,matcapEncoding:E(e.matcap),envMap:!!o,envMapMode:o&&o.mapping,envMapEncoding:E(o),envMapCubeUV:!!o&&(o.mapping===T||o.mapping===S),lightMap:!!e.lightMap,lightMapEncoding:E(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:E(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===Et,tangentSpaceNormalMap:e.normalMapType===wt,clearcoatMap:!!e.clearcoatMap,clearcoatRoughnessMap:!!e.clearcoatRoughnessMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,transmissionMap:!!e.transmissionMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.transmissionMap||!e.displacementMap),fog:!!a,useFog:e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:y,skinning:e.skinning&&0<l,maxBones:l,useVertexTexture:x,morphTargets:e.morphTargets,morphNormals:e.morphNormals,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:g.numPlanes,numClipIntersection:g.numIntersection,dithering:e.dithering,shadowMapEnabled:d.shadowMap.enabled&&0<n.length,shadowMapType:d.shadowMap.type,toneMapping:e.toneMapped?d.toneMapping:Se,physicallyCorrectLights:d.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===Y,flipSided:e.side===q,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:v||m.has("EXT_frag_depth"),rendererExtensionDrawBuffers:v||m.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:v||m.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<i.length;e++)n.push(t[i[e]]);n.push(d.outputEncoding),n.push(d.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t=w[e.type];let n;return n=t?(t=Ar[t],cr.clone(t.uniforms)):e.uniforms,n},acquireProgram:function(e,n){let i;for(let e=0,t=a.length;e<t;e++){var r=a[e];if(r.cacheKey===n){i=r,++i.usedTimes;break}}return void 0===i&&(i=new ls(d,n,e,t),a.push(i)),i},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=a.indexOf(e),a[t]=a[a.length-1],a.pop(),e.destroy())},programs:a}}function hs(){let i=new WeakMap;return{get:function(e){let t=i.get(e);return void 0===t&&(t={},i.set(e,t)),t},remove:function(e){i.delete(e)},update:function(e,t,n){i.get(e)[t]=n},dispose:function(){i=new WeakMap}}}function us(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function ds(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function ps(l){const c=[];let h=0;const s=[],o=[],u={id:-1};function d(e,t,n,i,r,a){let s=c[h];var o=l.get(n);return void 0===s?(s={id:e.id,object:e,geometry:t,material:n,program:o.program||u,groupOrder:i,renderOrder:e.renderOrder,z:r,group:a},c[h]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=n,s.program=o.program||u,s.groupOrder=i,s.renderOrder=e.renderOrder,s.z=r,s.group=a),h++,s}return{opaque:s,transparent:o,init:function(){h=0,s.length=0,o.length=0},push:function(e,t,n,i,r,a){a=d(e,t,n,i,r,a),(!0===n.transparent?o:s).push(a)},unshift:function(e,t,n,i,r,a){a=d(e,t,n,i,r,a),(!0===n.transparent?o:s).unshift(a)},finish:function(){for(let e=h,t=c.length;e<t;e++){const n=c[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){1<s.length&&s.sort(e||us),1<o.length&&o.sort(t||ds)}}}function ms(i){let r=new WeakMap;return{get:function(e,t){let n;return!1===r.has(e)?(n=new ps(i),r.set(e,[n])):t>=r.get(e).length?(n=new ps(i),r.get(e).push(n)):n=r.get(e)[t],n},dispose:function(){r=new WeakMap}}}function fs(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new kt,color:new fi};break;case"SpotLight":t={position:new kt,direction:new kt,color:new fi,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new kt,color:new fi,distance:0,decay:0};break;case"HemisphereLight":t={direction:new kt,skyColor:new fi,groundColor:new fi};break;case"RectAreaLight":t={color:new fi,position:new kt,halfWidth:new kt,halfHeight:new kt}}return n[e.id]=t,t}}}let gs=0;function vs(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function ys(t,R){const L=new fs,C=function(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pt};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Pt,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t,t}}}(),P={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)P.probe.push(new kt);const f=new kt,g=new _n,v=new _n;return{setup:function(n){let i=0,r=0,a=0;for(let e=0;e<9;e++)P.probe[e].set(0,0,0);let s=0,o=0,l=0,c=0,h=0,u=0,d=0,p=0;n.sort(vs);for(let e=0,t=n.length;e<t;e++){var m=n[e],f=m.color,g=m.intensity,v=m.distance,y=m.shadow&&m.shadow.map?m.shadow.map.texture:null;if(m.isAmbientLight)i+=f.r*g,r+=f.g*g,a+=f.b*g;else if(m.isLightProbe)for(let e=0;e<9;e++)P.probe[e].addScaledVector(m.sh.coefficients[e],g);else if(m.isDirectionalLight){const _=L.get(m);if(_.color.copy(m.color).multiplyScalar(m.intensity),m.castShadow){var x=m.shadow;const b=C.get(m);b.shadowBias=x.bias,b.shadowNormalBias=x.normalBias,b.shadowRadius=x.radius,b.shadowMapSize=x.mapSize,P.directionalShadow[s]=b,P.directionalShadowMap[s]=y,P.directionalShadowMatrix[s]=m.shadow.matrix,u++}P.directional[s]=_,s++}else if(m.isSpotLight){const M=L.get(m);if(M.position.setFromMatrixPosition(m.matrixWorld),M.color.copy(f).multiplyScalar(g),M.distance=v,M.coneCos=Math.cos(m.angle),M.penumbraCos=Math.cos(m.angle*(1-m.penumbra)),M.decay=m.decay,m.castShadow){v=m.shadow;const w=C.get(m);w.shadowBias=v.bias,w.shadowNormalBias=v.normalBias,w.shadowRadius=v.radius,w.shadowMapSize=v.mapSize,P.spotShadow[l]=w,P.spotShadowMap[l]=y,P.spotShadowMatrix[l]=m.shadow.matrix,p++}P.spot[l]=M,l++}else if(m.isRectAreaLight){const E=L.get(m);E.color.copy(f).multiplyScalar(g),E.halfWidth.set(.5*m.width,0,0),E.halfHeight.set(0,.5*m.height,0),P.rectArea[c]=E,c++}else if(m.isPointLight){const T=L.get(m);if(T.color.copy(m.color).multiplyScalar(m.intensity),T.distance=m.distance,T.decay=m.decay,m.castShadow){f=m.shadow;const S=C.get(m);S.shadowBias=f.bias,S.shadowNormalBias=f.normalBias,S.shadowRadius=f.radius,S.shadowMapSize=f.mapSize,S.shadowCameraNear=f.camera.near,S.shadowCameraFar=f.camera.far,P.pointShadow[o]=S,P.pointShadowMap[o]=y,P.pointShadowMatrix[o]=m.shadow.matrix,d++}P.point[o]=T,o++}else if(m.isHemisphereLight){const A=L.get(m);A.skyColor.copy(m.color).multiplyScalar(g),A.groundColor.copy(m.groundColor).multiplyScalar(g),P.hemi[h]=A,h++}}0<c&&(R.isWebGL2||!0===t.has("OES_texture_float_linear")?(P.rectAreaLTC1=Sr.LTC_FLOAT_1,P.rectAreaLTC2=Sr.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(P.rectAreaLTC1=Sr.LTC_HALF_1,P.rectAreaLTC2=Sr.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),P.ambient[0]=i,P.ambient[1]=r,P.ambient[2]=a;const e=P.hash;e.directionalLength===s&&e.pointLength===o&&e.spotLength===l&&e.rectAreaLength===c&&e.hemiLength===h&&e.numDirectionalShadows===u&&e.numPointShadows===d&&e.numSpotShadows===p||(P.directional.length=s,P.spot.length=l,P.rectArea.length=c,P.point.length=o,P.hemi.length=h,P.directionalShadow.length=u,P.directionalShadowMap.length=u,P.pointShadow.length=d,P.pointShadowMap.length=d,P.spotShadow.length=p,P.spotShadowMap.length=p,P.directionalShadowMatrix.length=u,P.pointShadowMatrix.length=d,P.spotShadowMatrix.length=p,e.directionalLength=s,e.pointLength=o,e.spotLength=l,e.rectAreaLength=c,e.hemiLength=h,e.numDirectionalShadows=u,e.numPointShadows=d,e.numSpotShadows=p,P.version=gs++)},setupView:function(n,e){let i=0,r=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){var c=n[e];if(c.isDirectionalLight){const h=P.directional[i];h.direction.setFromMatrixPosition(c.matrixWorld),f.setFromMatrixPosition(c.target.matrixWorld),h.direction.sub(f),h.direction.transformDirection(l),i++}else if(c.isSpotLight){const u=P.spot[a];u.position.setFromMatrixPosition(c.matrixWorld),u.position.applyMatrix4(l),u.direction.setFromMatrixPosition(c.matrixWorld),f.setFromMatrixPosition(c.target.matrixWorld),u.direction.sub(f),u.direction.transformDirection(l),a++}else if(c.isRectAreaLight){const d=P.rectArea[s];d.position.setFromMatrixPosition(c.matrixWorld),d.position.applyMatrix4(l),v.identity(),g.copy(c.matrixWorld),g.premultiply(l),v.extractRotation(g),d.halfWidth.set(.5*c.width,0,0),d.halfHeight.set(0,.5*c.height,0),d.halfWidth.applyMatrix4(v),d.halfHeight.applyMatrix4(v),s++}else if(c.isPointLight){const p=P.point[r];p.position.setFromMatrixPosition(c.matrixWorld),p.position.applyMatrix4(l),r++}else if(c.isHemisphereLight){const m=P.hemi[o];m.direction.setFromMatrixPosition(c.matrixWorld),m.direction.transformDirection(l),m.direction.normalize(),o++}}},state:P}}function xs(e,t){const n=new ys(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(){n.setup(i)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function _s(i,r){let a=new WeakMap;return{get:function(e,t=0){let n;return!1===a.has(e)?(n=new xs(i,r),a.set(e,[n])):t>=a.get(e).length?(n=new xs(i,r),a.get(e).push(n)):n=a.get(e)[t],n},dispose:function(){a=new WeakMap}}}class bs extends li{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}bs.prototype.isMeshDepthMaterial=!0;class Ms extends li{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new kt,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Ms.prototype.isMeshDistanceMaterial=!0;var ws="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",Es="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function Ts(f,g,e){let v=new br;const m=new Pt,y=new Pt,x=new Ut,r=[],a=[],u={},_=e.maxTextureSize,d={0:q,1:L,2:Y},b=new dr({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Pt},radius:{value:4}},vertexShader:Es,fragmentShader:ws}),M=b.clone();M.defines.HORIZONTAL_PASS=1;const t=new zi;t.setAttribute("position",new xi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const w=new rr(t,b),E=this;function p(e,t,n){n=e<<0|t<<1|n<<2;let i=r[n];return void 0===i&&(i=new bs({depthPacking:Mt,morphTargets:e,skinning:t}),r[n]=i),i}function T(e,t,n){n=e<<0|t<<1|n<<2;let i=a[n];return void 0===i&&(i=new Ms({morphTargets:e,skinning:t}),a[n]=i),i}function S(n,i,r,e,t,a,s){let o=null,l=p,c=n.customDepthMaterial;if(!0===e.isPointLight&&(l=T,c=n.customDistanceMaterial),void 0===c){let e=!1;!0===r.morphTargets&&(e=i.morphAttributes&&i.morphAttributes.position&&0<i.morphAttributes.position.length);let t=!1;!0===n.isSkinnedMesh&&(!0===r.skinning?t=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",n));var h=!0===n.isInstancedMesh;o=l(e,t,h)}else o=c;if(f.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){n=o.uuid,h=r.uuid;let e=u[n];void 0===e&&(e={},u[n]=e);let t=e[h];void 0===t&&(t=o.clone(),e[h]=t),o=t}return o.visible=r.visible,o.wireframe=r.wireframe,s===R?o.side=null!==r.shadowSide?r.shadowSide:r.side:o.side=null!==r.shadowSide?r.shadowSide:d[r.side],o.clipShadows=r.clipShadows,o.clippingPlanes=r.clippingPlanes,o.clipIntersection=r.clipIntersection,o.wireframeLinewidth=r.wireframeLinewidth,o.linewidth=r.linewidth,!0===e.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(e.matrixWorld),o.nearDistance=t,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=A,this.render=function(n,i,r){if(!1!==E.enabled&&(!1!==E.autoUpdate||!1!==E.needsUpdate)&&0!==n.length){var e=f.getRenderTarget(),t=f.getActiveCubeFace(),a=f.getActiveMipmapLevel();const d=f.state;d.setBlending(Z),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let e=0,t=n.length;e<t;e++){var s=n[e];const p=s.shadow;if(void 0!==p){if(!1!==p.autoUpdate||!1!==p.needsUpdate){m.copy(p.mapSize);var o,l,c=p.getFrameExtents();m.multiply(c),y.copy(p.mapSize),(m.x>_||m.y>_)&&(m.x>_&&(y.x=Math.floor(_/c.x),m.x=y.x*c.x,p.mapSize.x=y.x),m.y>_&&(y.y=Math.floor(_/c.y),m.y=y.y*c.y,p.mapSize.y=y.y)),null!==p.map||p.isPointLightShadow||this.type!==R||(o={minFilter:Ae,magFilter:Ae,format:Be},p.map=new Ht(m.x,m.y,o),p.map.texture.name=s.name+".shadowMap",p.mapPass=new Ht(m.x,m.y,o),p.camera.updateProjectionMatrix()),null===p.map&&(l={minFilter:k,magFilter:k,format:Be},p.map=new Ht(m.x,m.y,l),p.map.texture.name=s.name+".shadowMap",p.camera.updateProjectionMatrix()),f.setRenderTarget(p.map),f.clear();var h=p.getViewportCount();for(let e=0;e<h;e++){var u=p.getViewport(e);x.set(y.x*u.x,y.y*u.y,y.x*u.z,y.y*u.w),d.viewport(x),p.updateMatrices(s,e),v=p.getFrustum(),function n(i,r,a,s,o){if(!1===i.visible)return;const e=i.layers.test(r.layers);if(e&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&o===R)&&(!i.frustumCulled||v.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);const c=g.update(i),h=i.material;if(Array.isArray(h)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=h[d.materialIndex];if(p&&p.visible){const m=S(i,c,p,s,a.near,a.far,o);f.renderBufferDirect(a,null,c,m,i,d)}}}else if(h.visible){const t=S(i,c,h,s,a.near,a.far,o);f.renderBufferDirect(a,null,c,t,i,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)n(l[e],r,a,s,o)}(i,r,p.camera,s,this.type)}p.isPointLightShadow||this.type!==R||(c=p,o=r,l=void 0,l=g.update(w),b.uniforms.shadow_pass.value=c.map.texture,b.uniforms.resolution.value=c.mapSize,b.uniforms.radius.value=c.radius,f.setRenderTarget(c.mapPass),f.clear(),f.renderBufferDirect(o,null,l,b,w,null),M.uniforms.shadow_pass.value=c.mapPass.texture,M.uniforms.resolution.value=c.mapSize,M.uniforms.radius.value=c.radius,f.setRenderTarget(c.map),f.clear(),f.renderBufferDirect(o,null,l,M,w,null)),p.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",s,"has no shadow.")}E.needsUpdate=!1,f.setRenderTarget(e,t,a)}}}function Ss(h,e,t){const n=t.isWebGL2;const i=new function(){let t=!1;const a=new Ut;let n=null;const s=new Ut(0,0,0,0);return{setMask:function(e){n===e||t||(h.colorMask(e,e,e,e),n=e)},setLocked:function(e){t=e},setClear:function(e,t,n,i,r){!0===r&&(e*=i,t*=i,n*=i),a.set(e,t,n,i),!1===s.equals(a)&&(h.clearColor(e,t,n,i),s.copy(a))},reset:function(){t=!1,n=null,s.set(-1,0,0,0)}}},r=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(e){(e?O:F)(h.DEPTH_TEST)},setMask:function(e){n===e||t||(h.depthMask(e),n=e)},setFunc:function(e){if(i!==e){if(e)switch(e){case ve:h.depthFunc(h.NEVER);break;case ye:h.depthFunc(h.ALWAYS);break;case xe:h.depthFunc(h.LESS);break;case _e:h.depthFunc(h.LEQUAL);break;case be:h.depthFunc(h.EQUAL);break;case Me:h.depthFunc(h.GEQUAL);break;case we:h.depthFunc(h.GREATER);break;case Ee:h.depthFunc(h.NOTEQUAL);break;default:h.depthFunc(h.LEQUAL)}else h.depthFunc(h.LEQUAL);i=e}},setLocked:function(e){t=e},setClear:function(e){r!==e&&(h.clearDepth(e),r=e)},reset:function(){t=!1,n=null,i=null,r=null}}},a=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(e){t||(e?O:F)(h.STENCIL_TEST)},setMask:function(e){n===e||t||(h.stencilMask(e),n=e)},setFunc:function(e,t,n){i===e&&r===t&&a===n||(h.stencilFunc(e,t,n),i=e,r=t,a=n)},setOp:function(e,t,n){s===e&&o===t&&l===n||(h.stencilOp(e,t,n),s=e,o=t,l=n)},setLocked:function(e){t=e},setClear:function(e){c!==e&&(h.clearStencil(e),c=e)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null}}};let s={},o=null,l={},c=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,y=null,x=!1,_=null,b=null,M=null,w=null,E=null;const T=h.getParameter(h.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let S=!1,A=0;const R=h.getParameter(h.VERSION);-1!==R.indexOf("WebGL")?(A=parseFloat(/^WebGL (\d)/.exec(R)[1]),S=1<=A):-1!==R.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),S=2<=A);let L=null,C={};const P=new Ut(0,0,h.canvas.width,h.canvas.height),I=new Ut(0,0,h.canvas.width,h.canvas.height);function D(e,t,n){var i=new Uint8Array(4),r=h.createTexture();h.bindTexture(e,r),h.texParameteri(e,h.TEXTURE_MIN_FILTER,h.NEAREST),h.texParameteri(e,h.TEXTURE_MAG_FILTER,h.NEAREST);for(let e=0;e<n;e++)h.texImage2D(t+e,0,h.RGBA,1,1,0,h.RGBA,h.UNSIGNED_BYTE,i);return r}const N={};function O(e){!0!==s[e]&&(h.enable(e),s[e]=!0)}function F(e){!1!==s[e]&&(h.disable(e),s[e]=!1)}N[h.TEXTURE_2D]=D(h.TEXTURE_2D,h.TEXTURE_2D,1),N[h.TEXTURE_CUBE_MAP]=D(h.TEXTURE_CUBE_MAP,h.TEXTURE_CUBE_MAP_POSITIVE_X,6),i.setClear(0,0,0,1),r.setClear(1),a.setClear(0),O(h.DEPTH_TEST),r.setFunc(_e),z(!1),G(j),O(h.CULL_FACE),H(Z);const B={[te]:h.FUNC_ADD,[ne]:h.FUNC_SUBTRACT,[ie]:h.FUNC_REVERSE_SUBTRACT};n?(B[re]=h.MIN,B[ae]=h.MAX):null!==(e=e.get("EXT_blend_minmax"))&&(B[re]=e.MIN_EXT,B[ae]=e.MAX_EXT);const U={[se]:h.ZERO,[oe]:h.ONE,[le]:h.SRC_COLOR,[he]:h.SRC_ALPHA,[ge]:h.SRC_ALPHA_SATURATE,[me]:h.DST_COLOR,[de]:h.DST_ALPHA,[ce]:h.ONE_MINUS_SRC_COLOR,[ue]:h.ONE_MINUS_SRC_ALPHA,[fe]:h.ONE_MINUS_DST_COLOR,[pe]:h.ONE_MINUS_DST_ALPHA};function H(e,t,n,i,r,a,s,o){if(e!==Z){if(!1===u&&(O(h.BLEND),u=!0),e===ee)r=r||t,a=a||n,s=s||i,t===p&&r===g||(h.blendEquationSeparate(B[t],B[r]),p=t,g=r),n===m&&i===f&&a===v&&s===y||(h.blendFuncSeparate(U[n],U[i],U[a],U[s]),m=n,f=i,v=a,y=s),d=e,x=null;else if(e!==d||o!==x){if(p===te&&g===te||(h.blendEquation(h.FUNC_ADD),p=te,g=te),o)switch(e){case J:h.blendFuncSeparate(h.ONE,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA);break;case K:h.blendFunc(h.ONE,h.ONE);break;case Q:h.blendFuncSeparate(h.ZERO,h.ZERO,h.ONE_MINUS_SRC_COLOR,h.ONE_MINUS_SRC_ALPHA);break;case $:h.blendFuncSeparate(h.ZERO,h.SRC_COLOR,h.ZERO,h.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case J:h.blendFuncSeparate(h.SRC_ALPHA,h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA);break;case K:h.blendFunc(h.SRC_ALPHA,h.ONE);break;case Q:h.blendFunc(h.ZERO,h.ONE_MINUS_SRC_COLOR);break;case $:h.blendFunc(h.ZERO,h.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}m=null,f=null,v=null,y=null,d=e,x=o}}else!0===u&&(F(h.BLEND),u=!1)}function z(e){_!==e&&(e?h.frontFace(h.CW):h.frontFace(h.CCW),_=e)}function G(e){e!==W?(O(h.CULL_FACE),e!==b&&(e===j?h.cullFace(h.BACK):e===X?h.cullFace(h.FRONT):h.cullFace(h.FRONT_AND_BACK))):F(h.CULL_FACE),b=e}function k(e,t,n){e?(O(h.POLYGON_OFFSET_FILL),w===t&&E===n||(h.polygonOffset(t,n),w=t,E=n)):F(h.POLYGON_OFFSET_FILL)}function V(e){void 0===e&&(e=h.TEXTURE0+T-1),L!==e&&(h.activeTexture(e),L=e)}return{buffers:{color:i,depth:r,stencil:a},enable:O,disable:F,bindFramebuffer:function(e,t){null===t&&null!==o&&(t=o),l[e]!==t&&(h.bindFramebuffer(e,t),l[e]=t)},bindXRFramebuffer:function(e){e!==o&&(h.bindFramebuffer(h.FRAMEBUFFER,e),o=e)},useProgram:function(e){return c!==e&&(h.useProgram(e),c=e,!0)},setBlending:H,setMaterial:function(e,t){(e.side===Y?F:O)(h.CULL_FACE);let n=e.side===q;t&&(n=!n),z(n),e.blending===J&&!1===e.transparent?H(Z):H(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),i.setMask(e.colorWrite),t=e.stencilWrite,a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),k(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?O:F)(h.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:z,setCullFace:G,setLineWidth:function(e){e!==M&&(S&&h.lineWidth(e),M=e)},setPolygonOffset:k,setScissorTest:function(e){(e?O:F)(h.SCISSOR_TEST)},activeTexture:V,bindTexture:function(e,t){null===L&&V();let n=C[L];void 0===n&&(n={type:void 0,texture:void 0},C[L]=n),n.type===e&&n.texture===t||(h.bindTexture(e,t||N[e]),n.type=e,n.texture=t)},unbindTexture:function(){const e=C[L];void 0!==e&&void 0!==e.type&&(h.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{h.compressedTexImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{h.texImage2D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{h.texImage3D.apply(h,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===P.equals(e)&&(h.scissor(e.x,e.y,e.z,e.w),P.copy(e))},viewport:function(e){!1===I.equals(e)&&(h.viewport(e.x,e.y,e.z,e.w),I.copy(e))},reset:function(){h.disable(h.BLEND),h.disable(h.CULL_FACE),h.disable(h.DEPTH_TEST),h.disable(h.POLYGON_OFFSET_FILL),h.disable(h.SCISSOR_TEST),h.disable(h.STENCIL_TEST),h.disable(h.SAMPLE_ALPHA_TO_COVERAGE),h.blendEquation(h.FUNC_ADD),h.blendFunc(h.ONE,h.ZERO),h.blendFuncSeparate(h.ONE,h.ZERO,h.ONE,h.ZERO),h.colorMask(!0,!0,!0,!0),h.clearColor(0,0,0,0),h.depthMask(!0),h.depthFunc(h.LESS),h.clearDepth(1),h.stencilMask(4294967295),h.stencilFunc(h.ALWAYS,0,4294967295),h.stencilOp(h.KEEP,h.KEEP,h.KEEP),h.clearStencil(0),h.cullFace(h.BACK),h.frontFace(h.CCW),h.polygonOffset(0,0),h.activeTexture(h.TEXTURE0),h.bindFramebuffer(h.FRAMEBUFFER,null),!0===n&&(h.bindFramebuffer(h.DRAW_FRAMEBUFFER,null),h.bindFramebuffer(h.READ_FRAMEBUFFER,null)),h.useProgram(null),h.lineWidth(1),h.scissor(0,0,h.canvas.width,h.canvas.height),h.viewport(0,0,h.canvas.width,h.canvas.height),s={},L=null,C={},o=null,l={},c=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,y=null,x=!1,_=null,b=null,M=null,w=null,E=null,P.set(0,0,h.canvas.width,h.canvas.height),I.set(0,0,h.canvas.width,h.canvas.height),i.reset(),r.reset(),a.reset()}}}function As(m,r,f,c,i,g,h){const v=i.isWebGL2,t=i.maxTextures,y=i.maxCubemapSize,u=i.maxTextureSize,n=i.maxSamples,a=new WeakMap;let l,s=!1;try{s="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function d(e,t){return s?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function x(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?Ct.floorPowerOfTwo:Math.floor;i=a(r*e.width),t=a(r*e.height);void 0===l&&(l=d(i,t));const s=n?d(i,t):l;s.width=i,s.height=t;const o=s.getContext("2d");return o.drawImage(e,0,0,i,t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+i+"x"+t+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function _(e){return Ct.isPowerOfTwo(e.width)&&Ct.isPowerOfTwo(e.height)}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==k&&e.minFilter!==Ae}function M(e,t,n,i){m.generateMipmap(e);const r=c.get(t);r.__maxMipLevel=Math.log2(Math.max(n,i))}function w(e,t,n){if(!1===v)return t;if(null!==e){if(void 0!==m[e])return m[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let i=t;return t===m.RED&&(n===m.FLOAT&&(i=m.R32F),n===m.HALF_FLOAT&&(i=m.R16F),n===m.UNSIGNED_BYTE&&(i=m.R8)),t===m.RGB&&(n===m.FLOAT&&(i=m.RGB32F),n===m.HALF_FLOAT&&(i=m.RGB16F),n===m.UNSIGNED_BYTE&&(i=m.RGB8)),t===m.RGBA&&(n===m.FLOAT&&(i=m.RGBA32F),n===m.HALF_FLOAT&&(i=m.RGBA16F),n===m.UNSIGNED_BYTE&&(i=m.RGBA8)),i!==m.R16F&&i!==m.R32F&&i!==m.RGBA16F&&i!==m.RGBA32F||r.get("EXT_color_buffer_float"),i}function o(e){return e===k||e===V||e===Te?m.NEAREST:m.LINEAR}function p(e){const t=e.target;var n;t.removeEventListener("dispose",p),n=t,void 0!==(e=c.get(n)).__webglInit&&(m.deleteTexture(e.__webglTexture),c.remove(n)),t.isVideoTexture&&a.delete(t),h.memory.textures--}function E(e){const t=e.target;t.removeEventListener("dispose",E),function(e){var t=e.texture,n=c.get(e),i=c.get(t);if(e){if(void 0!==i.__webglTexture&&m.deleteTexture(i.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)m.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&m.deleteRenderbuffer(n.__webglDepthbuffer[e]);else m.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&m.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&m.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&m.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&m.deleteRenderbuffer(n.__webglDepthRenderbuffer);c.remove(t),c.remove(e)}}(t),h.memory.textures--}let T=0;function S(e,t){var n,i=c.get(e);if(e.isVideoTexture&&(r=e,n=h.render.frame,a.get(r)!==n&&(a.set(r,n),r.update())),0<e.version&&i.__version!==e.version){var r=e.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==r.complete)return void I(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}f.activeTexture(m.TEXTURE0+t),f.bindTexture(m.TEXTURE_2D,i.__webglTexture)}function A(e,t){var n=c.get(e);0<e.version&&n.__version!==e.version?function(e,i,t){if(6===i.image.length){P(e,i),f.activeTexture(m.TEXTURE0+t),f.bindTexture(m.TEXTURE_CUBE_MAP,e.__webglTexture),m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,i.flipY),m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),m.pixelStorei(m.UNPACK_ALIGNMENT,i.unpackAlignment),m.pixelStorei(m.UNPACK_COLORSPACE_CONVERSION_WEBGL,m.NONE);var r=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),a=i.image[0]&&i.image[0].isDataTexture;const p=[];for(let e=0;e<6;e++)p[e]=r||a?a?i.image[e].image:i.image[e]:x(i.image[e],!1,!0,y);var s=p[0],t=_(s)||v,o=g.convert(i.format),l=g.convert(i.type),c=w(i.internalFormat,o,l);C(m.TEXTURE_CUBE_MAP,i,t);let n;if(r){for(let t=0;t<6;t++){n=p[t].mipmaps;for(let e=0;e<n.length;e++){var h=n[e];i.format!==Be&&i.format!==Fe?null!==o?f.compressedTexImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,c,h.width,h.height,0,h.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):f.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,c,h.width,h.height,0,o,l,h.data)}}e.__maxMipLevel=n.length-1}else{n=i.mipmaps;for(let t=0;t<6;t++)if(a){f.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,c,p[t].width,p[t].height,0,o,l,p[t].data);for(let e=0;e<n.length;e++){var u=n[e].image[t].image;f.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,c,u.width,u.height,0,o,l,u.data)}}else{f.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,c,o,l,p[t]);for(let e=0;e<n.length;e++){var d=n[e];f.texImage2D(m.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,c,o,l,d.image[t])}}e.__maxMipLevel=n.length}b(i,t)&&M(m.TEXTURE_CUBE_MAP,i,s.width,s.height),e.__version=i.version,i.onUpdate&&i.onUpdate(i)}}(n,e,t):(f.activeTexture(m.TEXTURE0+t),f.bindTexture(m.TEXTURE_CUBE_MAP,n.__webglTexture))}const R={[H]:m.REPEAT,[z]:m.CLAMP_TO_EDGE,[G]:m.MIRRORED_REPEAT},L={[k]:m.NEAREST,[V]:m.NEAREST_MIPMAP_NEAREST,[Te]:m.NEAREST_MIPMAP_LINEAR,[Ae]:m.LINEAR,[Re]:m.LINEAR_MIPMAP_NEAREST,[Le]:m.LINEAR_MIPMAP_LINEAR};function C(e,t,n){n?(m.texParameteri(e,m.TEXTURE_WRAP_S,R[t.wrapS]),m.texParameteri(e,m.TEXTURE_WRAP_T,R[t.wrapT]),e!==m.TEXTURE_3D&&e!==m.TEXTURE_2D_ARRAY||m.texParameteri(e,m.TEXTURE_WRAP_R,R[t.wrapR]),m.texParameteri(e,m.TEXTURE_MAG_FILTER,L[t.magFilter]),m.texParameteri(e,m.TEXTURE_MIN_FILTER,L[t.minFilter])):(m.texParameteri(e,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(e,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),e!==m.TEXTURE_3D&&e!==m.TEXTURE_2D_ARRAY||m.texParameteri(e,m.TEXTURE_WRAP_R,m.CLAMP_TO_EDGE),t.wrapS===z&&t.wrapT===z||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),m.texParameteri(e,m.TEXTURE_MAG_FILTER,o(t.magFilter)),m.texParameteri(e,m.TEXTURE_MIN_FILTER,o(t.minFilter)),t.minFilter!==k&&t.minFilter!==Ae&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===r.has("EXT_texture_filter_anisotropic")&&(n=r.get("EXT_texture_filter_anisotropic"),t.type===De&&!1===r.has("OES_texture_float_linear")||!1===v&&t.type===Ne&&!1===r.has("OES_texture_half_float_linear")||(1<t.anisotropy||c.get(t).__currentAnisotropy)&&(m.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,i.getMaxAnisotropy())),c.get(t).__currentAnisotropy=t.anisotropy))}function P(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",p),e.__webglTexture=m.createTexture(),h.memory.textures++)}function I(e,n,t){let i=m.TEXTURE_2D;n.isDataTexture2DArray&&(i=m.TEXTURE_2D_ARRAY),n.isDataTexture3D&&(i=m.TEXTURE_3D),P(e,n),f.activeTexture(m.TEXTURE0+t),f.bindTexture(i,e.__webglTexture),m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,n.flipY),m.pixelStorei(m.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),m.pixelStorei(m.UNPACK_ALIGNMENT,n.unpackAlignment),m.pixelStorei(m.UNPACK_COLORSPACE_CONVERSION_WEBGL,m.NONE);var t=(r=n,!v&&(r.wrapS!==z||r.wrapT!==z||r.minFilter!==k&&r.minFilter!==Ae)&&!1===_(n.image)),r=x(n.image,t,!1,u),t=_(r)||v,a=g.convert(n.format);let s=g.convert(n.type),o=w(n.internalFormat,a,s);C(i,n,t);let l;var c=n.mipmaps;if(n.isDepthTexture)o=m.DEPTH_COMPONENT,v?o=n.type===De?m.DEPTH_COMPONENT32F:n.type===Ie?m.DEPTH_COMPONENT24:n.type===Oe?m.DEPTH24_STENCIL8:m.DEPTH_COMPONENT16:n.type===De&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===Ue&&o===m.DEPTH_COMPONENT&&n.type!==Pe&&n.type!==Ie&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Pe,s=g.convert(n.type)),n.format===He&&o===m.DEPTH_COMPONENT&&(o=m.DEPTH_STENCIL,n.type!==Oe&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=Oe,s=g.convert(n.type))),f.texImage2D(m.TEXTURE_2D,0,o,r.width,r.height,0,a,s,null);else if(n.isDataTexture)if(0<c.length&&t){for(let e=0,t=c.length;e<t;e++)l=c[e],f.texImage2D(m.TEXTURE_2D,e,o,l.width,l.height,0,a,s,l.data);n.generateMipmaps=!1,e.__maxMipLevel=c.length-1}else f.texImage2D(m.TEXTURE_2D,0,o,r.width,r.height,0,a,s,r.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=c.length;e<t;e++)l=c[e],n.format!==Be&&n.format!==Fe?null!==a?f.compressedTexImage2D(m.TEXTURE_2D,e,o,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):f.texImage2D(m.TEXTURE_2D,e,o,l.width,l.height,0,a,s,l.data);e.__maxMipLevel=c.length-1}else if(n.isDataTexture2DArray)f.texImage3D(m.TEXTURE_2D_ARRAY,0,o,r.width,r.height,r.depth,0,a,s,r.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)f.texImage3D(m.TEXTURE_3D,0,o,r.width,r.height,r.depth,0,a,s,r.data),e.__maxMipLevel=0;else if(0<c.length&&t){for(let e=0,t=c.length;e<t;e++)l=c[e],f.texImage2D(m.TEXTURE_2D,e,o,a,s,l);n.generateMipmaps=!1,e.__maxMipLevel=c.length-1}else f.texImage2D(m.TEXTURE_2D,0,o,a,s,r),e.__maxMipLevel=0;b(n,t)&&M(i,n,r.width,r.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function D(e,t,n,i){var r=t.texture,a=g.convert(r.format),s=g.convert(r.type),o=w(r.internalFormat,a,s);i===m.TEXTURE_3D||i===m.TEXTURE_2D_ARRAY?f.texImage3D(i,0,o,t.width,t.height,t.depth,0,a,s,null):f.texImage2D(i,0,o,t.width,t.height,0,a,s,null),f.bindFramebuffer(m.FRAMEBUFFER,e),m.framebufferTexture2D(m.FRAMEBUFFER,n,i,c.get(r).__webglTexture,0),f.bindFramebuffer(m.FRAMEBUFFER,null)}function N(t,n,i){if(m.bindRenderbuffer(m.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let e=m.DEPTH_COMPONENT16;i?((r=n.depthTexture)&&r.isDepthTexture&&(r.type===De?e=m.DEPTH_COMPONENT32F:r.type===Ie&&(e=m.DEPTH_COMPONENT24)),r=F(n),m.renderbufferStorageMultisample(m.RENDERBUFFER,r,e,n.width,n.height)):m.renderbufferStorage(m.RENDERBUFFER,e,n.width,n.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.RENDERBUFFER,t)}else{var r,e;n.depthBuffer&&n.stencilBuffer?(i?(e=F(n),m.renderbufferStorageMultisample(m.RENDERBUFFER,e,m.DEPTH24_STENCIL8,n.width,n.height)):m.renderbufferStorage(m.RENDERBUFFER,m.DEPTH_STENCIL,n.width,n.height),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.RENDERBUFFER,t)):(r=n.texture,e=g.convert(r.format),t=g.convert(r.type),t=w(r.internalFormat,e,t),i?(i=F(n),m.renderbufferStorageMultisample(m.RENDERBUFFER,i,t,n.width,n.height)):m.renderbufferStorage(m.RENDERBUFFER,t,n.width,n.height))}m.bindRenderbuffer(m.RENDERBUFFER,null)}function O(t){const n=c.get(t);var e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(e)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,t){if(t&&t.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(f.bindFramebuffer(m.FRAMEBUFFER,e),!t.depthTexture||!t.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(c.get(t.depthTexture).__webglTexture&&t.depthTexture.image.width===t.width&&t.depthTexture.image.height===t.height||(t.depthTexture.image.width=t.width,t.depthTexture.image.height=t.height,t.depthTexture.needsUpdate=!0),S(t.depthTexture,0),e=c.get(t.depthTexture).__webglTexture,t.depthTexture.format===Ue)m.framebufferTexture2D(m.FRAMEBUFFER,m.DEPTH_ATTACHMENT,m.TEXTURE_2D,e,0);else{if(t.depthTexture.format!==He)throw new Error("Unknown depthTexture format");m.framebufferTexture2D(m.FRAMEBUFFER,m.DEPTH_STENCIL_ATTACHMENT,m.TEXTURE_2D,e,0)}}(n.__webglFramebuffer,t)}else if(e){n.__webglDepthbuffer=[];for(let e=0;e<6;e++)f.bindFramebuffer(m.FRAMEBUFFER,n.__webglFramebuffer[e]),n.__webglDepthbuffer[e]=m.createRenderbuffer(),N(n.__webglDepthbuffer[e],t,!1)}else f.bindFramebuffer(m.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=m.createRenderbuffer(),N(n.__webglDepthbuffer,t,!1);f.bindFramebuffer(m.FRAMEBUFFER,null)}function F(e){return v&&e.isWebGLMultisampleRenderTarget?Math.min(n,e.samples):0}let B=!1,U=!1;this.allocateTextureUnit=function(){var e=T;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=S,this.setTexture2DArray=function(e,t){var n=c.get(e);0<e.version&&n.__version!==e.version?I(n,e,t):(f.activeTexture(m.TEXTURE0+t),f.bindTexture(m.TEXTURE_2D_ARRAY,n.__webglTexture))},this.setTexture3D=function(e,t){var n=c.get(e);0<e.version&&n.__version!==e.version?I(n,e,t):(f.activeTexture(m.TEXTURE0+t),f.bindTexture(m.TEXTURE_3D,n.__webglTexture))},this.setTextureCube=A,this.setupRenderTarget=function(t){const n=t.texture,i=c.get(t),r=c.get(n);t.addEventListener("dispose",E),r.__webglTexture=m.createTexture(),r.__version=n.version,h.memory.textures++;var e,a=!0===t.isWebGLCubeRenderTarget,s=!0===t.isWebGLMultisampleRenderTarget,o=n.isDataTexture3D||n.isDataTexture2DArray,l=_(t)||v;if(!v||n.format!==Fe||n.type!==De&&n.type!==Ne||(n.format=Be,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),a){i.__webglFramebuffer=[];for(let e=0;e<6;e++)i.__webglFramebuffer[e]=m.createFramebuffer()}else i.__webglFramebuffer=m.createFramebuffer(),s&&(v?(i.__webglMultisampledFramebuffer=m.createFramebuffer(),i.__webglColorRenderbuffer=m.createRenderbuffer(),m.bindRenderbuffer(m.RENDERBUFFER,i.__webglColorRenderbuffer),e=g.convert(n.format),s=g.convert(n.type),e=w(n.internalFormat,e,s),s=F(t),m.renderbufferStorageMultisample(m.RENDERBUFFER,s,e,t.width,t.height),f.bindFramebuffer(m.FRAMEBUFFER,i.__webglMultisampledFramebuffer),m.framebufferRenderbuffer(m.FRAMEBUFFER,m.COLOR_ATTACHMENT0,m.RENDERBUFFER,i.__webglColorRenderbuffer),m.bindRenderbuffer(m.RENDERBUFFER,null),t.depthBuffer&&(i.__webglDepthRenderbuffer=m.createRenderbuffer(),N(i.__webglDepthRenderbuffer,t,!0)),f.bindFramebuffer(m.FRAMEBUFFER,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2."));if(a){f.bindTexture(m.TEXTURE_CUBE_MAP,r.__webglTexture),C(m.TEXTURE_CUBE_MAP,n,l);for(let e=0;e<6;e++)D(i.__webglFramebuffer[e],t,m.COLOR_ATTACHMENT0,m.TEXTURE_CUBE_MAP_POSITIVE_X+e);b(n,l)&&M(m.TEXTURE_CUBE_MAP,n,t.width,t.height),f.bindTexture(m.TEXTURE_CUBE_MAP,null)}else{let e=m.TEXTURE_2D;o&&(v?(o=n.isDataTexture3D,e=o?m.TEXTURE_3D:m.TEXTURE_2D_ARRAY):console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),f.bindTexture(e,r.__webglTexture),C(e,n,l),D(i.__webglFramebuffer,t,m.COLOR_ATTACHMENT0,e),b(n,l)&&M(m.TEXTURE_2D,n,t.width,t.height),f.bindTexture(m.TEXTURE_2D,null)}t.depthBuffer&&O(t)},this.updateRenderTargetMipmap=function(e){var t,n,i=e.texture;b(i,_(e)||v)&&(t=e.isWebGLCubeRenderTarget?m.TEXTURE_CUBE_MAP:m.TEXTURE_2D,n=c.get(i).__webglTexture,f.bindTexture(t,n),M(t,i,e.width,e.height),f.bindTexture(t,null))},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(v){var n=c.get(t);f.bindFramebuffer(m.READ_FRAMEBUFFER,n.__webglMultisampledFramebuffer),f.bindFramebuffer(m.DRAW_FRAMEBUFFER,n.__webglFramebuffer);var i=t.width,r=t.height;let e=m.COLOR_BUFFER_BIT;t.depthBuffer&&(e|=m.DEPTH_BUFFER_BIT),t.stencilBuffer&&(e|=m.STENCIL_BUFFER_BIT),m.blitFramebuffer(0,0,i,r,0,0,i,r,e,m.NEAREST),f.bindFramebuffer(m.FRAMEBUFFER,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===B&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),B=!0),e=e.texture),S(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===U&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),U=!0),e=e.texture),A(e,t)}}function Rs(n,i,e){const r=e.isWebGL2;return{convert:function(e){let t;if(e===Ce)return n.UNSIGNED_BYTE;if(e===h)return n.UNSIGNED_SHORT_4_4_4_4;if(e===u)return n.UNSIGNED_SHORT_5_5_5_1;if(e===d)return n.UNSIGNED_SHORT_5_6_5;if(e===a)return n.BYTE;if(e===s)return n.SHORT;if(e===Pe)return n.UNSIGNED_SHORT;if(e===o)return n.INT;if(e===Ie)return n.UNSIGNED_INT;if(e===De)return n.FLOAT;if(e===Ne)return r?n.HALF_FLOAT:(t=i.get("OES_texture_half_float"),null!==t?t.HALF_FLOAT_OES:null);if(e===p)return n.ALPHA;if(e===Fe)return n.RGB;if(e===Be)return n.RGBA;if(e===m)return n.LUMINANCE;if(e===f)return n.LUMINANCE_ALPHA;if(e===Ue)return n.DEPTH_COMPONENT;if(e===He)return n.DEPTH_STENCIL;if(e===g)return n.RED;if(e===v)return n.RED_INTEGER;if(e===y)return n.RG;if(e===x)return n.RG_INTEGER;if(e===_)return n.RGB_INTEGER;if(e===b)return n.RGBA_INTEGER;if(e===M||e===C||e===P||e===I){if(t=i.get("WEBGL_compressed_texture_s3tc"),null===t)return null;if(e===M)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===C)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===P)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===I)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===D||e===N||e===O||e===F){if(t=i.get("WEBGL_compressed_texture_pvrtc"),null===t)return null;if(e===D)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===N)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===O)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===F)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===B)return t=i.get("WEBGL_compressed_texture_etc1"),null!==t?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===U||e===ze)&&(t=i.get("WEBGL_compressed_texture_etc"),null!==t)){if(e===U)return t.COMPRESSED_RGB8_ETC2;if(e===ze)return t.COMPRESSED_RGBA8_ETC2_EAC}return e===Ge||e===ke||e===Ve||e===We||e===je||e===Xe||e===qe||e===Ye||e===Ze||e===Je||e===Ke||e===Qe||e===$e||e===et||e===nt||e===it||e===rt||e===at||e===st||e===ot||e===lt||e===ct||e===ht||e===ut||e===dt||e===pt||e===mt||e===ft?(t=i.get("WEBGL_compressed_texture_astc"),null!==t?e:null):e===tt?(t=i.get("EXT_texture_compression_bptc"),null!==t?e:null):e===Oe?r?n.UNSIGNED_INT_24_8:(t=i.get("WEBGL_depth_texture"),null!==t?t.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class Ls extends mr{constructor(e=[]){super(),this.cameras=e}}Ls.prototype.isArrayCamera=!0;class Cs extends jn{constructor(){super(),this.type="Group"}}function Ps(){this._targetRay=null,this._grip=null,this._hand=null}function Is(e,t){const n=this,h=e.state;let u=null,i=1,d=null,r="local-floor",p=null;const m=[],o=new Map,a=new mr;a.layers.enable(1),a.viewport=new Ut;const s=new mr;s.layers.enable(2),s.viewport=new Ut;const f=[a,s],g=new Ls;g.layers.enable(1),g.layers.enable(2);let l=null,c=null;function v(e){const t=o.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){o.forEach(function(e,t){e.disconnect(t)}),o.clear(),l=null,c=null,h.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),E.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(t){var n=u.inputSources;for(let e=0;e<m.length;e++)o.set(n[e],m[e]);for(let e=0;e<t.removed.length;e++){var i=t.removed[e];const a=o.get(i);a&&(a.dispatchEvent({type:"disconnected",data:i}),o.delete(i))}for(let e=0;e<t.added.length;e++){var r=t.added[e];const s=o.get(r);s&&s.dispatchEvent({type:"connected",data:r})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=m[e];return void 0===t&&(t=new Ps,m[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=m[e];return void 0===t&&(t=new Ps,m[e]=t),t.getGripSpace()},this.getHand=function(e){let t=m[e];return void 0===t&&(t=new Ps,m[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d},this.getSession=function(){return u},this.setSession=async function(e){u=e,null!==u&&(u.addEventListener("select",v),u.addEventListener("selectstart",v),u.addEventListener("selectend",v),u.addEventListener("squeeze",v),u.addEventListener("squeezestart",v),u.addEventListener("squeezeend",v),u.addEventListener("end",y),u.addEventListener("inputsourceschange",x),!0!==(e=t.getContextAttributes()).xrCompatible&&await t.makeXRCompatible(),e={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i},e=new XRWebGLLayer(u,t,e),u.updateRenderState({baseLayer:e}),d=await u.requestReferenceSpace(r),E.setContext(u),E.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"}))};const _=new kt,b=new kt;function M(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){g.near=s.near=a.near=e.near,g.far=s.far=a.far=e.far,l===g.near&&c===g.far||(u.updateRenderState({depthNear:g.near,depthFar:g.far}),l=g.near,c=g.far);var t=e.parent,n=g.cameras;M(g,t);for(let e=0;e<n.length;e++)M(n[e],t);e.matrixWorld.copy(g.matrixWorld),e.matrix.copy(g.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);return 2===n.length?function(e,t,n){_.setFromMatrixPosition(t.matrixWorld),b.setFromMatrixPosition(n.matrixWorld);var i=_.distanceTo(b),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],n=(a[8]+1)/a[0],r=s*h,a=s*n,h=(n=i/(n-h))*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(h),e.translateZ(n),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),s+=n,n=o+n,e.projectionMatrix.makePerspective(r-h,i-h+a,l*o/n*s,c*o/n*s,s,n)}(g,a,s):g.projectionMatrix.copy(a.projectionMatrix),g};let w=null;const E=new Mr;E.setAnimationLoop(function(e,t){if(p=t.getViewerPose(d),null!==p){var n=p.views;const o=u.renderState.baseLayer;h.bindXRFramebuffer(o.framebuffer);let t=!1;n.length!==g.cameras.length&&(g.cameras.length=0,t=!0);for(let e=0;e<n.length;e++){var i=n[e],r=o.getViewport(i);const l=f[e];l.matrix.fromArray(i.transform.matrix),l.projectionMatrix.fromArray(i.projectionMatrix),l.viewport.set(r.x,r.y,r.width,r.height),0===e&&g.matrix.copy(l.matrix),!0===t&&g.cameras.push(l)}}var a=u.inputSources;for(let e=0;e<m.length;e++){const c=m[e];var s=a[e];c.update(s,t,d)}w&&w(e,t)}),this.setAnimationLoop=function(e){w=e},this.dispose=function(){}}function Ds(a){function l(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var n=a.get(t).envMap;n&&(e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,void 0!==(n=a.get(n).__maxMipLevel)&&(e.maxMipLevel.value=n)),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let i;t.map?i=t.map:t.specularMap?i=t.specularMap:t.displacementMap?i=t.displacementMap:t.normalMap?i=t.normalMap:t.bumpMap?i=t.bumpMap:t.roughnessMap?i=t.roughnessMap:t.metalnessMap?i=t.metalnessMap:t.alphaMap?i=t.alphaMap:t.emissiveMap?i=t.emissiveMap:t.clearcoatMap?i=t.clearcoatMap:t.clearcoatNormalMap?i=t.clearcoatNormalMap:t.clearcoatRoughnessMap&&(i=t.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix));let r;t.aoMap?r=t.aoMap:t.lightMap&&(r=t.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uv2Transform.value.copy(r.matrix))}function c(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===q&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===q&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,t,n,i){var r,a,s,o;t.isMeshBasicMaterial?l(e,t):t.isMeshLambertMaterial?(l(e,t),s=e,(o=t).emissiveMap&&(s.emissiveMap.value=o.emissiveMap)):t.isMeshToonMaterial?(l(e,t),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===q&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===q&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshPhongMaterial?(l(e,t),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===q&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===q&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshStandardMaterial?(l(e,t),(t.isMeshPhysicalMaterial?function(e,t){c(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===q&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}:c)(e,t)):t.isMeshMatcapMaterial?(l(e,t),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===q&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===q&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshDepthMaterial?(l(e,t),r=e,(a=t).displacementMap&&(r.displacementMap.value=a.displacementMap,r.displacementScale.value=a.displacementScale,r.displacementBias.value=a.displacementBias)):t.isMeshDistanceMaterial?(l(e,t),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,t)):t.isMeshNormalMaterial?(l(e,t),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===q&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===q&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isLineBasicMaterial?(r=t,(a=e).diffuse.value.copy(r.color),a.opacity.value=r.opacity,t.isLineDashedMaterial&&(a=t,(r=e).dashSize.value=a.dashSize,r.totalSize.value=a.dashSize+a.gapSize,r.scale.value=a.scale)):t.isPointsMaterial?function(e,t,n,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,t,n,i):t.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function Ns(e){const r=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),t=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let m=null,w=null;const u=[],d=[];this.domElement=r,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=_t,this.physicallyCorrectLights=!1,this.toneMapping=Se,this.toneMappingExposure=1;const E=this;let p=!1,f=0,g=0,T=null,S=-1,A=null;const v=new Ut,y=new Ut;let x=null,_=r.width,R=r.height,L=1,b=null,M=null;const C=new Ut(0,0,_,R),P=new Ut(0,0,_,R);let I=!1;const D=new br;let N=!1,O=!1;const F=new _n,B=new kt,U={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===T?L:1}let z=t;function G(t,n){for(let e=0;e<t.length;e++){var i=t[e],i=r.getContext(i,n);if(null!==i)return i}return null}try{var k={alpha:n,depth:i,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(r.addEventListener("webglcontextlost",pe,!1),r.addEventListener("webglcontextrestored",me,!1),null===z){const Te=["webgl2","webgl","experimental-webgl"];if(!0===E.isWebGL1Renderer&&Te.shift(),z=G(Te,k),null===z)throw G(Te)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===z.getShaderPrecisionFormat&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let V,W,j,X,q,Y,Z,J,K,Q,$,ee,te,ne,ie,re,ae,se,oe,le,ce,he;function ue(){V=new Nr(z),W=new Pr(z,V,e),V.init(W),ce=new Rs(z,V,W),j=new Ss(z,V,W),X=new Br(z),q=new hs,Y=new As(z,V,j,q,W,ce,X),Z=new Dr(E),J=new wr(z,W),he=new Lr(z,V,J,W),K=new Or(z,J,X,he),Q=new Gr(z,K,J,X),se=new zr(z),ie=new Ir(q),$=new cs(E,Z,V,W,he,ie),ee=new Ds(q),te=new ms(q),ne=new _s(V,W),ae=new Rr(E,Z,j,Q,o),re=new Ts(E,Q,W),oe=new Cr(z,V,X,W),le=new Fr(z,V,X,W),X.programs=$.programs,E.capabilities=W,E.extensions=V,E.properties=q,E.renderLists=te,E.shadowMap=re,E.state=j,E.info=X}ue();const de=new Is(E,z);function pe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function me(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;var e=X.autoReset,t=re.enabled,n=re.autoUpdate,i=re.needsUpdate,r=re.type;ue(),X.autoReset=e,re.enabled=t,re.autoUpdate=n,re.needsUpdate=i,re.type=r}function fe(e){const t=e.target;t.removeEventListener("dispose",fe),function(e){const t=q.get(e).programs;void 0!==t&&t.forEach(function(e){$.releaseProgram(e)})}(e=t),q.remove(e)}this.xr=de,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const e=V.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=V.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(e){void 0!==e&&(L=e,this.setSize(_,R,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Pt),e.set(_,R)},this.setSize=function(e,t,n){de.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_=e,R=t,r.width=Math.floor(e*L),r.height=Math.floor(t*L),!1!==n&&(r.style.width=e+"px",r.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Pt),e.set(_*L,R*L).floor()},this.setDrawingBufferSize=function(e,t,n){_=e,R=t,L=n,r.width=Math.floor(e*n),r.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Ut),e.copy(v)},this.getViewport=function(e){return e.copy(C)},this.setViewport=function(e,t,n,i){e.isVector4?C.set(e.x,e.y,e.z,e.w):C.set(e,t,n,i),j.viewport(v.copy(C).multiplyScalar(L).floor())},this.getScissor=function(e){return e.copy(P)},this.setScissor=function(e,t,n,i){e.isVector4?P.set(e.x,e.y,e.z,e.w):P.set(e,t,n,i),j.scissor(y.copy(P).multiplyScalar(L).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(e){j.setScissorTest(I=e)},this.setOpaqueSort=function(e){b=e},this.setTransparentSort=function(e){M=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new fi),e.copy(ae.getClearColor())},this.setClearColor=function(){ae.setClearColor.apply(ae,arguments)},this.getClearAlpha=function(){return ae.getClearAlpha()},this.setClearAlpha=function(){ae.setClearAlpha.apply(ae,arguments)},this.clear=function(e,t,n){let i=0;void 0!==e&&!e||(i|=z.COLOR_BUFFER_BIT),void 0!==t&&!t||(i|=z.DEPTH_BUFFER_BIT),void 0!==n&&!n||(i|=z.STENCIL_BUFFER_BIT),z.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){r.removeEventListener("webglcontextlost",pe,!1),r.removeEventListener("webglcontextrestored",me,!1),te.dispose(),ne.dispose(),q.dispose(),Z.dispose(),Q.dispose(),he.dispose(),de.dispose(),de.removeEventListener("sessionstart",ve),de.removeEventListener("sessionend",ye),xe.stop()},this.renderBufferImmediate=function(e,t){he.initAttributes();const n=q.get(e);e.hasPositions&&!n.position&&(n.position=z.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=z.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=z.createBuffer()),e.hasColors&&!n.color&&(n.color=z.createBuffer());t=t.getAttributes();e.hasPositions&&(z.bindBuffer(z.ARRAY_BUFFER,n.position),z.bufferData(z.ARRAY_BUFFER,e.positionArray,z.DYNAMIC_DRAW),he.enableAttribute(t.position),z.vertexAttribPointer(t.position,3,z.FLOAT,!1,0,0)),e.hasNormals&&(z.bindBuffer(z.ARRAY_BUFFER,n.normal),z.bufferData(z.ARRAY_BUFFER,e.normalArray,z.DYNAMIC_DRAW),he.enableAttribute(t.normal),z.vertexAttribPointer(t.normal,3,z.FLOAT,!1,0,0)),e.hasUvs&&(z.bindBuffer(z.ARRAY_BUFFER,n.uv),z.bufferData(z.ARRAY_BUFFER,e.uvArray,z.DYNAMIC_DRAW),he.enableAttribute(t.uv),z.vertexAttribPointer(t.uv,2,z.FLOAT,!1,0,0)),e.hasColors&&(z.bindBuffer(z.ARRAY_BUFFER,n.color),z.bufferData(z.ARRAY_BUFFER,e.colorArray,z.DYNAMIC_DRAW),he.enableAttribute(t.color),z.vertexAttribPointer(t.color,3,z.FLOAT,!1,0,0)),he.disableUnusedAttributes(),z.drawArrays(z.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=U);var s=r.isMesh&&r.matrixWorld.determinant()<0,o=Ee(e,t,i,r);j.setMaterial(i,s);let l=n.index;e=n.attributes.position;if(null===l){if(void 0===e||0===e.count)return}else if(0===l.count)return;let c=1;!0===i.wireframe&&(l=K.getWireframeAttribute(n),c=2),(i.morphTargets||i.morphNormals)&&se.update(r,n,i,o),he.setup(r,i,o,n,l);let h=oe;null!==l&&(u=J.get(l),h=le,h.setIndex(u));var t=(null!==l?l:e).count,s=n.drawRange.start*c,o=n.drawRange.count*c,u=null!==a?a.start*c:0,e=null!==a?a.count*c:1/0,a=Math.max(s,u),e=Math.min(t,s+o,u+e)-1,e=Math.max(0,e-a+1);if(0!==e){if(r.isMesh)!0===i.wireframe?(j.setLineWidth(i.wireframeLinewidth*H()),h.setMode(z.LINES)):h.setMode(z.TRIANGLES);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),j.setLineWidth(e*H()),r.isLineSegments?h.setMode(z.LINES):r.isLineLoop?h.setMode(z.LINE_LOOP):h.setMode(z.LINE_STRIP)}else r.isPoints?h.setMode(z.POINTS):r.isSprite&&h.setMode(z.TRIANGLES);r.isInstancedMesh?h.renderInstances(a,e,r.count):n.isInstancedBufferGeometry?(n=Math.min(n.instanceCount,n._maxInstanceCount),h.renderInstances(a,e,n)):h.render(a,e)}},this.compile=function(i,t){w=ne.get(i),w.init(),i.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(w.pushLight(e),e.castShadow&&w.pushShadow(e))}),w.setupLights(),i.traverse(function(t){var n=t.material;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++)Me(n[e],i,t);else Me(n,i,t)})};let ge=null;function ve(){xe.stop()}function ye(){xe.start()}const xe=new Mr;function _e(n,i,r){var a=!0===i.isScene?i.overrideMaterial:null;for(let e=0,t=n.length;e<t;e++){var s=n[e];const d=s.object;var o=s.geometry,l=null===a?s.material:a,c=s.group;if(r.isArrayCamera){var h=r.cameras;for(let e=0,t=h.length;e<t;e++){var u=h[e];d.layers.test(u.layers)&&(j.viewport(v.copy(u.viewport)),w.setupLightsView(u),be(d,i,u,o,l,c))}}else be(d,i,r,o,l,c)}}function be(e,t,n,i,r,a){var s,o;e.onBeforeRender(E,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject?(s=Ee(n,t,r,e),j.setMaterial(r),he.reset(),o=s,e.render(function(e){E.renderBufferImmediate(e,o)})):E.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(E,t,n,i,r,a)}function Me(e,t,n){!0!==t.isScene&&(t=U);const i=q.get(e);var r=w.state.lights,a=w.state.shadowsArray,s=r.state.version;const o=$.getParameters(e,r.state,a,t,n);n=$.getProgramCacheKey(o);let l=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=Z.get(e.envMap||i.environment),void 0===l&&(e.addEventListener("dispose",fe),l=new Map,i.programs=l);let c=l.get(n);if(void 0!==c){if(i.currentProgram===c&&i.lightsStateVersion===s)return we(e,o),c}else o.uniforms=$.getUniforms(e),e.onBeforeCompile(o,E),c=$.acquireProgram(o,n),l.set(n,c),i.uniforms=o.uniforms;const h=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=ie.uniform),we(e,o),i.needsLights=(e=e).isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,i.lightsStateVersion=s,i.needsLights&&(h.ambientLightColor.value=r.state.ambient,h.lightProbe.value=r.state.probe,h.directionalLights.value=r.state.directional,h.directionalLightShadows.value=r.state.directionalShadow,h.spotLights.value=r.state.spot,h.spotLightShadows.value=r.state.spotShadow,h.rectAreaLights.value=r.state.rectArea,h.ltc_1.value=r.state.rectAreaLTC1,h.ltc_2.value=r.state.rectAreaLTC2,h.pointLights.value=r.state.point,h.pointLightShadows.value=r.state.pointShadow,h.hemisphereLights.value=r.state.hemi,h.directionalShadowMap.value=r.state.directionalShadowMap,h.directionalShadowMatrix.value=r.state.directionalShadowMatrix,h.spotShadowMap.value=r.state.spotShadowMap,h.spotShadowMatrix.value=r.state.spotShadowMatrix,h.pointShadowMap.value=r.state.pointShadowMap,h.pointShadowMatrix.value=r.state.pointShadowMatrix);r=c.getUniforms(),r=Wa.seqWithValue(r.seq,h);return i.currentProgram=c,i.uniformsList=r,c}function we(e,t){const n=q.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas}function Ee(e,t,n,i){!0!==t.isScene&&(t=U),Y.resetTextureUnits();var r=t.fog,a=n.isMeshStandardMaterial?t.environment:null,s=null===T?E.outputEncoding:T.texture.encoding,o=Z.get(n.envMap||a),l=!0===n.vertexColors&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize;const c=q.get(n);var h=w.state.lights;!0===N&&(!0!==O&&e===A||(a=e===A&&n.id===S,ie.setState(n,e,a)));let u=!1;n.version===c.__version?(c.needsLights&&c.lightsStateVersion!==h.state.version||c.outputEncoding!==s||i.isInstancedMesh&&!1===c.instancing||!i.isInstancedMesh&&!0===c.instancing||c.envMap!==o||n.fog&&c.fog!==r||void 0!==c.numClippingPlanes&&(c.numClippingPlanes!==ie.numPlanes||c.numIntersection!==ie.numIntersection)||c.vertexAlphas!==l)&&(u=!0):(u=!0,c.__version=n.version);let d=c.currentProgram;!0===u&&(d=Me(n,t,i));let p=!1,m=!1,f=!1;const g=d.getUniforms(),v=c.uniforms;if(j.useProgram(d.program)&&(p=!0,m=!0,f=!0),n.id!==S&&(S=n.id,m=!0),p||A!==e){if(g.setValue(z,"projectionMatrix",e.projectionMatrix),W.logarithmicDepthBuffer&&g.setValue(z,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),A!==e&&(A=e,m=!0,f=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const _=g.map.cameraPosition;void 0!==_&&_.setValue(z,B.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(z,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(z,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){g.setOptional(z,i,"bindMatrix"),g.setOptional(z,i,"bindMatrixInverse");const b=i.skeleton;if(b){e=b.bones;if(W.floatVertexTextures){if(null===b.boneTexture){var y=Math.sqrt(4*e.length),y=Ct.ceilPowerOfTwo(y);y=Math.max(y,4);const M=new Float32Array(y*y*4);M.set(b.boneMatrices);var x=new yr(M,y,y,Be,De);b.boneMatrices=M,b.boneTexture=x,b.boneTextureSize=y}g.setValue(z,"boneTexture",b.boneTexture,Y),g.setValue(z,"boneTextureSize",b.boneTextureSize)}else g.setOptional(z,b,"boneMatrices")}}return!m&&c.receiveShadow===i.receiveShadow||(c.receiveShadow=i.receiveShadow,g.setValue(z,"receiveShadow",i.receiveShadow)),m&&(g.setValue(z,"toneMappingExposure",E.toneMappingExposure),c.needsLights&&(x=v,y=f,x.ambientLightColor.needsUpdate=y,x.lightProbe.needsUpdate=y,x.directionalLights.needsUpdate=y,x.directionalLightShadows.needsUpdate=y,x.pointLights.needsUpdate=y,x.pointLightShadows.needsUpdate=y,x.spotLights.needsUpdate=y,x.spotLightShadows.needsUpdate=y,x.rectAreaLights.needsUpdate=y,x.hemisphereLights.needsUpdate=y),r&&n.fog&&ee.refreshFogUniforms(v,r),ee.refreshMaterialUniforms(v,n,L,R),Wa.upload(z,c.uniformsList,v,Y)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(Wa.upload(z,c.uniformsList,v,Y),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(z,"center",i.center),g.setValue(z,"modelViewMatrix",i.modelViewMatrix),g.setValue(z,"normalMatrix",i.normalMatrix),g.setValue(z,"modelMatrix",i.matrixWorld),d}xe.setAnimationLoop(function(e){ge&&ge(e)}),"undefined"!=typeof window&&xe.setContext(window),this.setAnimationLoop=function(e){ge=e,de.setAnimationLoop(e),null===e?xe.stop():xe.start()},de.addEventListener("sessionstart",ve),de.addEventListener("sessionend",ye),this.render=function(e,t){let n,i;var r,a;void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),i=arguments[3]),void 0===t||!0===t.isCamera?!0!==p&&(!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===de.enabled&&!0===de.isPresenting&&(t=de.getCamera(t)),!0===e.isScene&&e.onBeforeRender(E,e,t,n||T),w=ne.get(e,d.length),w.init(),d.push(w),F.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),D.setFromProjectionMatrix(F),O=this.localClippingEnabled,N=ie.init(this.clippingPlanes,O,t),m=te.get(e,u.length),m.init(),u.push(m),function n(i,r,a,s){if(!1===i.visible)return;const e=i.layers.test(r.layers);if(e)if(i.isGroup)a=i.renderOrder;else if(i.isLOD)!0===i.autoUpdate&&i.update(r);else if(i.isLight)w.pushLight(i),i.castShadow&&w.pushShadow(i);else if(i.isSprite){if(!i.frustumCulled||D.intersectsSprite(i)){s&&B.setFromMatrixPosition(i.matrixWorld).applyMatrix4(F);const t=Q.update(i),l=i.material;l.visible&&m.push(i,t,l,a,B.z,null)}}else if(i.isImmediateRenderObject)s&&B.setFromMatrixPosition(i.matrixWorld).applyMatrix4(F),m.push(i,null,i.material,a,B.z,null);else if((i.isMesh||i.isLine||i.isPoints)&&(i.isSkinnedMesh&&i.skeleton.frame!==X.render.frame&&(i.skeleton.update(),i.skeleton.frame=X.render.frame),!i.frustumCulled||D.intersectsObject(i))){s&&B.setFromMatrixPosition(i.matrixWorld).applyMatrix4(F);const c=Q.update(i),h=i.material;if(Array.isArray(h)){const u=c.groups;for(let e=0,t=u.length;e<t;e++){const d=u[e],p=h[d.materialIndex];p&&p.visible&&m.push(i,c,p,a,B.z,d)}}else h.visible&&m.push(i,c,h,a,B.z,null)}const o=i.children;for(let e=0,t=o.length;e<t;e++)n(o[e],r,a,s)}(e,t,0,E.sortObjects),m.finish(),!0===E.sortObjects&&m.sort(b,M),!0===N&&ie.beginShadows(),a=w.state.shadowsArray,re.render(a,e,t),w.setupLights(),w.setupLightsView(t),!0===N&&ie.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ae.render(m,e,t,i),r=m.opaque,a=m.transparent,0<r.length&&_e(r,e,t),0<a.length&&_e(a,e,t),null!==T&&(Y.updateRenderTargetMipmap(T),Y.updateMultisampleRenderTarget(T)),!0===e.isScene&&e.onAfterRender(E,e,t),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1),he.resetDefaultState(),S=-1,A=null,d.pop(),w=0<d.length?d[d.length-1]:null,u.pop(),m=0<u.length?u[u.length-1]:null):console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return f},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return T},this.setRenderTarget=function(e,t=0,n=0){T=e,f=t,g=n,e&&void 0===q.get(e).__webglFramebuffer&&Y.setupRenderTarget(e);let i=null,r=!1,a=!1;var s;x=e?(((s=e.texture).isDataTexture3D||s.isDataTexture2DArray)&&(a=!0),s=q.get(e).__webglFramebuffer,e.isWebGLCubeRenderTarget?(i=s[t],r=!0):i=e.isWebGLMultisampleRenderTarget?q.get(e).__webglMultisampledFramebuffer:s,v.copy(e.viewport),y.copy(e.scissor),e.scissorTest):(v.copy(C).multiplyScalar(L).floor(),y.copy(P).multiplyScalar(L).floor(),I),j.bindFramebuffer(z.FRAMEBUFFER,i),j.viewport(v),j.scissor(y),j.setScissorTest(x),r?(s=q.get(e.texture),z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+t,s.__webglTexture,n)):a&&(e=q.get(e.texture),t=t||0,z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,e.__webglTexture,n||0,t))},this.readRenderTargetPixels=function(t,n,i,r,a,s,o){if(t&&t.isWebGLRenderTarget){let e=q.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(e=e[o]),e){j.bindFramebuffer(z.FRAMEBUFFER,e);try{var l=t.texture,c=l.format,h=l.type;if(c!==Be&&ce.convert(c)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=h===Ne&&(V.has("EXT_color_buffer_half_float")||W.isWebGL2&&V.has("EXT_color_buffer_float"));if(!(h===Ce||ce.convert(h)===z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)||h===De&&(W.isWebGL2||V.has("OES_texture_float")||V.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");z.checkFramebufferStatus(z.FRAMEBUFFER)===z.FRAMEBUFFER_COMPLETE?0<=n&&n<=t.width-r&&0<=i&&i<=t.height-a&&z.readPixels(n,i,r,a,ce.convert(c),ce.convert(h),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==T?q.get(T).__webglFramebuffer:null;j.bindFramebuffer(z.FRAMEBUFFER,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,n=0){var i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i),i=ce.convert(t.format);Y.setTexture2D(t,0),z.copyTexImage2D(z.TEXTURE_2D,n,i,e.x,e.y,r,a,0),j.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){var r=t.image.width,a=t.image.height,s=ce.convert(n.format),o=ce.convert(n.type);Y.setTexture2D(n,0),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,n.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,i,e.x,e.y,r,a,s,o,t.image.data):t.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):z.texSubImage2D(z.TEXTURE_2D,i,e.x,e.y,s,o,t.image),0===i&&n.generateMipmaps&&z.generateMipmap(z.TEXTURE_2D),j.unbindTexture()},this.copyTextureToTexture3D=function(t,n,i,r,a=0){if(E.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var{width:s,height:o,data:l}=i.image,c=ce.convert(r.format),h=ce.convert(r.type);let e;if(r.isDataTexture3D)Y.setTexture3D(r,0),e=z.TEXTURE_3D;else{if(!r.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Y.setTexture2DArray(r,0),e=z.TEXTURE_2D_ARRAY}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,r.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,r.unpackAlignment);var u=z.getParameter(z.UNPACK_ROW_LENGTH),d=z.getParameter(z.UNPACK_IMAGE_HEIGHT),p=z.getParameter(z.UNPACK_SKIP_PIXELS),m=z.getParameter(z.UNPACK_SKIP_ROWS),i=z.getParameter(z.UNPACK_SKIP_IMAGES);z.pixelStorei(z.UNPACK_ROW_LENGTH,s),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,o),z.pixelStorei(z.UNPACK_SKIP_PIXELS,t.min.x),z.pixelStorei(z.UNPACK_SKIP_ROWS,t.min.y),z.pixelStorei(z.UNPACK_SKIP_IMAGES,t.min.z),z.texSubImage3D(e,a,n.x,n.y,n.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,c,h,l),z.pixelStorei(z.UNPACK_ROW_LENGTH,u),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,d),z.pixelStorei(z.UNPACK_SKIP_PIXELS,p),z.pixelStorei(z.UNPACK_SKIP_ROWS,m),z.pixelStorei(z.UNPACK_SKIP_IMAGES,i),0===a&&r.generateMipmaps&&z.generateMipmap(e),j.unbindTexture()}},this.initTexture=function(e){Y.setTexture2D(e,0),j.unbindTexture()},this.resetState=function(){f=0,g=0,T=null,j.reset(),he.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Cs.prototype.isGroup=!0,Object.assign(Ps.prototype,{constructor:Ps,getHandSpace:function(){return null===this._hand&&(this._hand=new Cs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Cs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Cs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),l&&e.hand){a=!0;for(const d of e.hand.values()){var c=t.getJointPose(d,n);if(void 0===l.joints[d.jointName]){const m=new Cs;m.matrixAutoUpdate=!1,m.visible=!1,l.joints[d.jointName]=m,l.add(m)}const p=l.joints[d.jointName];null!==c&&(p.matrix.fromArray(c.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=c.radius),p.visible=null!==c}const u=l.joints["index-finger-tip"];var h=l.joints["thumb-tip"],h=u.position.distanceTo(h.position);l.inputState.pinching&&.025<h?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&h<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}}),Object.assign(Is.prototype,At.prototype);class Os extends Ns{}class Fs{constructor(e,t=25e-5){this.name="",this.color=new fi(e),this.density=t}clone(){return new Fs(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Fs.prototype.isFogExp2=Os.prototype.isWebGL1Renderer=!0;class Bs{constructor(e,t=1,n=1e3){this.name="",this.color=new fi(e),this.near=t,this.far=n}clone(){return new Bs(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Bs.prototype.isFog=!0;class Us extends jn{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}function Hs(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=Tt,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ct.generateUUID()}Us.prototype.isScene=!0,Object.defineProperty(Hs.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(Hs.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(n,i,r){n*=this.stride,r*=i.stride;for(let e=0,t=this.stride;e<t;e++)this.array[n+e]=i.array[r+e];return this},set:function(e,t=0){return this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ct.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new Hs(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ct.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const zs=new kt;function Gs(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}Object.defineProperties(Gs.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(Gs.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(n){for(let e=0,t=this.data.count;e<t;e++)zs.x=this.getX(e),zs.y=this.getY(e),zs.z=this.getZ(e),zs.applyMatrix4(n),this.setXYZ(e,zs.x,zs.y,zs.z);return this},applyNormalMatrix:function(n){for(let e=0,t=this.count;e<t;e++)zs.x=this.getX(e),zs.y=this.getY(e),zs.z=this.getZ(e),zs.applyNormalMatrix(n),this.setXYZ(e,zs.x,zs.y,zs.z);return this},transformDirection:function(n){for(let e=0,t=this.count;e<t;e++)zs.x=this.getX(e),zs.y=this.getY(e),zs.z=this.getZ(e),zs.transformDirection(n),this.setXYZ(e,zs.x,zs.y,zs.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this},clone:function(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Gs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return new xi(new this.array.constructor(n),this.itemSize,this.normalized)}},toJSON:function(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}}});class ks extends li{constructor(e){super(),this.type="SpriteMaterial",this.color=new fi(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}ks.prototype.isSpriteMaterial=!0;let Vs;const Ws=new kt,js=new kt,Xs=new kt,qs=new Pt,Ys=new Pt,Zs=new _n,Js=new kt,Ks=new kt,Qs=new kt,$s=new Pt,eo=new Pt,to=new Pt;class no extends jn{constructor(e){var t;super(),this.type="Sprite",void 0===Vs&&(Vs=new zi,t=new Hs(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5),Vs.setIndex([0,1,2,0,2,3]),Vs.setAttribute("position",new Gs(t,3,0,!1)),Vs.setAttribute("uv",new Gs(t,2,3,!1))),this.geometry=Vs,this.material=void 0!==e?e:new ks,this.center=new Pt(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),js.setFromMatrixScale(this.matrixWorld),Zs.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Xs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&js.multiplyScalar(-Xs.z);var n=this.material.rotation;let i,r;0!==n&&(r=Math.cos(n),i=Math.sin(n));n=this.center;io(Js.set(-.5,-.5,0),Xs,n,js,i,r),io(Ks.set(.5,-.5,0),Xs,n,js,i,r),io(Qs.set(.5,.5,0),Xs,n,js,i,r),$s.set(0,0),eo.set(1,0),to.set(1,1),null===e.ray.intersectTriangle(Js,Ks,Qs,!1,Ws)&&(io(Ks.set(-.5,.5,0),Xs,n,js,i,r),eo.set(0,1),null===e.ray.intersectTriangle(Js,Qs,Ks,!1,Ws))||((n=e.ray.origin.distanceTo(Ws))<e.near||n>e.far||t.push({distance:n,point:Ws.clone(),uv:si.getUV(Ws,Js,Ks,Qs,$s,eo,to,new Pt),face:null,object:this}))}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function io(e,t,n,i,r,a){qs.subVectors(e,n).addScalar(.5).multiply(i),void 0!==r?(Ys.x=a*qs.x-r*qs.y,Ys.y=r*qs.x+a*qs.y):Ys.copy(qs),e.copy(t),e.x+=Ys.x,e.y+=Ys.y,e.applyMatrix4(Zs)}no.prototype.isSprite=!0;const ro=new kt,ao=new kt;class so extends jn{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var n=e.levels;for(let e=0,t=n.length;e<t;e++){const i=n[e];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){var i=this.levels;if(0<i.length){let e,t;for(e=1,t=i.length;e<t&&!(n<i[e].distance);e++);return i[e-1].object}return null}raycast(e,t){var n;0<this.levels.length&&(ro.setFromMatrixPosition(this.matrixWorld),n=e.ray.origin.distanceTo(ro),this.getObjectForDistance(n).raycast(e,t))}update(n){const i=this.levels;if(1<i.length){ro.setFromMatrixPosition(n.matrixWorld),ao.setFromMatrixPosition(this.matrixWorld);var r=ro.distanceTo(ao)/n.zoom;i[0].object.visible=!0;let e,t;for(e=1,t=i.length;e<t&&r>=i[e].distance;e++)i[e-1].object.visible=!1,i[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)i[e].object.visible=!1}}toJSON(e){const n=super.toJSON(e);!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[];var i=this.levels;for(let e=0,t=i.length;e<t;e++){var r=i[e];n.object.levels.push({object:r.object.uuid,distance:r.distance})}return n}}const oo=new kt,lo=new Ut,co=new Ut,ho=new kt,uo=new _n;function po(e,t){rr.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new _n,this.bindMatrixInverse=new _n}function mo(){jn.call(this),this.type="Bone"}po.prototype=Object.assign(Object.create(rr.prototype),{constructor:po,isSkinnedMesh:!0,copy:function(e){return rr.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const n=new Ut,i=this.geometry.attributes.skinWeight;for(let e=0,t=i.count;e<t;e++){n.x=i.getX(e),n.y=i.getY(e),n.z=i.getZ(e),n.w=i.getW(e);var r=1/n.manhattanLength();r!=1/0?n.multiplyScalar(r):n.set(1,0,0,0),i.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(e){rr.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(e,t){var n=this.skeleton,i=this.geometry;lo.fromBufferAttribute(i.attributes.skinIndex,e),co.fromBufferAttribute(i.attributes.skinWeight,e),oo.fromBufferAttribute(i.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var r,a=co.getComponent(e);0!==a&&(r=lo.getComponent(e),uo.multiplyMatrices(n.bones[r].matrixWorld,n.boneInverses[r]),t.addScaledVector(ho.copy(oo).applyMatrix4(uo),a))}return t.applyMatrix4(this.bindMatrixInverse)}}),mo.prototype=Object.assign(Object.create(jn.prototype),{constructor:mo,isBone:!0});const fo=new _n,go=new _n;class vo{constructor(e=[],t=[]){this.uuid=Ct.generateUUID(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new _n)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){const n=new _n;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){var n=this.bones,i=this.boneInverses,r=this.boneMatrices;const e=this.boneTexture;for(let e=0,t=n.length;e<t;e++){var a=n[e]?n[e].matrixWorld:go;fo.multiplyMatrices(a,i[e]),fo.toArray(r,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new vo(this.bones,this.boneInverses)}getBoneByName(n){for(let e=0,t=this.bones.length;e<t;e++){var i=this.bones[e];if(i.name===n)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(n,i){this.uuid=n.uuid;for(let t=0,e=n.bones.length;t<e;t++){var r=n.bones[t];let e=i[r];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),e=new mo),this.bones.push(e),this.boneInverses.push((new _n).fromArray(n.boneInverses[t]))}return this.init(),this}toJSON(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;var i=this.bones,r=this.boneInverses;for(let e=0,t=i.length;e<t;e++){var a=i[e];n.bones.push(a.uuid);const s=r[e];n.boneInverses.push(s.toArray())}return n}}const yo=new _n,xo=new _n,_o=[],bo=new rr;function Mo(e,t,n){rr.call(this,e,t),this.instanceMatrix=new xi(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}Mo.prototype=Object.assign(Object.create(rr.prototype),{constructor:Mo,isInstancedMesh:!0,copy:function(e){return rr.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,i){var t=this.matrixWorld,r=this.count;if(bo.geometry=this.geometry,bo.material=this.material,void 0!==bo.material)for(let n=0;n<r;n++){this.getMatrixAt(n,yo),xo.multiplyMatrices(t,yo),bo.matrixWorld=xo,bo.raycast(e,_o);for(let e=0,t=_o.length;e<t;e++){const a=_o[e];a.instanceId=n,a.object=this,i.push(a)}_o.length=0}},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new xi(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});class wo extends li{constructor(e){super(),this.type="LineBasicMaterial",this.color=new fi(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}wo.prototype.isLineBasicMaterial=!0;const Eo=new kt,To=new kt,So=new _n,Ao=new xn,Ro=new un;function Lo(e=new zi,t=new wo){jn.call(this),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}Lo.prototype=Object.assign(Object.create(jn.prototype),{constructor:Lo,isLine:!0,copy:function(e){return jn.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const i=[0];for(let e=1,t=n.count;e<t;e++)Eo.fromBufferAttribute(n,e-1),To.fromBufferAttribute(n,e),i[e]=i[e-1],i[e]+=Eo.distanceTo(To);e.setAttribute("lineDistance",new Ri(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(n,i){const e=this.geometry;var t=this.matrixWorld,r=n.params.Line.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),Ro.copy(e.boundingSphere),Ro.applyMatrix4(t),Ro.radius+=r,!1!==n.ray.intersectsSphere(Ro)){So.copy(t).invert(),Ao.copy(n.ray).applyMatrix4(So);var r=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=r*r;const d=new kt,p=new kt,m=new kt,f=new kt;var o=this.isLineSegments?2:1;if(e.isBufferGeometry){const g=e.index;var l,c=e.attributes.position;if(null!==g)for(let e=Math.max(0,a.start),t=Math.min(g.count,a.start+a.count)-1;e<t;e+=o){var h=g.getX(e),u=g.getX(e+1);d.fromBufferAttribute(c,h),p.fromBufferAttribute(c,u),s<Ao.distanceSqToSegment(d,p,f,m)||(f.applyMatrix4(this.matrixWorld),(u=n.ray.origin.distanceTo(f))<n.near||u>n.far||i.push({distance:u,point:m.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else for(let e=Math.max(0,a.start),t=Math.min(c.count,a.start+a.count)-1;e<t;e+=o)d.fromBufferAttribute(c,e),p.fromBufferAttribute(c,e+1),s<Ao.distanceSqToSegment(d,p,f,m)||(f.applyMatrix4(this.matrixWorld),(l=n.ray.origin.distanceTo(f))<n.near||l>n.far||i.push({distance:l,point:m.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){var r=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Co=new kt,Po=new kt;function Io(e,t){Lo.call(this,e,t),this.type="LineSegments"}Io.prototype=Object.assign(Object.create(Lo.prototype),{constructor:Io,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const i=[];for(let e=0,t=n.count;e<t;e+=2)Co.fromBufferAttribute(n,e),Po.fromBufferAttribute(n,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+Co.distanceTo(Po);e.setAttribute("lineDistance",new Ri(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});class Do extends Lo{constructor(e,t){super(e,t),this.type="LineLoop"}}Do.prototype.isLineLoop=!0;class No extends li{constructor(e){super(),this.type="PointsMaterial",this.color=new fi(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}No.prototype.isPointsMaterial=!0;const Oo=new _n,Fo=new xn,Bo=new un,Uo=new kt;function Ho(e=new zi,t=new No){jn.call(this),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}function zo(e,t,n,i,r,a,s){var o=Fo.distanceSqToPoint(e);if(o<n){const l=new kt;Fo.closestPointToPoint(e,l),l.applyMatrix4(i);i=r.ray.origin.distanceTo(l);i<r.near||i>r.far||a.push({distance:i,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}Ho.prototype=Object.assign(Object.create(jn.prototype),{constructor:Ho,isPoints:!0,copy:function(e){return jn.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(n,i){const e=this.geometry;var r=this.matrixWorld,t=n.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),Bo.copy(e.boundingSphere),Bo.applyMatrix4(r),Bo.radius+=t,!1!==n.ray.intersectsSphere(Bo)){Oo.copy(r).invert(),Fo.copy(n.ray).applyMatrix4(Oo);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t;if(e.isBufferGeometry){const c=e.index;var o=e.attributes.position;if(null!==c)for(let e=Math.max(0,a.start),t=Math.min(c.count,a.start+a.count);e<t;e++){var l=c.getX(e);Uo.fromBufferAttribute(o,l),zo(Uo,l,s,r,n,i,this)}else for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++)Uo.fromBufferAttribute(o,e),zo(Uo,e,s,r,n,i,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=i.length;e<t;e++){var r=i[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});class Go extends Ft{constructor(t,e,n,i,r,a,s,o,l){super(t,e,n,i,r,a,s,o,l),this.format=void 0!==s?s:Fe,this.minFilter=void 0!==a?a:Ae,this.magFilter=void 0!==r?r:Ae,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class ko extends Ft{constructor(e,t,n,i,r,a,s,o,l,c,h,u){super(null,a,s,o,l,c,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}ko.prototype.isCompressedTexture=Go.prototype.isVideoTexture=!0;class Vo extends Ft{constructor(e,t,n,i,r,a,s,o,l){super(e,t,n,i,r,a,s,o,l),this.needsUpdate=!0}}class Wo extends Ft{constructor(e,t,n,i,r,a,s,o,l,c){if((c=void 0!==c?c:Ue)!==Ue&&c!==He)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,i,r,a,s,o,c,n=void 0===(n=void 0===n&&c===Ue?Pe:n)&&c===He?Oe:n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:k,this.minFilter=void 0!==o?o:k,this.flipY=!1,this.generateMipmaps=!1}}Wo.prototype.isDepthTexture=Vo.prototype.isCanvasTexture=!0;class jo extends zi{constructor(n=1,i=8,r=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:n,segments:i,thetaStart:r,thetaLength:a},i=Math.max(3,i);const t=[],s=[],o=[],l=[],c=new kt,h=new Pt;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=i;e++,t+=3){var u=r+e/i*a;c.x=n*Math.cos(u),c.y=n*Math.sin(u),s.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(s[t]/n+1)/2,h.y=(s[t+1]/n+1)/2,l.push(h.x,h.y)}for(let e=1;e<=i;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new Ri(s,3)),this.setAttribute("normal",new Ri(o,3)),this.setAttribute("uv",new Ri(l,2))}}class Xo extends zi{constructor(f=1,g=1,v=1,y=8,x=1,e=!1,_=0,b=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:f,radiusBottom:g,height:v,radialSegments:y,heightSegments:x,openEnded:e,thetaStart:_,thetaLength:b};const M=this;y=Math.floor(y),x=Math.floor(x);const w=[],E=[],T=[],S=[];let A=0;const R=[],L=v/2;let C=0;function t(t){var n=A;const i=new Pt,r=new kt;let a=0;var s=!0===t?f:g,o=!0===t?1:-1;for(let e=1;e<=y;e++)E.push(0,L*o,0),T.push(0,o,0),S.push(.5,.5),A++;var l=A;for(let e=0;e<=y;e++){var c=e/y*b+_,h=Math.cos(c),c=Math.sin(c);r.x=s*c,r.y=L*o,r.z=s*h,E.push(r.x,r.y,r.z),T.push(0,o,0),i.x=.5*h+.5,i.y=.5*c*o+.5,S.push(i.x,i.y),A++}for(let e=0;e<y;e++){var u=n+e,d=l+e;!0===t?w.push(d,d+1,u):w.push(d+1,d,u),a+=3}M.addGroup(C,a,!0===t?1:2),C+=a}!function(){const t=new kt,n=new kt;let i=0;var r=(g-f)/v;for(let e=0;e<=x;e++){const m=[];var a=e/x,s=a*(g-f)+f;for(let e=0;e<=y;e++){var o=e/y,l=o*b+_,c=Math.sin(l),l=Math.cos(l);n.x=s*c,n.y=-a*v+L,n.z=s*l,E.push(n.x,n.y,n.z),t.set(c,r,l).normalize(),T.push(t.x,t.y,t.z),S.push(o,1-a),m.push(A++)}R.push(m)}for(let t=0;t<y;t++)for(let e=0;e<x;e++){var h=R[e][t],u=R[e+1][t],d=R[e+1][t+1],p=R[e][t+1];w.push(h,u,p),w.push(u,d,p),i+=6}M.addGroup(C,i,0),C+=i}(),!1===e&&(0<f&&t(!0),0<g&&t(!1)),this.setIndex(w),this.setAttribute("position",new Ri(E,3)),this.setAttribute("normal",new Ri(T,3)),this.setAttribute("uv",new Ri(S,2))}}class qo extends Xo{constructor(e=1,t=1,n=8,i=1,r=!1,a=0,s=2*Math.PI){super(0,e,t,n,i,r,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:s}}}class Yo extends zi{constructor(n,a,e=1,t=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:a,radius:e,detail:t};const h=[],u=[];function d(e){h.push(e.x,e.y,e.z)}function s(e,t){e*=3;t.x=n[0+e],t.y=n[1+e],t.z=n[2+e]}function p(e,t,n,i){i<0&&1===e.x&&(u[t]=e.x-1),0===n.x&&0===n.z&&(u[t]=i/2/Math.PI+.5)}function m(e){return Math.atan2(e.z,-e.x)}!function(t){var n=new kt,i=new kt,r=new kt;for(let e=0;e<a.length;e+=3)s(a[e+0],n),s(a[e+1],i),s(a[e+2],r),function(e,n,i,t){const r=t+1,a=[];for(let t=0;t<=r;t++){a[t]=[];const c=e.clone().lerp(i,t/r);var s=n.clone().lerp(i,t/r),o=r-t;for(let e=0;e<=o;e++)0===e&&t===r?a[t][e]=c:a[t][e]=c.clone().lerp(s,e/o)}for(let t=0;t<r;t++)for(let e=0;e<2*(r-t)-1;e++){var l=Math.floor(e/2);e%2==0?(d(a[t][l+1]),d(a[t+1][l]),d(a[t][l])):(d(a[t][l+1]),d(a[t+1][l+1]),d(a[t+1][l]))}}(n,i,r,t)}(t),function(t){const n=new kt;for(let e=0;e<h.length;e+=3)n.x=h[e+0],n.y=h[e+1],n.z=h[e+2],n.normalize().multiplyScalar(t),h[e+0]=n.x,h[e+1]=n.y,h[e+2]=n.z}(e),function(){const t=new kt;for(let e=0;e<h.length;e+=3){t.x=h[e+0],t.y=h[e+1],t.z=h[e+2];var n=m(t)/2/Math.PI+.5,i=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(t)/Math.PI+.5;u.push(n,1-i)}(function(){const n=new kt,i=new kt,r=new kt,a=new kt,s=new Pt,o=new Pt,l=new Pt;for(let e=0,t=0;e<h.length;e+=9,t+=6){n.set(h[e+0],h[e+1],h[e+2]),i.set(h[e+3],h[e+4],h[e+5]),r.set(h[e+6],h[e+7],h[e+8]),s.set(u[t+0],u[t+1]),o.set(u[t+2],u[t+3]),l.set(u[t+4],u[t+5]),a.copy(n).add(i).add(r).divideScalar(3);var c=m(a);p(s,t+0,n,c),p(o,t+2,i,c),p(l,t+4,r,c)}})(),function(){for(let e=0;e<u.length;e+=6){var t=u[e+0],n=u[e+2],i=u[e+4],r=Math.max(t,n,i),a=Math.min(t,n,i);.9<r&&a<.1&&(t<.2&&(u[e+0]+=1),n<.2&&(u[e+2]+=1),i<.2&&(u[e+4]+=1))}}()}(),this.setAttribute("position",new Ri(h,3)),this.setAttribute("normal",new Ri(h.slice(),3)),this.setAttribute("uv",new Ri(u,2)),0===t?this.computeVertexNormals():this.normalizeNormals()}}class Zo extends Yo{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2,i=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const Jo=new kt,Ko=new kt,Qo=new kt,$o=new si;class el extends zi{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0!==e.isGeometry){var n=Math.pow(10,4),i=Math.cos(Ct.DEG2RAD*t);const f=e.getIndex();var r=e.getAttribute("position"),a=(f||r).count;const g=[0,0,0];var s,o,l=["a","b","c"];const v=new Array(3),y={},x=[];for(let e=0;e<a;e+=3){f?(g[0]=f.getX(e),g[1]=f.getX(e+1),g[2]=f.getX(e+2)):(g[0]=e,g[1]=e+1,g[2]=e+2);const{a:_,b,c:M}=$o;if(_.fromBufferAttribute(r,g[0]),b.fromBufferAttribute(r,g[1]),M.fromBufferAttribute(r,g[2]),$o.getNormal(Qo),v[0]=`${Math.round(_.x*n)},${Math.round(_.y*n)},${Math.round(_.z*n)}`,v[1]=`${Math.round(b.x*n)},${Math.round(b.y*n)},${Math.round(b.z*n)}`,v[2]=`${Math.round(M.x*n)},${Math.round(M.y*n)},${Math.round(M.z*n)}`,v[0]!==v[1]&&v[1]!==v[2]&&v[2]!==v[0])for(let e=0;e<3;e++){var c=(e+1)%3,h=v[e],u=v[c],d=$o[l[e]],p=$o[l[c]],m=`${h}_${u}`,h=`${u}_${h}`;h in y&&y[h]?(Qo.dot(y[h].normal)<=i&&(x.push(d.x,d.y,d.z),x.push(p.x,p.y,p.z)),y[h]=null):m in y||(y[m]={index0:g[e],index1:g[c],normal:Qo.clone()})}}for(const w in y)y[w]&&({index0:s,index1:o}=y[w],Jo.fromBufferAttribute(r,s),Ko.fromBufferAttribute(r,o),x.push(Jo.x,Jo.y,Jo.z),x.push(Ko.x,Ko.y,Ko.z));this.setAttribute("position",new Ri(x,3))}else console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}const tl={triangulate:function(t,e,n){n=n||2;var i=e&&e.length,r=i?e[0]*n:t.length;let a=nl(t,0,r,n,!0);var s=[];if(!a||a.next===a.prev)return s;let o,l,c,h,u,d,p;if(i&&(a=function(e,t,n,i){const r=[];let a,s,o,l,c;for(a=0,s=t.length;a<s;a++)o=t[a]*i,l=a<s-1?t[a+1]*i:e.length,c=nl(e,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(function(e){let t=e,n=e;for(;(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next,t!==e;);return n}(c));for(r.sort(al),a=0;a<r.length;a++)!function(e,t){(t=function(e,t){let n=t;var i=e.x,r=e.y;let a=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){var o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=i&&o>a){if((a=o)===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}}while(n=n.next,n!==t);if(!s)return null;if(i===a)return s;var l=s,c=s.x,h=s.y;let u=1/0,d;n=s;for(;i>=n.x&&n.x>=c&&i!==n.x&&ol(r<h?i:a,r,c,h,r<h?a:i,r,n.x,n.y)&&(d=Math.abs(r-n.y)/(i-n.x),pl(n,e)&&(d<u||d===u&&(n.x>s.x||n.x===s.x&&function(e,t){return ll(e.prev,e,t.prev)<0&&ll(t.next,e,e.next)<0}(s,n)))&&(s=n,u=d)),n=n.next,n!==l;);return s}(e,t))&&(e=ml(t,e),il(t,t.next),il(e,e.next))}(r[a],n),n=il(n,n.next);return n}(t,e,a,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?1/p:0}return rl(a,s,n,o,l,p),s}};function nl(e,t,n,i,r){let a,s;if(r===0<function(n,i,r,a){let s=0;for(let e=i,t=r-a;e<r;e+=a)s+=(n[t]-n[e])*(n[e+1]+n[t+1]),t=e;return s}(e,t,n,i))for(a=t;a<n;a+=i)s=fl(a,e[a],e[a+1],s);else for(a=n-i;a>=t;a-=i)s=fl(a,e[a],e[a+1],s);return s&&cl(s,s.next)&&(gl(s),s=s.next),s}function il(e,t){if(!e)return e;t=t||e;let n=e,i;do{if(i=!1,n.steiner||!cl(n,n.next)&&0!==ll(n.prev,n,n.next))n=n.next;else{if(gl(n),n=t=n.prev,n===n.next)break;i=!0}}while(i||n!==t);return t}function rl(i,r,a,s,o,l,c){if(i){!c&&l&&function(e,t,n,i){let r=e;for(;null===r.z&&(r.z=sl(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next,r!==e;);r.prevZ.nextZ=null,r.prevZ=null,function(e){let t,n,i,r,a,s,o,l,c=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,i=n,o=0,t=0;t<c&&(o++,i=i.nextZ,i);t++);for(l=c;0<o||0<l&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=i}}while(a.nextZ=null,c*=2,1<s)}(r)}(i,s,o,l);let e=i,t,n;for(;i.prev!==i.next;)if(t=i.prev,n=i.next,l?function(e,t,n,i){var r=e.prev,a=e,s=e.next;if(0<=ll(r,a,s))return!1;var o=(r.x<a.x?r.x<s.x?r:s:a.x<s.x?a:s).x,l=(r.y<a.y?r.y<s.y?r:s:a.y<s.y?a:s).y,c=(r.x>a.x?r.x>s.x?r:s:a.x>s.x?a:s).x,h=(r.y>a.y?r.y>s.y?r:s:a.y>s.y?a:s).y,u=sl(o,l,t,n,i),d=sl(c,h,t,n,i);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&ol(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=ll(p.prev,p,p.next))return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&ol(r.x,r.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=ll(m.prev,m,m.next))return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&ol(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=ll(p.prev,p,p.next))return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&ol(r.x,r.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=ll(m.prev,m,m.next))return!1;m=m.nextZ}return!0}(i,s,o,l):function(e){var t=e.prev,n=e,i=e.next;if(0<=ll(t,n,i))return!1;let r=e.next.next;for(;r!==e.prev;){if(ol(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&0<=ll(r.prev,r,r.next))return!1;r=r.next}return!0}(i))r.push(t.i/a),r.push(i.i/a),r.push(n.i/a),gl(i),i=n.next,e=n.next;else if((i=n)===e){c?1===c?rl(i=function(e,t,n){let i=e;do{var r=i.prev,a=i.next.next;!cl(r,a)&&hl(r,i,i.next,a)&&pl(r,a)&&pl(a,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(a.i/n),gl(i),gl(i.next),i=e=a),i=i.next}while(i!==e);return il(i)}(il(i),r,a),r,a,s,o,l,2):2===c&&function(e,t,n,i,r,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&hl(n,n.next,e,t))return!0}while(n=n.next,n!==e);return!1}(e,t)&&(pl(e,t)&&pl(t,e)&&function(e,t){let n=e,i=!1;var r=(e.x+t.x)/2,a=(e.y+t.y)/2;for(;n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next,n!==e;);return i}(e,t)&&(ll(e.prev,e,t.prev)||ll(e,t.prev,t))||cl(e,t)&&0<ll(e.prev,e,e.next)&&0<ll(t.prev,t,t.next))}(s,e)){var o=ml(s,e);return s=il(s,s.next),o=il(o,o.next),rl(s,t,n,i,r,a),rl(o,t,n,i,r,a)}e=e.next}}while(s=s.next,s!==e)}(i,r,a,s,o,l):rl(il(i),r,a,s,o,l,1);break}}}function al(e,t){return e.x-t.x}function sl(e,t,n,i,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function ol(e,t,n,i,r,a,s,o){return 0<=(r-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(i-o)-(n-s)*(t-o)&&0<=(n-s)*(a-o)-(r-s)*(i-o)}function ll(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function cl(e,t){return e.x===t.x&&e.y===t.y}function hl(e,t,n,i){var r=dl(ll(e,t,n)),a=dl(ll(e,t,i)),s=dl(ll(n,i,e)),o=dl(ll(n,i,t));return r!==a&&s!==o||(0===r&&ul(e,n,t)||(0===a&&ul(e,i,t)||(0===s&&ul(n,e,i)||!(0!==o||!ul(n,t,i)))))}function ul(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function dl(e){return 0<e?1:e<0?-1:0}function pl(e,t){return ll(e.prev,e,e.next)<0?0<=ll(e,t,e.next)&&0<=ll(e,e.prev,t):ll(e,t,e.prev)<0||ll(e,e.next,t)<0}function ml(e,t){const n=new vl(e.i,e.x,e.y),i=new vl(t.i,t.x,t.y),r=e.next,a=t.prev;return(e.next=t).prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function fl(e,t,n,i){const r=new vl(e,t,n);return i?(r.next=i.next,(r.prev=i).next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function gl(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function vl(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const yl={area:function(n){var i=n.length;let r=0;for(let e=i-1,t=0;t<i;e=t++)r+=n[e].x*n[t].y-n[t].x*n[e].y;return.5*r},isClockWise:function(e){return yl.area(e)<0},triangulateShape:function(e,t){var n=[];const i=[],r=[];xl(e),_l(n,e);let a=e.length;t.forEach(xl);for(let e=0;e<t.length;e++)i.push(a),a+=t[e].length,_l(n,t[e]);const s=tl.triangulate(n,i);for(let e=0;e<s.length;e+=3)r.push(s.slice(e,e+3));return r}};function xl(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function _l(t,n){for(let e=0;e<n.length;e++)t.push(n[e].x),t.push(n[e].y)}class bl extends zi{constructor(n,Q){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:Q},n=Array.isArray(n)?n:[n];const $=this,ee=[],te=[];for(let e=0,t=n.length;e<t;e++)!function(e){const i=[],t=void 0!==Q.curveSegments?Q.curveSegments:12,o=void 0!==Q.steps?Q.steps:1;let n=void 0!==Q.depth?Q.depth:100,s=void 0===Q.bevelEnabled||Q.bevelEnabled,r=void 0!==Q.bevelThickness?Q.bevelThickness:6,a=void 0!==Q.bevelSize?Q.bevelSize:r-2,l=void 0!==Q.bevelOffset?Q.bevelOffset:0,c=void 0!==Q.bevelSegments?Q.bevelSegments:3;const h=Q.extrudePath,u=void 0!==Q.UVGenerator?Q.UVGenerator:Ml;void 0!==Q.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),n=Q.amount);let d,p=!1,m,f,g,v;h&&(d=h.getSpacedPoints(o),p=!0,s=!1,m=h.computeFrenetFrames(o,!1),f=new kt,g=new kt,v=new kt);s||(c=0,r=0,a=0,l=0);e=e.extractPoints(t);let y=e.shape;const x=e.holes,_=!yl.isClockWise(y);if(_){y=y.reverse();for(let e=0,t=x.length;e<t;e++){const K=x[e];yl.isClockWise(K)&&(x[e]=K.reverse())}}const b=yl.triangulateShape(y,x),M=y;for(let e=0,t=x.length;e<t;e++){var w=x[e];y=y.concat(w)}function E(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const T=y.length,S=b.length;function A(e,t,n){let i,r,a;var s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,c=n.y-e.y,h=s*s+o*o;if(Math.abs(s*c-o*l)>Number.EPSILON){var u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-o/u,u=t.y+s/u,d=((n.x-c/d-p)*c-(n.y+l/d-u)*l)/(s*c-o*l);i=p+s*d-e.x,r=u+o*d-e.y;e=i*i+r*r;if(e<=2)return new Pt(i,r);a=Math.sqrt(e/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(c)&&(e=!0),a=e?(i=-o,r=s,Math.sqrt(h)):(i=s,r=o,Math.sqrt(h/2))}return new Pt(i/a,r/a)}const R=[];for(let e=0,t=M.length,n=t-1,i=e+1;e<t;e++,n++,i++)n===t&&(n=0),i===t&&(i=0),R[e]=A(M[e],M[n],M[i]);const L=[];let C,P=R.concat();for(let e=0,t=x.length;e<t;e++){var I=x[e];C=[];for(let e=0,t=I.length,n=t-1,i=e+1;e<t;e++,n++,i++)n===t&&(n=0),i===t&&(i=0),C[e]=A(I[e],I[n],I[i]);L.push(C),P=P.concat(C)}for(let e=0;e<c;e++){var D=e/c,N=r*Math.cos(D*Math.PI/2);const U=a*Math.sin(D*Math.PI/2)+l;for(let e=0,t=M.length;e<t;e++){var O=E(M[e],R[e],U);q(O.x,O.y,-N)}for(let e=0,t=x.length;e<t;e++){var F=x[e];C=L[e];for(let e=0,t=F.length;e<t;e++){var B=E(F[e],C[e],U);q(B.x,B.y,-N)}}}const U=a+l;for(let e=0;e<T;e++){var H=s?E(y[e],P[e],U):y[e];p?(g.copy(m.normals[0]).multiplyScalar(H.x),f.copy(m.binormals[0]).multiplyScalar(H.y),v.copy(d[0]).add(g).add(f),q(v.x,v.y,v.z)):q(H.x,H.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<T;e++){var z=s?E(y[e],P[e],U):y[e];p?(g.copy(m.normals[t]).multiplyScalar(z.x),f.copy(m.binormals[t]).multiplyScalar(z.y),v.copy(d[t]).add(g).add(f),q(v.x,v.y,v.z)):q(z.x,z.y,n/o*t)}for(let e=c-1;0<=e;e--){var G=e/c,k=r*Math.cos(G*Math.PI/2);const U=a*Math.sin(G*Math.PI/2)+l;for(let e=0,t=M.length;e<t;e++){var V=E(M[e],R[e],U);q(V.x,V.y,n+k)}for(let e=0,t=x.length;e<t;e++){var W=x[e];C=L[e];for(let e=0,t=W.length;e<t;e++){var j=E(W[e],C[e],U);p?q(j.x,j.y+d[o-1].y,d[o-1].x+k):q(j.x,j.y,n+k)}}}function X(e,i){let t=e.length;for(;0<=--t;){var r=t;let n=t-1;n<0&&(n=e.length-1);for(let e=0,t=o+2*c;e<t;e++){var a=T*e,s=T*(e+1);!function(e,t,n,i){Z(e),Z(t),Z(i),Z(t),Z(n),Z(i);i=ee.length/3,i=u.generateSideWallUV($,ee,i-6,i-3,i-2,i-1);J(i[0]),J(i[1]),J(i[3]),J(i[1]),J(i[2]),J(i[3])}(i+r+a,i+n+a,i+n+s,i+r+s)}}}function q(e,t,n){i.push(e),i.push(t),i.push(n)}function Y(e,t,n){Z(e),Z(t),Z(n);n=ee.length/3,n=u.generateTopUV($,ee,n-3,n-2,n-1);J(n[0]),J(n[1]),J(n[2])}function Z(e){ee.push(i[3*e+0]),ee.push(i[3*e+1]),ee.push(i[3*e+2])}function J(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(s){let t=0*T;for(let e=0;e<S;e++){var n=b[e];Y(n[2]+t,n[1]+t,n[0]+t)}e=o+2*c,t=T*e;for(let e=0;e<S;e++){var i=b[e];Y(i[0]+t,i[1]+t,i[2]+t)}}else{for(let e=0;e<S;e++){var r=b[e];Y(r[2],r[1],r[0])}for(let e=0;e<S;e++){var a=b[e];Y(a[0]+T*o,a[1]+T*o,a[2]+T*o)}}$.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let n=0;X(M,n),n+=M.length;for(let e=0,t=x.length;e<t;e++){var i=x[e];X(i,n),n+=i.length}$.addGroup(e,ee.length/3-e,1)}()}(n[e]);this.setAttribute("position",new Ri(ee,3)),this.setAttribute("uv",new Ri(te,2)),this.computeVertexNormals()}toJSON(){var e=zi.prototype.toJSON.call(this);return function(n,e,i){if(i.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var r=n[e];i.shapes.push(r.uuid)}else i.shapes.push(n.uuid);void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,e)}}const Ml={generateTopUV:function(e,t,n,i,r){var a=t[3*n],s=t[3*n+1],o=t[3*i],n=t[3*i+1],i=t[3*r],r=t[3*r+1];return[new Pt(a,s),new Pt(o,n),new Pt(i,r)]},generateSideWallUV:function(e,t,n,i,r,a){var s=t[3*n],o=t[3*n+1],l=t[3*n+2],c=t[3*i],h=t[3*i+1],u=t[3*i+2],d=t[3*r],p=t[3*r+1],n=t[3*r+2],i=t[3*a],r=t[3*a+1],a=t[3*a+2];return Math.abs(o-h)<.01?[new Pt(s,1-l),new Pt(c,1-u),new Pt(d,1-n),new Pt(i,1-a)]:[new Pt(o,1-l),new Pt(h,1-u),new Pt(p,1-n),new Pt(r,1-a)]}};class wl extends Yo{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class El extends zi{constructor(n,i=12,e=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:n,segments:i,phiStart:e,phiLength:r},i=Math.floor(i),r=Ct.clamp(r,0,2*Math.PI);const a=[],s=[],o=[];var l=1/i;const c=new kt,h=new Pt;for(let t=0;t<=i;t++){var u=e+t*l*r,d=Math.sin(u),p=Math.cos(u);for(let e=0;e<=n.length-1;e++)c.x=n[e].x*d,c.y=n[e].y,c.z=n[e].x*p,s.push(c.x,c.y,c.z),h.x=t/i,h.y=e/(n.length-1),o.push(h.x,h.y)}for(let t=0;t<i;t++)for(let e=0;e<n.length-1;e++){var m=e+t*n.length,f=m+n.length,g=m+n.length+1,v=m+1;a.push(m,f,v),a.push(f,g,v)}if(this.setIndex(a),this.setAttribute("position",new Ri(s,3)),this.setAttribute("uv",new Ri(o,2)),this.computeVertexNormals(),r===2*Math.PI){const x=this.attributes.normal.array,_=new kt,b=new kt,M=new kt;var y=i*n.length*3;for(let e=0,t=0;e<n.length;e++,t+=3)_.x=x[t+0],_.y=x[t+1],_.z=x[t+2],b.x=x[y+t+0],b.y=x[y+t+1],b.z=x[y+t+2],M.addVectors(_,b).normalize(),x[t+0]=x[y+t+0]=M.x,x[t+1]=x[y+t+1]=M.y,x[t+2]=x[y+t+2]=M.z}}}class Tl extends Yo{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}function Sl(t,n,i){zi.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:n,stacks:i};const r=[],a=[],s=[],o=[];const l=new kt;var c=new kt,h=new kt;const u=new kt,d=new kt;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var p=n+1;for(let e=0;e<=i;e++){var m=e/i;for(let e=0;e<=n;e++){var f=e/n;t(f,m,c),a.push(c.x,c.y,c.z),0<=f-1e-5?(t(f-1e-5,m,h),u.subVectors(c,h)):(t(1e-5+f,m,h),u.subVectors(h,c)),0<=m-1e-5?(t(f,m-1e-5,h),d.subVectors(c,h)):(t(f,1e-5+m,h),d.subVectors(h,c)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(f,m)}}for(let t=0;t<i;t++)for(let e=0;e<n;e++){var g=t*p+e,v=t*p+e+1,y=(t+1)*p+e+1,x=(t+1)*p+e;r.push(g,v,x),r.push(v,y,x)}this.setIndex(r),this.setAttribute("position",new Ri(a,3)),this.setAttribute("normal",new Ri(s,3)),this.setAttribute("uv",new Ri(o,2))}(Sl.prototype=Object.create(zi.prototype)).constructor=Sl;class Al extends zi{constructor(e=.5,t=1,n=8,i=1,r=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n);const s=[],o=[],l=[],c=[];let h=e;var u=(t-e)/(i=Math.max(1,i));const d=new kt,p=new Pt;for(let e=0;e<=i;e++){for(let e=0;e<=n;e++){var m=r+e/n*a;d.x=h*Math.cos(m),d.y=h*Math.sin(m),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<i;e++){var f=e*(n+1);for(let e=0;e<n;e++){var g=e+f,v=g+n+1,y=g+n+2,x=g+1;s.push(g,v,x),s.push(v,y,x)}}this.setIndex(s),this.setAttribute("position",new Ri(o,3)),this.setAttribute("normal",new Ri(l,3)),this.setAttribute("uv",new Ri(c,2))}}class Rl extends zi{constructor(t,d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let n=0,v=0;if(!1===Array.isArray(t))i(t);else for(let e=0;e<t.length;e++)i(t[e]),this.addGroup(n,v,e),n+=v,v=0;function i(e){var n=m.length/3,e=e.extractPoints(d);let i=e.shape;const r=e.holes;!1===yl.isClockWise(i)&&(i=i.reverse());for(let e=0,t=r.length;e<t;e++){const u=r[e];!0===yl.isClockWise(u)&&(r[e]=u.reverse())}var a=yl.triangulateShape(i,r);for(let e=0,t=r.length;e<t;e++){var s=r[e];i=i.concat(s)}for(let e=0,t=i.length;e<t;e++){var o=i[e];m.push(o.x,o.y,0),f.push(0,0,1),g.push(o.x,o.y)}for(let e=0,t=a.length;e<t;e++){var l=a[e],c=l[0]+n,h=l[1]+n,l=l[2]+n;p.push(c,h,l),v+=3}}this.setIndex(p),this.setAttribute("position",new Ri(m,3)),this.setAttribute("normal",new Ri(f,3)),this.setAttribute("uv",new Ri(g,2))}toJSON(){var e=zi.prototype.toJSON.call(this);return function(n,i){if(i.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var r=n[e];i.shapes.push(r.uuid)}else i.shapes.push(n.uuid);return i}(this.parameters.shapes,e)}}class Ll extends zi{constructor(n=1,i=8,r=6,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:n,widthSegments:i,heightSegments:r,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},i=Math.max(3,Math.floor(i)),r=Math.max(2,Math.floor(r));var c=Math.min(o+l,Math.PI);let h=0;const u=[],d=new kt,p=new kt,m=[],f=[],g=[],v=[];for(let e=0;e<=r;e++){const E=[];var y=e/r;let t=0;0==e&&0==o?t=.5/i:e==r&&c==Math.PI&&(t=-.5/i);for(let e=0;e<=i;e++){var x=e/i;d.x=-n*Math.cos(a+x*s)*Math.sin(o+y*l),d.y=n*Math.cos(o+y*l),d.z=n*Math.sin(a+x*s)*Math.sin(o+y*l),f.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(x+t,1-y),E.push(h++)}u.push(E)}for(let t=0;t<r;t++)for(let e=0;e<i;e++){var _=u[t][e+1],b=u[t][e],M=u[t+1][e],w=u[t+1][e+1];(0!==t||0<o)&&m.push(_,b,w),(t!==r-1||c<Math.PI)&&m.push(b,M,w)}this.setIndex(m),this.setAttribute("position",new Ri(f,3)),this.setAttribute("normal",new Ri(g,3)),this.setAttribute("uv",new Ri(v,2))}}class Cl extends Yo{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class Pl extends bl{constructor(e,t={}){const n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new zi;e=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(e,t),this.type="TextGeometry"}}class Il extends zi{constructor(n=1,i=.4,r=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:n,tube:i,radialSegments:r,tubularSegments:a,arc:s},r=Math.floor(r),a=Math.floor(a);const o=[],l=[],c=[],h=[],u=new kt,d=new kt,p=new kt;for(let t=0;t<=r;t++)for(let e=0;e<=a;e++){var m=e/a*s,f=t/r*Math.PI*2;d.x=(n+i*Math.cos(f))*Math.cos(m),d.y=(n+i*Math.cos(f))*Math.sin(m),d.z=i*Math.sin(f),l.push(d.x,d.y,d.z),u.x=n*Math.cos(m),u.y=n*Math.sin(m),p.subVectors(d,u).normalize(),c.push(p.x,p.y,p.z),h.push(e/a),h.push(t/r)}for(let t=1;t<=r;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,y=(a+1)*(t-1)+e,x=(a+1)*t+e;o.push(g,v,x),o.push(v,y,x)}this.setIndex(o),this.setAttribute("position",new Ri(l,3)),this.setAttribute("normal",new Ri(c,3)),this.setAttribute("uv",new Ri(h,2))}}class Dl extends zi{constructor(e=1,n=.4,i=64,r=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:a,q:s},i=Math.floor(i),r=Math.floor(r);const o=[],l=[],c=[],h=[],u=new kt,d=new kt;var p=new kt,m=new kt;const f=new kt,g=new kt,v=new kt;for(let t=0;t<=i;++t){var y=t/i*a*Math.PI*2;T(y,a,s,e,p),T(.01+y,a,s,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let e=0;e<=r;++e){var x=e/r*Math.PI*2,_=-n*Math.cos(x),x=n*Math.sin(x);u.x=p.x+(_*v.x+x*f.x),u.y=p.y+(_*v.y+x*f.y),u.z=p.z+(_*v.z+x*f.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),c.push(d.x,d.y,d.z),h.push(t/i),h.push(e/r)}}for(let t=1;t<=i;t++)for(let e=1;e<=r;e++){var b=(r+1)*(t-1)+(e-1),M=(r+1)*t+(e-1),w=(r+1)*t+e,E=(r+1)*(t-1)+e;o.push(b,M,E),o.push(M,w,E)}function T(e,t,n,i,r){var a=Math.cos(e),s=Math.sin(e),t=n/t*e,e=Math.cos(t);r.x=i*(2+e)*.5*a,r.y=i*(2+e)*s*.5,r.z=i*Math.sin(t)*.5}this.setIndex(o),this.setAttribute("position",new Ri(l,3)),this.setAttribute("normal",new Ri(c,3)),this.setAttribute("uv",new Ri(h,2))}}class Nl extends zi{constructor(a,s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const c=a.computeFrenetFrames(s,e);this.tangents=c.tangents,this.normals=c.normals,this.binormals=c.binormals;const h=new kt,u=new kt,n=new Pt;let d=new kt;const p=[],m=[],i=[],f=[];function t(e){d=a.getPointAt(e/s,d);var t=c.normals[e],n=c.binormals[e];for(let e=0;e<=l;e++){var i=e/l*Math.PI*2,r=Math.sin(i),i=-Math.cos(i);u.x=i*t.x+r*n.x,u.y=i*t.y+r*n.y,u.z=i*t.z+r*n.z,u.normalize(),m.push(u.x,u.y,u.z),h.x=d.x+o*u.x,h.y=d.y+o*u.y,h.z=d.z+o*u.z,p.push(h.x,h.y,h.z)}}!function(){for(let e=0;e<s;e++)t(e);t(!1===e?s:0),function(){for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)n.x=t/s,n.y=e/l,i.push(n.x,n.y)}(),function(){for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var n=(l+1)*(t-1)+(e-1),i=(l+1)*t+(e-1),r=(l+1)*t+e,a=(l+1)*(t-1)+e;f.push(n,i,a),f.push(i,r,a)}}()}(),this.setIndex(f),this.setAttribute("position",new Ri(p,3)),this.setAttribute("normal",new Ri(m,3)),this.setAttribute("uv",new Ri(i,2))}toJSON(){const e=zi.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class Ol extends zi{constructor(e){if(super(),this.type="WireframeGeometry",!0!==e.isGeometry){const c=[],h=[0,0],u={},d=new kt;if(null!==e.index){var t=e.attributes.position;const p=e.index;let n=e.groups;0===n.length&&(n=[{start:0,count:p.count,materialIndex:0}]);for(let e=0,t=n.length;e<t;++e){var i=n[e],r=i.start;for(let t=r,e=r+i.count;t<e;t+=3)for(let e=0;e<3;e++){var a=p.getX(t+e),s=p.getX(t+(e+1)%3);h[0]=Math.min(a,s),h[1]=Math.max(a,s);s=h[0]+","+h[1];void 0===u[s]&&(u[s]={index1:h[0],index2:h[1]})}}for(const m in u){var o=u[m];d.fromBufferAttribute(t,o.index1),c.push(d.x,d.y,d.z),d.fromBufferAttribute(t,o.index2),c.push(d.x,d.y,d.z)}}else{var n=e.attributes.position;for(let t=0,e=n.count/3;t<e;t++)for(let e=0;e<3;e++){var l=3*t+e;d.fromBufferAttribute(n,l),c.push(d.x,d.y,d.z);l=3*t+(e+1)%3;d.fromBufferAttribute(n,l),c.push(d.x,d.y,d.z)}}this.setAttribute("position",new Ri(c,3))}else console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}var Fl=Object.freeze({__proto__:null,BoxGeometry:sr,BoxBufferGeometry:sr,CircleGeometry:jo,CircleBufferGeometry:jo,ConeGeometry:qo,ConeBufferGeometry:qo,CylinderGeometry:Xo,CylinderBufferGeometry:Xo,DodecahedronGeometry:Zo,DodecahedronBufferGeometry:Zo,EdgesGeometry:el,ExtrudeGeometry:bl,ExtrudeBufferGeometry:bl,IcosahedronGeometry:wl,IcosahedronBufferGeometry:wl,LatheGeometry:El,LatheBufferGeometry:El,OctahedronGeometry:Tl,OctahedronBufferGeometry:Tl,ParametricGeometry:Sl,ParametricBufferGeometry:Sl,PlaneGeometry:Er,PlaneBufferGeometry:Er,PolyhedronGeometry:Yo,PolyhedronBufferGeometry:Yo,RingGeometry:Al,RingBufferGeometry:Al,ShapeGeometry:Rl,ShapeBufferGeometry:Rl,SphereGeometry:Ll,SphereBufferGeometry:Ll,TetrahedronGeometry:Cl,TetrahedronBufferGeometry:Cl,TextGeometry:Pl,TextBufferGeometry:Pl,TorusGeometry:Il,TorusBufferGeometry:Il,TorusKnotGeometry:Dl,TorusKnotBufferGeometry:Dl,TubeGeometry:Nl,TubeBufferGeometry:Nl,WireframeGeometry:Ol});class Bl extends li{constructor(e){super(),this.type="ShadowMaterial",this.color=new fi(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}class Ul extends dr{constructor(e){super(e),this.type="RawShaderMaterial"}}function Hl(e){li.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new fi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wt,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}function zl(e){Hl.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Pt(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Ct.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}Ul.prototype.isRawShaderMaterial=Bl.prototype.isShadowMaterial=!0,((Hl.prototype=Object.create(li.prototype)).constructor=Hl).prototype.isMeshStandardMaterial=!0,Hl.prototype.copy=function(e){return li.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this},((zl.prototype=Object.create(Hl.prototype)).constructor=zl).prototype.isMeshPhysicalMaterial=!0,zl.prototype.copy=function(e){return Hl.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new fi).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this};class Gl extends li{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new fi(16777215),this.specular=new fi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wt,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class kl extends li{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new fi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wt,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}class Vl extends li{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wt,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class Wl extends li{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new fi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}class jl extends li{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new fi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wt,this.normalScale=new Pt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}class Xl extends wo{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Xl.prototype.isLineDashedMaterial=jl.prototype.isMeshMatcapMaterial=Wl.prototype.isMeshLambertMaterial=Vl.prototype.isMeshNormalMaterial=kl.prototype.isMeshToonMaterial=Gl.prototype.isMeshPhongMaterial=!0;var ql=Object.freeze({__proto__:null,ShadowMaterial:Bl,SpriteMaterial:ks,RawShaderMaterial:Ul,ShaderMaterial:dr,PointsMaterial:No,MeshPhysicalMaterial:zl,MeshStandardMaterial:Hl,MeshPhongMaterial:Gl,MeshToonMaterial:kl,MeshNormalMaterial:Vl,MeshLambertMaterial:Wl,MeshDepthMaterial:bs,MeshDistanceMaterial:Ms,MeshBasicMaterial:gi,MeshMatcapMaterial:jl,LineDashedMaterial:Xl,LineBasicMaterial:wo,Material:li});const Yl={arraySlice:function(e,t,n){return Yl.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(n){var t=n.length;const i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort(function(e,t){return n[e]-n[t]}),i},sortedArray:function(n,i,r){var a=n.length;const s=new n.constructor(a);for(let e=0,t=0;t!==a;++e){var o=r[e]*i;for(let e=0;e!==i;++e)s[t++]=n[o+e]}return s},flattenJSON:function(t,n,i,r){let a=1,s=t[0];for(;void 0!==s&&void 0===s[r];)s=t[a++];if(void 0!==s){let e=s[r];if(void 0!==e)if(Array.isArray(e))for(;e=s[r],void 0!==e&&(n.push(s.time),i.push.apply(i,e)),s=t[a++],void 0!==s;);else if(void 0!==e.toArray)for(;e=s[r],void 0!==e&&(n.push(s.time),e.toArray(i,i.length)),s=t[a++],void 0!==s;);else for(;e=s[r],void 0!==e&&(n.push(s.time),i.push(e)),s=t[a++],void 0!==s;);}},subclip:function(e,t,n,i,r=30){const a=e.clone();a.name=t;const s=[];for(let e=0;e<a.tracks.length;++e){const h=a.tracks[e];var o=h.getValueSize();const u=[],d=[];for(let t=0;t<h.times.length;++t){var l=h.times[t]*r;if(!(l<n||i<=l)){u.push(h.times[t]);for(let e=0;e<o;++e)d.push(h.values[t*o+e])}}0!==u.length&&(h.times=Yl.convertArray(u,h.times.constructor),h.values=Yl.convertArray(d,h.values.constructor),s.push(h))}a.tracks=s;let c=1/0;for(let e=0;e<a.tracks.length;++e)c>a.tracks[e].times[0]&&(c=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*c);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,i=30){var r=n.tracks.length,a=e/(i=i<=0?30:i);for(let e=0;e<r;++e){const f=n.tracks[e],g=f.ValueTypeName;if("bool"!==g&&"string"!==g){const v=t.tracks.find(function(e){return e.name===f.name&&e.ValueTypeName===g});if(void 0!==v){let e=0;var s=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=s/3);let t=0;var o=v.getValueSize();v.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=o/3);var l=f.times.length-1;let n;if(a<=f.times[0]){var c=e,h=s-e;n=Yl.arraySlice(f.values,c,h)}else if(a>=f.times[l]){var l=l*s+e,u=l+s-e;n=Yl.arraySlice(f.values,l,u)}else{const y=f.createInterpolant();u=e,s=s-e;y.evaluate(a),n=Yl.arraySlice(y.resultBuffer,u,s)}if("quaternion"===g){const x=(new Gt).fromArray(n).normalize().conjugate();x.toArray(n)}var d=v.times.length;for(let e=0;e<d;++e){var p=e*o+t;if("quaternion"===g)Gt.multiplyQuaternionsFlat(v.values,p,n,0,v.values,p);else{var m=o-2*t;for(let e=0;e<m;++e)v.values[p+e]-=n[e]}}}}}return t.blendMode=2501,t}};function Zl(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}function Jl(e,t,n,i){Zl.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function Kl(e,t,n,i){Zl.call(this,e,t,n,i)}function Ql(e,t,n,i){Zl.call(this,e,t,n,i)}Object.assign(Zl.prototype,{evaluate:function(t){var n=this.parameterPositions;let i=this._cachedIndex,r=n[i],a=n[i-1];e:{t:{let e;n:{i:if(!(t<r)){for(var s=i+2;;){if(void 0===r){if(t<a)break i;return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,t,a)}if(i===s)break;if(a=r,r=n[++i],t<r)break t}e=n.length;break n}if(t>=a)break e;var o=n[1];t<o&&(i=2,a=o);for(var l=i-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(i===l)break;if(r=a,a=n[--i-1],t>=a)break t}e=i,i=0}for(;i<e;){var c=i+e>>>1;t<n[c]?e=c:i=1+c}if(r=n[i],a=n[i-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,a,t)}this._cachedIndex=i,this.intervalChanged_(i,a,r)}return this.interpolate_(i,a,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let e=0;e!==i;++e)t[e]=n[r+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Zl.prototype,{beforeStart_:Zl.prototype.copySampleValue_,afterEnd_:Zl.prototype.copySampleValue_}),Jl.prototype=Object.assign(Object.create(Zl.prototype),{constructor:Jl,DefaultSettings_:{endingStart:vt,endingEnd:vt},intervalChanged_:function(e,t,n){var i=this.parameterPositions;let r=e-2,a=e+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case yt:r=e,s=2*t-n;break;case xt:r=i.length-2,s=t+i[r]-i[r+1];break;default:r=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case yt:a=e,o=2*n-t;break;case xt:a=1,o=n+i[1]-i[0];break;default:a=e-1,o=t}var l=.5*(n-t),c=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=a*c},interpolate_:function(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-t)/(i-t),m=p*p,f=m*p;var g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let e=0;e!==s;++e)r[e]=g*a[c+e]+v*a[l+e]+y*a[o+e]+x*a[h+e];return r}}),Kl.prototype=Object.assign(Object.create(Zl.prototype),{constructor:Kl,interpolate_:function(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,c=(n-t)/(i-t),h=1-c;for(let e=0;e!==s;++e)r[e]=a[l+e]*h+a[o+e]*c;return r}}),Ql.prototype=Object.assign(Object.create(Zl.prototype),{constructor:Ql,interpolate_:function(e){return this.copySampleValue_(e-1)}});class $l{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Yl.convertArray(t,this.TimeBufferType),this.values=Yl.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;var i;return t.toJSON!==this.toJSON?n=t.toJSON(e):(n={name:e.name,times:Yl.convertArray(e.times,Array),values:Yl.convertArray(e.values,Array)},(i=e.getInterpolation())!==e.DefaultInterpolation&&(n.interpolation=i)),n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ql(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Kl(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Jl(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case r:t=this.InterpolantFactoryMethodDiscrete;break;case gt:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)return this.createInterpolant=t,this;var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return r;case this.InterpolantFactoryMethodLinear:return gt;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(n){if(0!==n){const i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]+=n}return this}scale(n){if(1!==n){const i=this.times;for(let e=0,t=i.length;e!==t;++e)i[e]*=n}return this}trim(e,t){var n,i=this.times,r=i.length;let a=0,s=r-1;for(;a!==r&&i[a]<e;)++a;for(;-1!==s&&i[s]>t;)--s;return++s,0===a&&s===r||(a>=s&&(s=Math.max(s,1),a=s-1),n=this.getValueSize(),this.times=Yl.arraySlice(i,a,s),this.values=Yl.arraySlice(this.values,a*n,s*n)),this}validate(){let n=!0;var e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);var t=this.times,i=this.values,r=t.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let a=null;for(let e=0;e!==r;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),n=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),n=!1;break}a=s}if(void 0!==i&&Yl.isTypedArray(i))for(let e=0,t=i.length;e!==t;++e){var o=i[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),n=!1;break}}return n}optimize(){const n=Yl.arraySlice(this.times),i=Yl.arraySlice(this.values),r=this.getValueSize(),a=2302===this.getInterpolation(),s=n.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=n[e];if(l!==n[e+1]&&(1!==e||l!==n[0]))if(a)t=!0;else{var c=e*r,h=c-r,u=c+r;for(let e=0;e!==r;++e){var d=i[c+e];if(d!==i[h+e]||d!==i[u+e]){t=!0;break}}}if(t){if(e!==o){n[o]=n[e];var p=e*r,m=o*r;for(let e=0;e!==r;++e)i[m+e]=i[p+e]}++o}}if(0<s){n[o]=n[s];for(let e=s*r,t=o*r,n=0;n!==r;++n)i[t+n]=i[e+n];++o}return o!==n.length?(this.times=Yl.arraySlice(n,0,o),this.values=Yl.arraySlice(i,0,o*r)):(this.times=n,this.values=i),this}clone(){var e=Yl.arraySlice(this.times,0),t=Yl.arraySlice(this.values,0);const n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}$l.prototype.TimeBufferType=Float32Array,$l.prototype.ValueBufferType=Float32Array,$l.prototype.DefaultInterpolation=gt;class ec extends $l{}ec.prototype.ValueTypeName="bool",ec.prototype.ValueBufferType=Array,ec.prototype.DefaultInterpolation=r,ec.prototype.InterpolantFactoryMethodLinear=void 0,ec.prototype.InterpolantFactoryMethodSmooth=void 0;class tc extends $l{}tc.prototype.ValueTypeName="color";class nc extends $l{}function ic(e,t,n,i){Zl.call(this,e,t,n,i)}nc.prototype.ValueTypeName="number",ic.prototype=Object.assign(Object.create(Zl.prototype),{constructor:ic,interpolate_:function(e,t,n,i){var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(i-t);let l=e*s;for(var c=l+s;l!==c;l+=4)Gt.slerpFlat(r,0,a,l-s,a,l,o);return r}});class rc extends $l{InterpolantFactoryMethodLinear(e){return new ic(this.times,this.values,this.getValueSize(),e)}}rc.prototype.ValueTypeName="quaternion",rc.prototype.DefaultInterpolation=gt,rc.prototype.InterpolantFactoryMethodSmooth=void 0;class ac extends $l{}ac.prototype.ValueTypeName="string",ac.prototype.ValueBufferType=Array,ac.prototype.DefaultInterpolation=r,ac.prototype.InterpolantFactoryMethodLinear=void 0,ac.prototype.InterpolantFactoryMethodSmooth=void 0;class sc extends $l{}class oc{constructor(e,t=-1,n,i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Ct.generateUUID(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],i=e.tracks,r=1/(e.fps||1);for(let e=0,t=i.length;e!==t;++e)n.push(function(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return nc;case"vector":case"vector2":case"vector3":case"vector4":return sc;case"color":return tc;case"quaternion":return rc;case"bool":case"boolean":return ec;case"string":return ac}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);{var n,i;void 0===e.times&&(n=[],i=[],Yl.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i)}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}(i[e]).scale(r));const t=new this(e.name,e.duration,n,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){const n=[],i=e.tracks;e={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=i.length;e!==t;++e)n.push($l.toJSON(i[e]));return e}static CreateFromMorphTargetSequence(e,i,r,a){var s=i.length;const o=[];for(let n=0;n<s;n++){let e=[],t=[];e.push((n+s-1)%s,n,(n+1)%s),t.push(0,1,0);var l=Yl.getKeyframeOrder(e);e=Yl.sortedArray(e,1,l),t=Yl.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new nc(".morphTargetInfluences["+i[n].name+"]",e,t).scale(1/r))}return new this(e,-1,o)}static findByName(e,t){let n=e;Array.isArray(e)||(n=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(n,e,t){const i={};var r=/^([\w-]*?)([\d]+)$/;for(let e=0,t=n.length;e<t;e++){const o=n[e];var a=o.name.match(r);if(a&&1<a.length){a=a[1];let e=i[a];e||(i[a]=e=[]),e.push(o)}}const s=[];for(const l in i)s.push(this.CreateFromMorphTargetSequence(l,i[l],e,t));return s}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function n(e,t,n,i,r){var a,s;0!==n.length&&(a=[],s=[],Yl.flattenJSON(n,a,s,i),0!==a.length&&r.push(new e(t,a,s)))}const i=[];var r=e.name||"default",a=e.fps||30,s=e.blendMode;let o=e.length||-1;var l=e.hierarchy||[];for(let e=0;e<l.length;e++){var c=l[e].keys;if(c&&0!==c.length)if(c[0].morphTargets){const d={};let t;for(t=0;t<c.length;t++)if(c[t].morphTargets)for(let e=0;e<c[t].morphTargets.length;e++)d[c[t].morphTargets[e]]=-1;for(const p in d){const m=[],f=[];for(let e=0;e!==c[t].morphTargets.length;++e){var h=c[t];m.push(h.time),f.push(h.morphTarget===p?1:0)}i.push(new nc(".morphTargetInfluence["+p+"]",m,f))}o=d.length*(a||1)}else{var u=".bones["+t[e].name+"]";n(sc,u+".position",c,"pos",i),n(rc,u+".quaternion",c,"rot",i),n(sc,u+".scale",c,"scl",i)}}return 0===i.length?null:new this(r,o,i,s)}resetDuration(){let n=0;for(let e=0,t=this.tracks.length;e!==t;++e){var i=this.tracks[e];n=Math.max(n,i.times[i.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const lc={enabled:!(sc.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function cc(e,t,n){const i=this;let r=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===r&&void 0!==i.onStart&&i.onStart(e,a,s),r=!0},this.itemEnd=function(e){a++,void 0!==i.onProgress&&i.onProgress(e,a,s),a===s&&(r=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(e){void 0!==i.onError&&i.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(n){for(let e=0,t=l.length;e<t;e+=2){const r=l[e];var i=l[e+1];if(r.global&&(r.lastIndex=0),r.test(n))return i}return null}}const hc=new cc;function uc(e){this.manager=void 0!==e?e:hc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(uc.prototype,{load:function(){},loadAsync:function(n,i){const r=this;return new Promise(function(e,t){r.load(n,e,i,t)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const dc={};function pc(e){uc.call(this,e)}pc.prototype=Object.assign(Object.create(uc.prototype),{constructor:pc,load:function(o,n,t,i){void 0===o&&(o=""),void 0!==this.path&&(o=this.path+o),o=this.manager.resolveURL(o);const l=this,e=lc.get(o);if(void 0!==e)return l.manager.itemStart(o),setTimeout(function(){n&&n(e),l.manager.itemEnd(o)},0),e;if(void 0===dc[o]){var r=o.match(/^data:(.*?)(;base64)?,(.*)$/);let e;if(r){var a=r[1],s=!!r[2];let t=r[3];t=decodeURIComponent(t),s&&(t=atob(t));try{let e;var c=(this.responseType||"").toLowerCase();switch(c){case"arraybuffer":case"blob":const h=new Uint8Array(t.length);for(let e=0;e<t.length;e++)h[e]=t.charCodeAt(e);e="blob"===c?new Blob([h.buffer],{type:a}):h.buffer;break;case"document":const u=new DOMParser;e=u.parseFromString(t,a);break;case"json":e=JSON.parse(t);break;default:e=t}setTimeout(function(){n&&n(e),l.manager.itemEnd(o)},0)}catch(e){setTimeout(function(){i&&i(e),l.manager.itemError(o),l.manager.itemEnd(o)},0)}}else{dc[o]=[],dc[o].push({onLoad:n,onProgress:t,onError:i}),e=new XMLHttpRequest,e.open("GET",o,!0),e.addEventListener("load",function(n){var i=this.response,r=dc[o];if(delete dc[o],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),lc.add(o,i);for(let e=0,t=r.length;e<t;e++){const a=r[e];a.onLoad&&a.onLoad(i)}l.manager.itemEnd(o)}else{for(let e=0,t=r.length;e<t;e++){const s=r[e];s.onError&&s.onError(n)}l.manager.itemError(o),l.manager.itemEnd(o)}},!1),e.addEventListener("progress",function(n){var i=dc[o];for(let e=0,t=i.length;e<t;e++){const r=i[e];r.onProgress&&r.onProgress(n)}},!1),e.addEventListener("error",function(n){var i=dc[o];delete dc[o];for(let e=0,t=i.length;e<t;e++){const r=i[e];r.onError&&r.onError(n)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),e.addEventListener("abort",function(n){var i=dc[o];delete dc[o];for(let e=0,t=i.length;e<t;e++){const r=i[e];r.onError&&r.onError(n)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const d in this.requestHeader)e.setRequestHeader(d,this.requestHeader[d]);e.send(null)}return l.manager.itemStart(o),e}dc[o].push({onLoad:n,onProgress:t,onError:i})},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}});function mc(e){uc.call(this,e)}mc.prototype=Object.assign(Object.create(uc.prototype),{constructor:mc,load:function(n,r,i,a){const s=this,o=[],l=new ko,c=new pc(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(s.withCredentials);let h=0;if(Array.isArray(n))for(let e=0,t=n.length;e<t;++e)!function(t){c.load(n[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},h+=1,6===h&&(1===e.mipmapCount&&(l.minFilter=Ae),l.image=o,l.format=e.format,l.needsUpdate=!0,r&&r(l))},i,a)}(e);else c.load(n,function(e){var n=s.parse(e,!0);if(n.isCubemap){var i=n.mipmaps.length/n.mipmapCount;for(let t=0;t<i;t++){o[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)o[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),o[t].format=n.format,o[t].width=n.width,o[t].height=n.height}l.image=o}else l.image.width=n.width,l.image.height=n.height,l.mipmaps=n.mipmaps;1===n.mipmapCount&&(l.minFilter=Ae),l.format=n.format,l.needsUpdate=!0,r&&r(l)},i,a);return l}});class fc extends uc{constructor(e){super(e)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=lc.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),lc.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}}class gc extends uc{constructor(e){super(e)}load(n,i,e,r){const a=new gr,s=new fc(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<n.length;++e)!function(t){s.load(n[t],function(e){a.images[t]=e,o++,6===o&&(a.needsUpdate=!0,i&&i(a))},void 0,r)}(e);return a}}function vc(e){uc.call(this,e)}function yc(e){uc.call(this,e)}function xc(){this.type="Curve",this.arcLengthDivisions=200}vc.prototype=Object.assign(Object.create(uc.prototype),{constructor:vc,load:function(e,t,n,i){const r=this,a=new yr,s=new pc(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(r.withCredentials),s.load(e,function(e){e=r.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:z,a.wrapT=void 0!==e.wrapT?e.wrapT:z,a.magFilter=void 0!==e.magFilter?e.magFilter:Ae,a.minFilter=void 0!==e.minFilter?e.minFilter:Ae,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=Le),1===e.mipmapCount&&(a.minFilter=Ae),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t&&t(a,e))},n,i),a}}),yc.prototype=Object.assign(Object.create(uc.prototype),{constructor:yc,load:function(t,n,e,i){const r=new Ft,a=new fc(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(e){r.image=e;e=0<t.search(/\.jpe?g($|\?)/i)||0===t.search(/^data\:image\/jpeg/);r.format=e?Fe:Be,r.needsUpdate=!0,void 0!==n&&n(r)},e,i),r}}),Object.assign(xc.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)},getPoints:function(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return n},getSpacedPoints:function(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPointAt(e/t));return n},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,r=this.getPoint(0),a=0;n.push(0);for(let e=1;e<=t;e++)i=this.getPoint(e/t),a+=i.distanceTo(r),n.push(a),r=i;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n=this.getLengths();let i=0;var r=n.length;let a;a=t||e*n[r-1];let s=0,o=r-1,l;for(;s<=o;)if(i=Math.floor(s+(o-s)/2),(l=n[i]-a)<0)s=i+1;else{if(!(0<l)){o=i;break}o=i-1}if(i=o,n[i]===a)return i/(r-1);t=n[i],e=n[i+1],t=(a-t)/(e-t);return(i+t)/(r-1)},getTangent:function(e,t){let n=e-1e-4,i=e+1e-4;n<0&&(n=0),1<i&&(i=1);var r=this.getPoint(n),e=this.getPoint(i);const a=t||new(r.isVector2?Pt:kt);return a.copy(e).sub(r).normalize(),a},getTangentAt:function(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)},computeFrenetFrames:function(n,e){const t=new kt,i=[],r=[],a=[],s=new kt,o=new _n;for(let e=0;e<=n;e++){var l=e/n;i[e]=this.getTangentAt(l,new kt),i[e].normalize()}r[0]=new kt,a[0]=new kt;let c=Number.MAX_VALUE;var h,u=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);u<=c&&(c=u,t.set(1,0,0)),d<=c&&(c=d,t.set(0,1,0)),p<=c&&t.set(0,0,1),s.crossVectors(i[0],t).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let e=1;e<=n;e++)r[e]=r[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(i[e-1],i[e]),s.length()>Number.EPSILON&&(s.normalize(),h=Math.acos(Ct.clamp(i[e-1].dot(i[e]),-1,1)),r[e].applyMatrix4(o.makeRotationAxis(s,h))),a[e].crossVectors(i[e],r[e]);if(!0===e){let t=Math.acos(Ct.clamp(r[0].dot(r[n]),-1,1));t/=n,0<i[0].dot(s.crossVectors(r[0],r[n]))&&(t=-t);for(let e=1;e<=n;e++)r[e].applyMatrix4(o.makeRotationAxis(i[e],t*e)),a[e].crossVectors(i[e],r[e])}return{tangents:i,normals:r,binormals:a}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});class _c extends xc{constructor(e=0,t=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const n=t||new Pt;var i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;for(var a=Math.abs(r)<Number.EPSILON;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);var s=this.aStartAngle+e*r;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);return 0!==this.aRotation&&(t=Math.cos(this.aRotation),a=Math.sin(this.aRotation),e=o-this.aX,s=l-this.aY,o=e*t-s*a+this.aX,l=e*a+s*t+this.aY),n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}_c.prototype.isEllipseCurve=!0;class bc extends _c{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.type="ArcCurve"}}function Mc(){let r=0,a=0,s=0,o=0;function l(e,t,n,i){r=e,a=n,s=-3*e+3*t-2*n-i,o=2*e-2*t+n+i}return{initCatmullRom:function(e,t,n,i,r){l(t,n,r*(n-e),r*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,r,a,s){r=(t-e)/r-(n-e)/(r+a)+(n-t)/a,s=(n-t)/a-(i-t)/(a+s)+(i-n)/s;l(t,n,r*=a,s*=a)},calc:function(e){var t=e*e,n=t*e;return r+a*e+s*t+o*n}}}bc.prototype.isArcCurve=!0;const wc=new kt,Ec=new Mc,Tc=new Mc,Sc=new Mc;class Ac extends xc{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,i=new kt){const t=i;var n=this.points,i=n.length,e=(i-(this.closed?0:1))*e;let r=Math.floor(e),a=e-r;this.closed?r+=0<r?0:(Math.floor(Math.abs(r)/i)+1)*i:0===a&&r===i-1&&(r=i-2,a=1);let s,o;s=this.closed||0<r?n[(r-1)%i]:(wc.subVectors(n[0],n[1]).add(n[0]),wc);const l=n[r%i],c=n[(r+1)%i];if(o=this.closed||r+2<i?n[(r+2)%i]:(wc.subVectors(n[i-1],n[i-2]).add(n[i-1]),wc),"centripetal"===this.curveType||"chordal"===this.curveType){i="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),i),t=Math.pow(l.distanceToSquared(c),i),n=Math.pow(c.distanceToSquared(o),i);t<1e-4&&(t=1),e<1e-4&&(e=t),n<1e-4&&(n=t),Ec.initNonuniformCatmullRom(s.x,l.x,c.x,o.x,e,t,n),Tc.initNonuniformCatmullRom(s.y,l.y,c.y,o.y,e,t,n),Sc.initNonuniformCatmullRom(s.z,l.z,c.z,o.z,e,t,n)}else"catmullrom"===this.curveType&&(Ec.initCatmullRom(s.x,l.x,c.x,o.x,this.tension),Tc.initCatmullRom(s.y,l.y,c.y,o.y,this.tension),Sc.initCatmullRom(s.z,l.z,c.z,o.z,this.tension));return t.set(Ec.calc(a),Tc.calc(a),Sc.calc(a)),t}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var i=n.points[e];this.points.push((new kt).fromArray(i))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function Rc(e,t,n,i,r){var a=.5*(i-t),t=.5*(r-n),r=e*e;return(2*n-2*i+a+t)*(e*r)+(-3*n+3*i-2*a-t)*r+a*e+n}function Lc(e,t,n,i){return(r=1-(r=e))*r*t+2*(1-e)*e*n+e*e*i;var r}function Cc(e,t,n,i,r){return(a=1-(a=e))*a*a*t+3*(t=1-e)*t*e*n+3*(1-e)*e*e*i+e*e*e*r;var a}class Pc extends xc{constructor(e=new Pt,t=new Pt,n=new Pt,i=new Pt){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new Pt){const n=t;var i=this.v0,r=this.v1,a=this.v2,t=this.v3;return n.set(Cc(e,i.x,r.x,a.x,t.x),Cc(e,i.y,r.y,a.y,t.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Pc.prototype.isCubicBezierCurve=Ac.prototype.isCatmullRomCurve3=!0;class Ic extends xc{constructor(e=new kt,t=new kt,n=new kt,i=new kt){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new kt){const n=t;var i=this.v0,r=this.v1,a=this.v2,t=this.v3;return n.set(Cc(e,i.x,r.x,a.x,t.x),Cc(e,i.y,r.y,a.y,t.y),Cc(e,i.z,r.z,a.z,t.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Dc extends xc{constructor(e=new Pt,t=new Pt){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Pt){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Pt;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Dc.prototype.isLineCurve=Ic.prototype.isCubicBezierCurve3=!0;class Nc extends xc{constructor(e=new kt,t=new kt){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new kt){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Oc extends xc{constructor(e=new Pt,t=new Pt,n=new Pt){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Pt){const n=t;var i=this.v0,r=this.v1,t=this.v2;return n.set(Lc(e,i.x,r.x,t.x),Lc(e,i.y,r.y,t.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Oc.prototype.isQuadraticBezierCurve=!0;class Fc extends xc{constructor(e=new kt,t=new kt,n=new kt){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new kt){const n=t;var i=this.v0,r=this.v1,t=this.v2;return n.set(Lc(e,i.x,r.x,t.x),Lc(e,i.y,r.y,t.y),Lc(e,i.z,r.z,t.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Bc extends xc{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Pt){const n=t;var i=this.points,r=(i.length-1)*e,a=Math.floor(r),s=r-a,t=i[0===a?a:a-1],e=i[a],r=i[a>i.length-2?i.length-1:a+1],a=i[a>i.length-3?i.length-1:a+2];return n.set(Rc(s,t.x,e.x,r.x,a.x),Rc(s,t.y,e.y,r.y,a.y)),n}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const i=n.points[e];this.points.push(i.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const i=this.points[e];n.points.push(i.toArray())}return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var i=n.points[e];this.points.push((new Pt).fromArray(i))}return this}}Bc.prototype.isSplineCurve=Fc.prototype.isQuadraticBezierCurve3=!0;var Uc=Object.freeze({__proto__:null,ArcCurve:bc,CatmullRomCurve3:Ac,CubicBezierCurve:Pc,CubicBezierCurve3:Ic,EllipseCurve:_c,LineCurve:Dc,LineCurve3:Nc,QuadraticBezierCurve:Oc,QuadraticBezierCurve3:Fc,SplineCurve:Bc});class Hc extends xc{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Dc(t,e))}getPoint(e){var t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){var r=n[i]-t;const s=this.curves[i];var a=s.getLength();return s.getPointAt(0===a?0:1-r/a)}i++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let i=0;for(let e=0,t=this.curves.length;e<t;e++)i+=this.curves[e].getLength(),n.push(i);return this.cacheLengths=n,n}getSpacedPoints(t=40){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return this.autoClose&&n.push(n[0]),n}getPoints(n=12){const i=[];let r;for(let e=0,t=this.curves;e<t.length;e++){const l=t[e];var a=l&&l.isEllipseCurve?2*n:l&&(l.isLineCurve||l.isLineCurve3)?1:l&&l.isSplineCurve?n*l.points.length:n,s=l.getPoints(a);for(let e=0;e<s.length;e++){var o=s[e];r&&r.equals(o)||(i.push(o),r=o)}}return this.autoClose&&1<i.length&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(n){super.copy(n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const i=n.curves[e];this.curves.push(i.clone())}return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const i=this.curves[e];n.curves.push(i.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){var i=n.curves[e];this.curves.push((new Uc[i.type]).fromJSON(i))}return this}}class zc extends Hc{constructor(e){super(),this.type="Path",this.currentPoint=new Pt,e&&this.setFromPoints(e)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var n=new Dc(this.currentPoint.clone(),new Pt(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){t=new Oc(this.currentPoint.clone(),new Pt(e,t),new Pt(n,i));return this.curves.push(t),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){i=new Pc(this.currentPoint.clone(),new Pt(e,t),new Pt(n,i),new Pt(r,a));return this.curves.push(i),this.currentPoint.set(r,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new Bc(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,s,o){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,n,i,r,a,s,o),this}absellipse(e,t,n,i,r,a,s,o){const l=new _c(e,t,n,i,r,a,s,o);if(0<this.curves.length){const c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);o=l.getPoint(1);return this.currentPoint.copy(o),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Gc extends zc{constructor(e){super(e),this.uuid=Ct.generateUUID(),this.type="Shape",this.holes=[]}getPointsHoles(n){const i=[];for(let e=0,t=this.holes.length;e<t;e++)i[e]=this.holes[e].getPoints(n);return i}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(n){super.copy(n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const i=n.holes[e];this.holes.push(i.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const i=this.holes[e];n.holes.push(i.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){var i=n.holes[e];this.holes.push((new zc).fromJSON(i))}return this}}class kc extends jn{constructor(e,t=1){super(),this.type="Light",this.color=new fi(e),this.intensity=t}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}kc.prototype.isLight=!0;class Vc extends kc{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(jn.DefaultUp),this.updateMatrix(),this.groundColor=new fi(t)}copy(e){return kc.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}Vc.prototype.isHemisphereLight=!0;const Wc=new _n,jc=new kt,Xc=new kt;class qc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Pt(512,512),this.map=null,this.mapPass=null,this.matrix=new _n,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new br,this._frameExtents=new Pt(1,1),this._viewportCount=1,this._viewports=[new Ut(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;jc.setFromMatrixPosition(e.matrixWorld),t.position.copy(jc),Xc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Xc),t.updateMatrixWorld(),Wc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Yc extends qc{constructor(){super(new mr(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera;var n=2*Ct.RAD2DEG*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;n===t.fov&&i===t.aspect&&r===t.far||(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Yc.prototype.isSpotLightShadow=!0;class Zc extends kc{constructor(e,t,n=0,i=Math.PI/3,r=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(jn.DefaultUp),this.updateMatrix(),this.target=new jn,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.shadow=new Yc}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Zc.prototype.isSpotLight=!0;const Jc=new _n,Kc=new kt,Qc=new kt;class $c extends qc{constructor(){super(new mr(90,1,.5,500)),this._frameExtents=new Pt(4,2),this._viewportCount=6,this._viewports=[new Ut(2,1,1,1),new Ut(0,1,1,1),new Ut(3,1,1,1),new Ut(1,1,1,1),new Ut(3,0,1,1),new Ut(1,0,1,1)],this._cubeDirections=[new kt(1,0,0),new kt(-1,0,0),new kt(0,0,1),new kt(0,0,-1),new kt(0,1,0),new kt(0,-1,0)],this._cubeUps=[new kt(0,1,0),new kt(0,1,0),new kt(0,1,0),new kt(0,1,0),new kt(0,0,1),new kt(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix;var r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Kc.setFromMatrixPosition(e.matrixWorld),n.position.copy(Kc),Qc.copy(n.position),Qc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Qc),n.updateMatrixWorld(),i.makeTranslation(-Kc.x,-Kc.y,-Kc.z),Jc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Jc)}}$c.prototype.isPointLightShadow=!0;class eh extends kc{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new $c}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}eh.prototype.isPointLight=!0;class th extends pr{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,s=i+t,o=i-t;null!==this.view&&this.view.enabled&&(i=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom,r+=i*this.view.offsetX,a=r+i*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height),this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=jn.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}th.prototype.isOrthographicCamera=!0;class nh extends qc{constructor(){super(new th(-5,5,5,-5,.5,500))}}nh.prototype.isDirectionalLightShadow=!0;class ih extends kc{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(jn.DefaultUp),this.updateMatrix(),this.target=new jn,this.shadow=new nh}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}ih.prototype.isDirectionalLight=!0;class rh extends kc{constructor(e,t){super(e,t),this.type="AmbientLight"}}rh.prototype.isAmbientLight=!0;class ah extends kc{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}ah.prototype.isRectAreaLight=!0;class sh{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new kt)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var n=e.x,i=e.y,r=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.282095),t.addScaledVector(e[1],.488603*i),t.addScaledVector(e[2],.488603*r),t.addScaledVector(e[3],.488603*n),t.addScaledVector(e[4],n*i*1.092548),t.addScaledVector(e[5],i*r*1.092548),t.addScaledVector(e[6],.315392*(3*r*r-1)),t.addScaledVector(e[7],n*r*1.092548),t.addScaledVector(e[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){var n=e.x,i=e.y,r=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.886227),t.addScaledVector(e[1],1.023328*i),t.addScaledVector(e[2],1.023328*r),t.addScaledVector(e[3],1.023328*n),t.addScaledVector(e[4],.858086*n*i),t.addScaledVector(e[5],.858086*i*r),t.addScaledVector(e[6],.743125*r*r-.247708),t.addScaledVector(e[7],.858086*n*r),t.addScaledVector(e[8],.429043*(n*n-i*i)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,n){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],n);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,n){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],n);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,n=0){const i=this.coefficients;for(let e=0;e<9;e++)i[e].fromArray(t,n+3*e);return this}toArray(t=[],n=0){const i=this.coefficients;for(let e=0;e<9;e++)i[e].toArray(t,n+3*e);return t}static getBasisAt(e,t){var n=e.x,i=e.y,e=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*e,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*n*e,t[8]=.546274*(n*n-i*i)}}sh.prototype.isSphericalHarmonics3=!0;class oh extends kc{constructor(e=new sh,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}oh.prototype.isLightProbe=!0;class lh extends uc{constructor(e){super(e),this.textures={}}load(t,n,e,i){const r=this,a=new pc(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,function(e){try{n(r.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},e,i)}parse(t){const n=this.textures;function e(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}const i=new ql[t.type];if(void 0!==t.uuid&&(i.uuid=t.uuid),void 0!==t.name&&(i.name=t.name),void 0!==t.color&&void 0!==i.color&&i.color.setHex(t.color),void 0!==t.roughness&&(i.roughness=t.roughness),void 0!==t.metalness&&(i.metalness=t.metalness),void 0!==t.sheen&&(i.sheen=(new fi).setHex(t.sheen)),void 0!==t.emissive&&void 0!==i.emissive&&i.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==i.specular&&i.specular.setHex(t.specular),void 0!==t.shininess&&(i.shininess=t.shininess),void 0!==t.clearcoat&&(i.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(i.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(i.fog=t.fog),void 0!==t.flatShading&&(i.flatShading=t.flatShading),void 0!==t.blending&&(i.blending=t.blending),void 0!==t.combine&&(i.combine=t.combine),void 0!==t.side&&(i.side=t.side),void 0!==t.shadowSide&&(i.shadowSide=t.shadowSide),void 0!==t.opacity&&(i.opacity=t.opacity),void 0!==t.transparent&&(i.transparent=t.transparent),void 0!==t.alphaTest&&(i.alphaTest=t.alphaTest),void 0!==t.depthTest&&(i.depthTest=t.depthTest),void 0!==t.depthWrite&&(i.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(i.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(i.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(i.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(i.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(i.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(i.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(i.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(i.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(i.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(i.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(i.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(i.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(i.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(i.rotation=t.rotation),1!==t.linewidth&&(i.linewidth=t.linewidth),void 0!==t.dashSize&&(i.dashSize=t.dashSize),void 0!==t.gapSize&&(i.gapSize=t.gapSize),void 0!==t.scale&&(i.scale=t.scale),void 0!==t.polygonOffset&&(i.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(i.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(i.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(i.skinning=t.skinning),void 0!==t.morphTargets&&(i.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(i.morphNormals=t.morphNormals),void 0!==t.dithering&&(i.dithering=t.dithering),void 0!==t.alphaToCoverage&&(i.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(i.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(i.vertexTangents=t.vertexTangents),void 0!==t.visible&&(i.visible=t.visible),void 0!==t.toneMapped&&(i.toneMapped=t.toneMapped),void 0!==t.userData&&(i.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?i.vertexColors=0<t.vertexColors:i.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var r=t.uniforms[a];switch(i.uniforms[a]={},r.type){case"t":i.uniforms[a].value=e(r.value);break;case"c":i.uniforms[a].value=(new fi).setHex(r.value);break;case"v2":i.uniforms[a].value=(new Pt).fromArray(r.value);break;case"v3":i.uniforms[a].value=(new kt).fromArray(r.value);break;case"v4":i.uniforms[a].value=(new Ut).fromArray(r.value);break;case"m3":i.uniforms[a].value=(new It).fromArray(r.value);break;case"m4":i.uniforms[a].value=(new _n).fromArray(r.value);break;default:i.uniforms[a].value=r.value}}if(void 0!==t.defines&&(i.defines=t.defines),void 0!==t.vertexShader&&(i.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(i.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(i.flatShading=1===t.shading),void 0!==t.size&&(i.size=t.size),void 0!==t.sizeAttenuation&&(i.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(i.map=e(t.map)),void 0!==t.matcap&&(i.matcap=e(t.matcap)),void 0!==t.alphaMap&&(i.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(i.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(i.bumpScale=t.bumpScale),void 0!==t.normalMap&&(i.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(i.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),i.normalScale=(new Pt).fromArray(e)}return void 0!==t.displacementMap&&(i.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(i.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(i.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(i.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(i.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(i.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(i.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(i.specularMap=e(t.specularMap)),void 0!==t.envMap&&(i.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(i.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(i.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(i.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(i.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(i.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(i.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(i.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(i.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(i.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(i.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(i.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(i.clearcoatNormalScale=(new Pt).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(i.transmission=t.transmission),void 0!==t.transmissionMap&&(i.transmissionMap=e(t.transmissionMap)),i}setTextures(e){return this.textures=e,this}}const ch={decodeText:function(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let i="";for(let e=0,t=n.length;e<t;e++)i+=String.fromCharCode(n[e]);try{return decodeURIComponent(escape(i))}catch(e){return i}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function hh(){zi.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function uh(e,t,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),xi.call(this,e,t,n),this.meshPerAttribute=i||1}hh.prototype=Object.assign(Object.create(zi.prototype),{constructor:hh,isInstancedBufferGeometry:!0,copy:function(e){return zi.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=zi.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),uh.prototype=Object.assign(Object.create(xi.prototype),{constructor:uh,isInstancedBufferAttribute:!0,copy:function(e){return xi.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=xi.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});class dh extends uc{constructor(e){super(e)}load(t,n,e,i){const r=this,a=new pc(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,function(e){try{n(r.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},e,i)}parse(n){const r={},a={};function i(e,t){if(void 0!==r[t])return r[t];var n=e.interleavedBuffers[t],e=function(e,t){if(void 0!==a[t])return a[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return a[t]=e}(e,n.buffer);const i=new Hs(Ii(n.type,e),n.stride);return i.uuid=n.uuid,r[t]=i,i}const s=new(n.isInstancedBufferGeometry?hh:zi);var e=n.data.index;void 0!==e&&(m=Ii(e.type,e.array),s.setIndex(new xi(m,1)));var t=n.data.attributes;for(const f in t){var o=t[f];let e;if(o.isInterleavedBufferAttribute){var l=i(n.data,o.data);e=new Gs(l,o.itemSize,o.offset,o.normalized)}else{l=Ii(o.type,o.array);const g=o.isInstancedBufferAttribute?uh:xi;e=new g(l,o.itemSize,o.normalized)}void 0!==o.name&&(e.name=o.name),void 0!==o.usage&&e.setUsage(o.usage),void 0!==o.updateRange&&(e.updateRange.offset=o.updateRange.offset,e.updateRange.count=o.updateRange.count),s.setAttribute(f,e)}var c=n.data.morphAttributes;if(c)for(const v in c){var h=c[v];const y=[];for(let t=0,e=h.length;t<e;t++){var u=h[t];let e;e=u.isInterleavedBufferAttribute?new Gs(i(n.data,u.data),u.itemSize,u.offset,u.normalized):new xi(Ii(u.type,u.array),u.itemSize,u.normalized),void 0!==u.name&&(e.name=u.name),y.push(e)}s.morphAttributes[v]=y}n.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);var d=n.data.groups||n.data.drawcalls||n.data.offsets;if(void 0!==d)for(let e=0,t=d.length;e!==t;++e){var p=d[e];s.addGroup(p.start,p.count,p.materialIndex)}var m=n.data.boundingSphere;if(void 0!==m){const x=new kt;void 0!==m.center&&x.fromArray(m.center),s.boundingSphere=new un(x,m.radius)}return n.name&&(s.name=n.name),n.userData&&(s.userData=n.userData),s}}const ph={UVMapping:300,CubeReflectionMapping:w,CubeRefractionMapping:E,EquirectangularReflectionMapping:l,EquirectangularRefractionMapping:c,CubeUVReflectionMapping:T,CubeUVRefractionMapping:S},mh={RepeatWrapping:H,ClampToEdgeWrapping:z,MirroredRepeatWrapping:G},fh={NearestFilter:k,NearestMipmapNearestFilter:V,NearestMipmapLinearFilter:Te,LinearFilter:Ae,LinearMipmapNearestFilter:Re,LinearMipmapLinearFilter:Le};function gh(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),uc.call(this,e),this.options={premultiplyAlpha:"none"}}gh.prototype=Object.assign(Object.create(uc.prototype),{constructor:gh,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,n,e,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=lc.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){n&&n(a),r.manager.itemEnd(t)},0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(e){lc.add(t,e),n&&n(e),r.manager.itemEnd(t)}).catch(function(e){i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}});class vh{constructor(){this.type="ShapePath",this.color=new fi,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new zc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(n,e){function t(n){const i=[];for(let e=0,t=n.length;e<t;e++){var r=n[e];const a=new Gc;a.curves=r.curves,i.push(a)}return i}const i=yl.isClockWise,r=this.subPaths;if(0===r.length)return[];if(!0===e)return t(r);let a,s,o;const l=[];if(1===r.length)return s=r[0],o=new Gc,o.curves=s.curves,l.push(o),l;let c=!i(r[0].getPoints());c=n?!c:c;const h=[],u=[];let d=[],p=0;var m,f;u[p]=void 0,d[p]=[];for(let e=0,t=r.length;e<t;e++)s=r[e],m=s.getPoints(),a=i(m),a=n?!a:a,a?(!c&&u[p]&&p++,u[p]={s:new Gc,p:m},u[p].s.curves=s.curves,c&&p++,d[p]=[]):d[p].push({h:s,p:m[0]});if(!u[0])return t(r);if(1<u.length){let r=!1;const y=[];for(let e=0,t=u.length;e<t;e++)h[e]=[];for(let i=0,e=u.length;i<e;i++){var g=d[i];for(let n=0;n<g.length;n++){var v=g[n];let t=!0;for(let e=0;e<u.length;e++)!function(s,o){var e=o.length;let l=!1;for(let r=e-1,a=0;a<e;r=a++){let e=o[r],t=o[a],n=t.x-e.x,i=t.y-e.y;if(Math.abs(i)>Number.EPSILON){if(i<0&&(e=o[a],n=-n,t=o[r],i=-i),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var c=i*(s.x-e.x)-n*(s.y-e.y);if(0==c)return 1;c<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(v.p,u[e].p)||(i!==e&&y.push({froms:i,tos:e,hole:n}),t?(t=!1,h[e].push(v)):r=!0);t&&h[i].push(v)}}0<y.length&&(r||(d=h))}for(let n=0,e=u.length;n<e;n++){o=u[n].s,l.push(o);for(let e=0,t=(f=d[n]).length;e<t;e++)o.holes.push(f[e].h)}return l}}class yh{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){var n=[];const i=function(e,t,n){const i=Array.from(e),r=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[];let o=0,l=0;for(let e=0;e<i.length;e++){var c=i[e];"\n"===c?(o=0,l-=a):(c=function(e,h,u,d,t){const p=t.glyphs[e]||t.glyphs["?"];if(p){const f=new vh;let n,i,r,a,s,o,l,c;if(p.o){var m=p._cachedOutline||(p._cachedOutline=p.o.split(" "));for(let e=0,t=m.length;e<t;)switch(m[e++]){case"m":n=m[e++]*h+u,i=m[e++]*h+d,f.moveTo(n,i);break;case"l":n=m[e++]*h+u,i=m[e++]*h+d,f.lineTo(n,i);break;case"q":r=m[e++]*h+u,a=m[e++]*h+d,s=m[e++]*h+u,o=m[e++]*h+d,f.quadraticCurveTo(s,o,r,a);break;case"b":r=m[e++]*h+u,a=m[e++]*h+d,s=m[e++]*h+u,o=m[e++]*h+d,l=m[e++]*h+u,c=m[e++]*h+d,f.bezierCurveTo(s,o,l,c,r,a)}}return{offsetX:p.ha*h,path:f}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+t.familyName+".")}(c,r,o,l,n),o+=c.offsetX,s.push(c.path))}return s}(e,t,this.data);for(let e=0,t=i.length;e<t;e++)Array.prototype.push.apply(n,i[e].toShapes());return n}}yh.prototype.isFont=!0;let xh;const _h={getContext:function(){return void 0===xh&&(xh=new(window.AudioContext||window.webkitAudioContext)),xh},setContext:function(e){xh=e}};class bh extends uc{constructor(e){super(e)}load(i,r,e,a){const s=this,t=new pc(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(i,function(e){try{var t=e.slice(0);const n=_h.getContext();n.decodeAudioData(t,function(e){r(e)})}catch(e){a?a(e):console.error(e),s.manager.itemError(i)}},e,a)}}class Mh extends oh{constructor(e,t,n=1){super(void 0,n);var i=(new fi).set(e),n=(new fi).set(t),e=new kt(i.r,i.g,i.b),t=new kt(n.r,n.g,n.b),i=Math.sqrt(Math.PI),n=i*Math.sqrt(.75);this.sh.coefficients[0].copy(e).add(t).multiplyScalar(i),this.sh.coefficients[1].copy(e).sub(t).multiplyScalar(n)}}class wh extends oh{constructor(e,t=1){super(void 0,t);e=(new fi).set(e);this.sh.coefficients[0].set(e.r,e.g,e.b).multiplyScalar(2*Math.sqrt(Math.PI))}}wh.prototype.isAmbientLightProbe=Mh.prototype.isHemisphereLightProbe=!0;const Eh=new _n,Th=new _n;class Sh{constructor(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Ah(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=Ah(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e);var t}}function Ah(){return("undefined"==typeof performance?Date:performance).now()}const Rh=new kt,Lh=new Gt,Ch=new kt,Ph=new kt;class Ih extends jn{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Dh=new kt,Nh=new Gt,Oh=new kt,Fh=new kt;class Bh{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var n=this.getFrequencyData();for(let e=0;e<n.length;e++)t+=n[e];return t/n.length}}class Uh{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==i;++e)n[r+e]=n[e];a=t}else{a+=t;t=t/a;this._mixBufferRegion(n,r,0,t,i)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,i=this.buffer,r=e*n+n,t=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,t<1&&(e=n*this._origIndex,this._mixBufferRegion(i,r,e,1-t,n)),0<a&&this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n);for(let e=n,t=n+n;e!==t;++e)if(i[e]!==i[e+n]){s.setValue(i,r);break}}saveOriginalState(){const e=this.binding,n=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(n,r);for(let e=i,t=r;e!==t;++e)n[e]=n[r+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,n=t+this.valueSize;for(let e=t;e<n;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[n+e]=this.buffer[t+e]}_select(t,n,i,e,r){if(.5<=e)for(let e=0;e!==r;++e)t[n+e]=t[i+e]}_slerp(e,t,n,i){Gt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){r=this._workIndex*r;Gt.multiplyQuaternionsFlat(e,r,e,t,e,n),Gt.slerpFlat(e,t,e,t,e,r,i)}_lerp(t,n,i,r,a){var s=1-r;for(let e=0;e!==a;++e){var o=n+e;t[o]=t[o]*s+t[i+e]*r}}_lerpAdditive(t,n,i,r,a){for(let e=0;e!==a;++e){var s=n+e;t[s]=t[s]+t[i+e]*r}}}var Hh="\\[\\]\\.:\\/";const zh=new RegExp("["+Hh+"]","g");var Gh="[^"+Hh+"]",kh="[^"+Hh.replace("\\.","")+"]",Vh=/((?:WC+[\/:])*)/.source.replace("WC",Gh),Hh=/(WCOD+)?/.source.replace("WCOD",kh),kh=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Gh),Gh=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Gh);const Wh=new RegExp("^"+Vh+Hh+kh+Gh+"$"),jh=["material","materials","bones"];function Xh(e,t,n){n=n||qh.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}function qh(e,t,n){this.path=t,this.parsedPath=n||qh.parseTrackName(t),this.node=qh.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(Xh.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)},setValue:function(n,i){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].setValue(n,i)},bind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()},unbind:function(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}}),Object.assign(qh,{Composite:Xh,create:function(e,t,n){return new(e&&e.isAnimationObjectGroup?qh.Composite:qh)(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(zh,"")},parseTrackName:function(e){var t=Wh.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i&&(t=n.nodeName.substring(i+1),-1!==jh.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=t)),null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,i){if(!i||""===i||"."===i||-1===i||i===e.name||i===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(i);if(void 0!==t)return t}if(e.children){const r=function(t){for(let e=0;e<t.length;e++){var n=t[e];if(n.name===i||n.uuid===i)return n;n=r(n.children);if(n)return n}return null};e=r(e.children);if(e)return e}return null}}),Object.assign(qh.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(n,i){var r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e)n[i++]=r[e]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e)r[e]=n[i++]},function(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e)r[e]=n[i++];this.targetObject.needsUpdate=!0},function(n,i){const r=this.resolvedProperty;for(let e=0,t=r.length;e!==t;++e)r[e]=n[i++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let n=this.node;var e=this.parsedPath,i=e.objectName,r=e.propertyName;let a=e.propertyIndex;if(n||(n=qh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(i){let t=e.objectIndex;switch(i){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let e=0;e<n.length;e++)if(n[e].name===t){t=e;break}break;default:if(void 0===n[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[i]}if(void 0!==t){if(void 0===n[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[t]}}var s=n[r];if(void 0!==s){let e=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate);let t=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===r){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[a]&&(a=n.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}else{e=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+e+"."+r+" but it wasn't found.",n)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(qh.prototype,{_getValue_unbound:qh.prototype.getValue,_setValue_unbound:qh.prototype.setValue});class Yh{constructor(){this.uuid=Ct.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let e=0,t=arguments.length;e!==t;++e)n[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const i=this._objects,r=this._indicesByUUID,a=this._paths,s=this._parsedPaths,o=this._bindings,l=o.length;let c=void 0,h=i.length,u=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var d=arguments[e],p=d.uuid;let n=r[p];if(void 0===n){n=h++,r[p]=n,i.push(d);for(let e=0,t=l;e!==t;++e)o[e].push(new qh(d,a[e],s[e]))}else if(n<u){c=i[n];var m=--u,f=i[m];r[f.uuid]=n,i[n]=f,r[p]=m,i[m]=d;for(let t=0,e=l;t!==e;++t){const g=o[t],v=g[m];let e=g[n];g[n]=v,void 0===e&&(e=new qh(d,a[t],s[t])),g[m]=e}}else i[n]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){const n=this._objects,i=this._indicesByUUID,r=this._bindings,a=r.length;let s=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var o=arguments[e],l=o.uuid,c=i[l];if(void 0!==c&&c>=s){var h=s++,u=n[h];i[u.uuid]=c,n[c]=u,i[l]=h,n[h]=o;for(let e=0,t=a;e!==t;++e){const d=r[e],p=d[h],m=d[c];d[c]=p,d[h]=m}}}this.nCachedObjects_=s}uncache(){const n=this._objects,i=this._indicesByUUID,r=this._bindings,a=r.length;let s=this.nCachedObjects_,o=n.length;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e].uuid,c=i[l];if(void 0!==c)if(delete i[l],c<s){var h=--s,l=n[h],u=--o,d=n[u];i[l.uuid]=c,n[c]=l,i[d.uuid]=h,n[h]=d,n.pop();for(let e=0,t=a;e!==t;++e){const m=r[e],f=m[h],g=m[u];m[c]=f,m[h]=g,m.pop()}}else{var p=--o,d=n[p];0<p&&(i[d.uuid]=c),n[c]=d,n.pop();for(let e=0,t=a;e!==t;++e){const v=r[e];v[c]=v[p],v.pop()}}}this.nCachedObjects_=s}subscribe_(n,i){const e=this._bindingsIndicesByPath;let t=e[n];const r=this._bindings;if(void 0!==t)return r[t];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);t=r.length,e[n]=t,a.push(n),s.push(i),r.push(h);for(let e=c,t=o.length;e!==t;++e){var u=o[e];h[e]=new qh(u,n,i)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const i=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=n,a[n]=o,a.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}}Yh.prototype.isAnimationObjectGroup=!0;class Zh{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,s=new Array(a);var o={endingStart:vt,endingEnd:vt};for(let e=0;e!==a;++e){const l=r[e].createInterpolant(null);s[e]=l,l.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){var i,r;return e.fadeOut(t),this.fadeIn(t),n&&(n=(i=this._clip.duration)/(r=e._clip.duration),e.warp(1,r/i,t),this.warp(n,1,t)),this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=r,o[1]=r+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(this.enabled){var r=this._startTime;if(null!==r){r=(e-r)*n;if(r<0||0===n)return;this._startTime=null,t=n*r}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){const o=this._interpolants,l=this._propertyBindings;if(2501===this.blendMode)for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);else for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(i,s)}}else this._updateWeight(e)}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;var n;null!==i&&(n=i.evaluate(e)[0],t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1)))}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;var n;null!==i&&(n=i.evaluate(e)[0],t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){var t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;var a,s=2202===n;if(0===e)return-1!==r&&s&&1==(1&r)?t-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===r&&(0<=e?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),i>=t||i<0?(a=Math.floor(i/t),i-=t*a,r+=Math.abs(a),(n=this.repetitions-r)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=0<e?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==n?this._setEndings(n=e<0,!n,s):this._setEndings(!1,!1,s),this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a}))):this.time=i,s&&1==(1&r))return t-i;return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=yt,i.endingEnd=yt):(i.endingStart=e?this.zeroSlopeAtStart?yt:vt:xt,i.endingEnd=t?this.zeroSlopeAtEnd?yt:vt:xt)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=t,s[1]=r+e,o[1]=n,this}}class Jh extends At{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const i=e._localRoot||this._root,r=e._clip.tracks,a=r.length,s=e._propertyBindings,o=e._interpolants,l=i.uuid,t=this._bindingsByRootAndName;let c=t[l];void 0===c&&(c={},t[l]=c);for(let t=0;t!==a;++t){const u=r[t],d=u.name;let e=c[d];if(void 0!==e)s[t]=e;else{if(e=s[t],void 0!==e){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,l,d));continue}var h=n&&n._propertyBindings[t].binding.parsedPath;e=new Uh(qh.create(i,d,h),u.ValueTypeName,u.getValueSize()),++e.referenceCount,this._addInactiveBinding(e,l,d),s[t]=e}o[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){var t,n,i;null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n],this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t));var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){const a=r[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const i=n[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),e._byClipCacheIndex=null;const h=s.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const i=n[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];void 0===a&&(a={},i[t]=a),(a[n]=e)._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[r],0===Object.keys(s).length&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new Kl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){var i=t||this._root,r=i.uuid;let a="string"==typeof e?oc.findByName(i,e):e;var s=null!==a?a.uuid:e,i=this._actionsByClip[s];let o=null;if(void 0===n&&(n=null!==a?a.blendMode:2500),void 0!==i){e=i.actionByRoot[r];if(void 0!==e&&e.blendMode===n)return e;o=i.knownActions[0],null===a&&(a=o._clip)}if(null===a)return null;n=new Zh(this,a,t,n);return this._bindAction(n,o),this._addInactiveAction(n,s,r),n}existingAction(e,t){var n=t||this._root,t=n.uuid,n="string"==typeof e?oc.findByName(n,e):e,e=n?n.uuid:e,e=this._actionsByClip[e];return void 0!==e&&e.actionByRoot[t]||null}stopAllAction(){const t=this._actions,n=this._nActiveActions;for(let e=n-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var n=this._actions,i=this._nActiveActions,r=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==i;++e){const c=n[e];c._update(r,t,a,s)}const o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,t=e.uuid,i=this._actionsByClip,r=i[t];if(void 0!==r){var a=r.knownActions;for(let e=0,t=a.length;e!==t;++e){const s=a[e];this._deactivateAction(s);const o=s._cacheIndex,l=n[n.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,l._cacheIndex=o,n[o]=l,n.pop(),this._removeInactiveBindingsForAction(s)}delete i[t]}}uncacheRoot(e){var t=e.uuid,n=this._actionsByClip;for(const a in n){var i=n[a].actionByRoot[t];void 0!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}var r=this._bindingsByRootAndName[t];if(void 0!==r)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){t=this.existingAction(e,t);null!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}}Jh.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Kh{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Kh(void 0===this.value.clone?this.value:this.value.clone())}}function Qh(e,t,n){Hs.call(this,e,t),this.meshPerAttribute=n||1}function $h(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}function eu(e,t,n=0,i=1/0){this.ray=new xn(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Pn,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function tu(e,t){return e.distance-t.distance}function nu(e,n,i,t){if(e.layers.test(n.layers)&&e.raycast(n,i),!0===t){var r=e.children;for(let e=0,t=r.length;e<t;e++)nu(r[e],n,i,!0)}}Qh.prototype=Object.assign(Object.create(Hs.prototype),{constructor:Qh,isInstancedInterleavedBuffer:!0,copy:function(e){return Hs.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=Hs.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=Hs.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty($h.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign($h.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(eu.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)},intersectObject:function(e,t=!1,n=[]){return nu(e,this,n,t),n.sort(tu),n},intersectObjects:function(n,i=!1,r=[]){for(let e=0,t=n.length;e<t;e++)nu(n[e],this,r,i);return r.sort(tu),r}});const iu=new Pt;class ru{constructor(e=new Pt(1/0,1/0),t=new Pt(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=iu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Pt),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Pt),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Pt),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Pt),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=iu.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}ru.prototype.isBox2=!0;const au=new kt,su=new kt;class ou{constructor(e=new kt,t=new kt){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new kt),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new kt),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new kt),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){au.subVectors(e,this.start),su.subVectors(this.end,this.start);e=su.dot(su);let n=su.dot(au)/e;return t&&(n=Ct.clamp(n,0,1)),n}closestPointToPoint(e,t,n){t=this.closestPointToPointParameter(e,t);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new kt),this.delta(n).multiplyScalar(t).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}function lu(e){jn.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}((lu.prototype=Object.create(jn.prototype)).constructor=lu).prototype.isImmediateRenderObject=!0;const cu=new kt;const hu=new kt,uu=new _n,du=new _n;class pu extends Io{constructor(e){var t=function t(n){const i=[];n&&n.isBone&&i.push(n);for(let e=0;e<n.children.length;e++)i.push.apply(i,t(n.children[e]));return i}(e);const n=new zi,i=[],r=[];var a=new fi(0,0,1),s=new fi(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new Ri(i,3)),n.setAttribute("color",new Ri(r,3));var l=new wo({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var n=this.bones;const t=this.geometry,i=t.getAttribute("position");du.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<n.length;e++){var r=n[e];r.parent&&r.parent.isBone&&(uu.multiplyMatrices(du,r.matrixWorld),hu.setFromMatrixPosition(uu),i.setXYZ(t,hu.x,hu.y,hu.z),uu.multiplyMatrices(du,r.parent.matrixWorld),hu.setFromMatrixPosition(uu),i.setXYZ(t+1,hu.x,hu.y,hu.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}const mu=new kt,fu=new fi,gu=new fi;class vu extends Io{constructor(e=10,i=10,r=4473924,a=8947848){r=new fi(r),a=new fi(a);var s=i/2,o=e/i,l=e/2;const c=[],h=[];for(let e=0,t=0,n=-l;e<=i;e++,n+=o){c.push(-l,0,n,l,0,n),c.push(n,0,-l,n,0,l);const u=e===s?r:a;u.toArray(h,t),t+=3,u.toArray(h,t),t+=3,u.toArray(h,t),t+=3,u.toArray(h,t),t+=3}const t=new zi;t.setAttribute("position",new Ri(c,3)),t.setAttribute("color",new Ri(h,3));e=new wo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="GridHelper"}}const yu=new kt,xu=new kt,_u=new kt;const bu=new kt,Mu=new pr;function wu(e,t,n,i,r,a,s){bu.set(r,a,s).unproject(i);var o=t[e];if(void 0!==o){const l=n.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],bu.x,bu.y,bu.z)}}const Eu=new jt;class Tu extends Io{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24);const r=new zi;r.setIndex(new xi(n,1)),r.setAttribute("position",new xi(i,3)),super(r,new wo({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Eu.setFromObject(this.object),!Eu.isEmpty()){var t=Eu.min,e=Eu.max;const n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return Io.prototype.copy.call(this,e),this.object=e.object,this}}const Su=new kt;let Au,Ru;class Lu extends Io{constructor(e=1){e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const t=new zi;t.setAttribute("position",new Ri(e,3)),t.setAttribute("color",new Ri([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));e=new wo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="AxesHelper"}}const Cu=new Float32Array(1),Pu=new Int32Array(Cu.buffer);Hh={toHalfFloat:function(e){Cu[0]=e;var t=Pu[0];let n=t>>16&32768,i=t>>12&2047;e=t>>23&255;return e<103||(142<e?(n|=31744,n|=(255==e?0:1)&&8388607&t):e<113?(i|=2048,n|=(i>>114-e)+(i>>113-e&1)):(n|=e-112<<10|i>>1,n+=1&i)),n}};const Iu=Math.pow(2,8),Du=[.125,.215,.35,.446,.526,.582],Nu=5+Du.length,Ou={[_t]:0,3001:1,3002:2,3004:3,3005:4,3006:5,3007:6},Fu=new gi({side:q,depthWrite:!1,depthTest:!1}),Bu=new rr(new sr,Fu),Uu=new th,{_lodPlanes:Hu,_sizeLods:zu,_sigmas:Gu}=Xu(),ku=new fi;let Vu=null;kh=(1+Math.sqrt(5))/2,Gh=1/kh;const Wu=[new kt(1,1,1),new kt(-1,1,1),new kt(1,1,-1),new kt(-1,1,-1),new kt(0,kh,Gh),new kt(0,kh,-Gh),new kt(Gh,0,kh),new kt(-Gh,0,kh),new kt(kh,Gh,0),new kt(-kh,Gh,0)];function ju(e){var t=Math.max(e.r,e.g,e.b),t=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);return e.multiplyScalar(Math.pow(2,-t)),(t+128)/255}function Xu(){const n=[],i=[],r=[];let a=8;for(let t=0;t<Nu;t++){var s=Math.pow(2,a);i.push(s);let e=1/s;4<t?e=Du[t-8+4-1]:0==t&&(e=0),r.push(e);var o=1/(s-1),s=-o/2,o=1+o/2,l=[s,s,o,s,o,o,s,s,o,o,s,o];const u=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let e=0;e<6;e++){var c=e%3*2/3-1,h=2<e?0:-1;u.set([c,h,0,c+2/3,h,0,c+2/3,1+h,0,c,h,0,c+2/3,1+h,0,c,1+h,0],18*e),d.set(l,12*e);h=[e,e,e,e,e,e];p.set(h,6*e)}const m=new zi;m.setAttribute("position",new xi(u,3)),m.setAttribute("uv",new xi(d,2)),m.setAttribute("faceIndex",new xi(p,1)),n.push(m),4<a&&a--}return{_lodPlanes:n,_sizeLods:i,_sigmas:r}}function qu(e){const t=new Ht(3*Iu,3*Iu,e);return t.texture.mapping=T,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Yu(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Zu(){var e=new Pt(1,1);return new Ul({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Ou[_t]},outputEncoding:{value:Ou[_t]}},vertexShader:Ku(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Qu()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})}function Ju(){return new Ul({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Ou[_t]},outputEncoding:{value:Ou[_t]}},vertexShader:Ku(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Qu()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})}function Ku(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Qu(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}xc.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(xc.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},zc.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},vu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},pu.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},uc.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ch.extractUrlBase(e)},uc.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},ru.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},ru.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ru.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},ru.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},jt.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},jt.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},jt.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},jt.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},jt.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},un.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},br.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},ou.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Ct.random16=function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},Ct.nearestPowerOfTwo=function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ct.floorPowerOfTwo(e)},Ct.nextPowerOfTwo=function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ct.ceilPowerOfTwo(e)},It.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},It.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},It.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},It.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},It.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},It.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},_n.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},_n.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},_n.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new kt).setFromMatrixColumn(this,3)},_n.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},_n.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},_n.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},_n.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},_n.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},_n.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},_n.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},_n.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},_n.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},_n.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},_n.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},_n.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},_n.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},_n.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},_n.prototype.makeFrustum=function(e,t,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,a)},_n.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Zn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Gt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Gt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},xn.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},xn.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},xn.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},si.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},si.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},si.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},si.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},si.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},si.barycoordFromPoint=function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),si.getBarycoord(e,t,n,i,r)},si.normal=function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),si.getNormal(e,t,n,i)},Gc.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Gc.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new bl(this,e)},Gc.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Rl(this,e)},Pt.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Pt.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Pt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},kt.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},kt.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},kt.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},kt.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},kt.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},kt.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},kt.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},kt.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},kt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ut.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ut.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},jn.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},jn.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},jn.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},jn.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},jn.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(jn.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),rr.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(rr.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),po.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(xc.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),mr.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(kc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(xi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===n},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(n)}}}),xi.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?n:Tt),this},xi.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},xi.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},zi.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},zi.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new xi(t,arguments[2])))},zi.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},zi.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},zi.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},zi.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},zi.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(zi.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(hh.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(eu.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(Hs.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===n},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Hs.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?n:Tt),this},Hs.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},bl.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},bl.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},bl.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Us.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},Kh.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(li.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new fi}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(zl.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}}),Object.defineProperties(dr.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Ns.prototype.clearTarget=function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},Ns.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},Ns.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Ns.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Ns.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Ns.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Ns.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Ns.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Ns.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Ns.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Ns.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Ns.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Ns.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Ns.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Ns.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},Ns.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Ns.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Ns.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Ns.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Ns.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Ns.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Ns.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Ns.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Ns.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Ns.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Ns.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?bt:_t}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ts.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Ht.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Ih.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,n=new bh;return n.load(e,function(e){t.setBuffer(e)}),this},Bh.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},fr.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},fr.prototype.clear=function(e,t,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,i)},Nt.crossOrigin=void 0,Nt.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new yc;r.setCrossOrigin(this.crossOrigin);const a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},Nt.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new gc;r.setCrossOrigin(this.crossOrigin);const a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},Nt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Nt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};Gh={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t),e.ACESFilmicToneMapping=4,e.AddEquation=te,e.AddOperation=2,e.AdditiveAnimationBlendMode=2501,e.AdditiveBlending=K,e.AlphaFormat=p,e.AlwaysDepth=ye,e.AlwaysStencilFunc=519,e.AmbientLight=rh,e.AmbientLightProbe=wh,e.AnimationClip=oc,e.AnimationLoader=class extends uc{constructor(e){super(e)}load(t,n,e,i){const r=this,a=new pc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{n(r.parse(JSON.parse(e)))}catch(e){i?i(e):console.error(e),r.manager.itemError(t)}},e,i)}parse(t){const n=[];for(let e=0;e<t.length;e++){var i=oc.parse(t[e]);n.push(i)}return n}},e.AnimationMixer=Jh,e.AnimationObjectGroup=Yh,e.AnimationUtils=Yl,e.ArcCurve=bc,e.ArrayCamera=Ls,e.ArrowHelper=class extends jn{constructor(e=new kt(0,0,1),t=new kt(0,0,0),n=1,i=16776960,r=.2*n,a=.2*r){super(),this.type="ArrowHelper",void 0===Au&&(Au=new zi,Au.setAttribute("position",new Ri([0,0,0,0,1,0],3)),Ru=new Xo(0,.5,1,5,1),Ru.translate(0,-.5,0)),this.position.copy(t),this.line=new Lo(Au,new wo({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rr(Ru,new gi({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(Su.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(Su,e))}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}},e.Audio=Ih,e.AudioAnalyser=Bh,e.AudioContext=_h,e.AudioListener=class extends jn{constructor(){super(),this.type="AudioListener",this.context=_h.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Sh}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;var n=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Rh,Lh,Ch),Ph.set(0,0,-1).applyQuaternion(Lh),t.positionX?(e=this.context.currentTime+this.timeDelta,t.positionX.linearRampToValueAtTime(Rh.x,e),t.positionY.linearRampToValueAtTime(Rh.y,e),t.positionZ.linearRampToValueAtTime(Rh.z,e),t.forwardX.linearRampToValueAtTime(Ph.x,e),t.forwardY.linearRampToValueAtTime(Ph.y,e),t.forwardZ.linearRampToValueAtTime(Ph.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)):(t.setPosition(Rh.x,Rh.y,Rh.z),t.setOrientation(Ph.x,Ph.y,Ph.z,n.x,n.y,n.z))}},e.AudioLoader=bh,e.AxesHelper=Lu,e.AxisHelper=function(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Lu(e)},e.BackSide=q,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.BinaryTextureLoader=function(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new vc(e)},e.Bone=mo,e.BooleanKeyframeTrack=ec,e.BoundingBoxHelper=function(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Tu(e,t)},e.Box2=ru,e.Box3=jt,e.Box3Helper=class extends Io{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const i=new zi;i.setIndex(new xi(n,1)),i.setAttribute("position",new Ri([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(i,new wo({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}},e.BoxBufferGeometry=sr,e.BoxGeometry=sr,e.BoxHelper=Tu,e.BufferAttribute=xi,e.BufferGeometry=zi,e.BufferGeometryLoader=dh,e.ByteType=a,e.Cache=lc,e.Camera=pr,e.CameraHelper=class extends Io{constructor(e){const t=new zi;var n=new wo({color:16777215,vertexColors:!0,toneMapped:!1});const i=[],r=[],a={};var s=new fi(16755200),o=new fi(16711680),l=new fi(43775),c=new fi(16777215),h=new fi(3355443);function u(e,t,n){d(e,n),d(t,n)}function d(e,t){i.push(0,0,0),r.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(i.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),t.setAttribute("position",new Ri(i,3)),t.setAttribute("color",new Ri(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const e=this.geometry;var t=this.pointMap;Mu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),wu("c",t,e,Mu,0,0,-1),wu("t",t,e,Mu,0,0,1),wu("n1",t,e,Mu,-1,-1,-1),wu("n2",t,e,Mu,1,-1,-1),wu("n3",t,e,Mu,-1,1,-1),wu("n4",t,e,Mu,1,1,-1),wu("f1",t,e,Mu,-1,-1,1),wu("f2",t,e,Mu,1,-1,1),wu("f3",t,e,Mu,-1,1,1),wu("f4",t,e,Mu,1,1,1),wu("u1",t,e,Mu,.7,1.1,-1),wu("u2",t,e,Mu,-.7,1.1,-1),wu("u3",t,e,Mu,0,2,-1),wu("cf1",t,e,Mu,-1,0,1),wu("cf2",t,e,Mu,1,0,1),wu("cf3",t,e,Mu,0,-1,1),wu("cf4",t,e,Mu,0,1,1),wu("cn1",t,e,Mu,-1,0,-1),wu("cn2",t,e,Mu,1,0,-1),wu("cn3",t,e,Mu,0,-1,-1),wu("cn4",t,e,Mu,0,1,-1),e.getAttribute("position").needsUpdate=!0}},e.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},e.CanvasTexture=Vo,e.CatmullRomCurve3=Ac,e.CineonToneMapping=3,e.CircleBufferGeometry=jo,e.CircleGeometry=jo,e.ClampToEdgeWrapping=z,e.Clock=Sh,e.Color=fi,e.ColorKeyframeTrack=tc,e.CompressedTexture=ko,e.CompressedTextureLoader=mc,e.ConeBufferGeometry=qo,e.ConeGeometry=qo,e.CubeCamera=fr,e.CubeReflectionMapping=w,e.CubeRefractionMapping=E,e.CubeTexture=gr,e.CubeTextureLoader=gc,e.CubeUVReflectionMapping=T,e.CubeUVRefractionMapping=S,e.CubicBezierCurve=Pc,e.CubicBezierCurve3=Ic,e.CubicInterpolant=Jl,e.CullFaceBack=j,e.CullFaceFront=X,e.CullFaceFrontBack=3,e.CullFaceNone=W,e.Curve=xc,e.CurvePath=Hc,e.CustomBlending=ee,e.CustomToneMapping=5,e.CylinderBufferGeometry=Xo,e.CylinderGeometry=Xo,e.Cylindrical=class{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}},e.DataTexture=yr,e.DataTexture2DArray=kr,e.DataTexture3D=Vr,e.DataTextureLoader=vc,e.DataUtils=Hh,e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=hc,e.DepthFormat=Ue,e.DepthStencilFormat=He,e.DepthTexture=Wo,e.DirectionalLight=ih,e.DirectionalLightHelper=class extends jn{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let i=new zi;i.setAttribute("position",new Ri([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));t=new wo({fog:!1,toneMapped:!1});this.lightPlane=new Lo(i,t),this.add(this.lightPlane),i=new zi,i.setAttribute("position",new Ri([0,0,0,0,0,1],3)),this.targetLine=new Lo(i,t),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){yu.setFromMatrixPosition(this.light.matrixWorld),xu.setFromMatrixPosition(this.light.target.matrixWorld),_u.subVectors(xu,yu),this.lightPlane.lookAt(xu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(xu),this.targetLine.scale.z=_u.length()}},e.DiscreteInterpolant=Ql,e.DodecahedronBufferGeometry=Zo,e.DodecahedronGeometry=Zo,e.DoubleSide=Y,e.DstAlphaFactor=de,e.DstColorFactor=me,e.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new xi(e,t).setUsage(n)},e.DynamicCopyUsage=35050,e.DynamicDrawUsage=n,e.DynamicReadUsage=35049,e.EdgesGeometry=el,e.EdgesHelper=function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Io(new el(e.geometry),new wo({color:void 0!==t?t:16777215}))},e.EllipseCurve=_c,e.EqualDepth=be,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=l,e.EquirectangularRefractionMapping=c,e.Euler=Cn,e.EventDispatcher=At,e.ExtrudeBufferGeometry=bl,e.ExtrudeGeometry=bl,e.FaceColors=1,e.FileLoader=pc,e.FlatShading=1,e.Float16BufferAttribute=Ai,e.Float32Attribute=function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Ri(e,t)},e.Float32BufferAttribute=Ri,e.Float64Attribute=function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Li(e,t)},e.Float64BufferAttribute=Li,e.FloatType=De,e.Fog=Bs,e.FogExp2=Fs,e.Font=yh,e.FontLoader=class extends uc{constructor(e){super(e)}load(e,i,t,n){const r=this,a=new pc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}t=r.parse(n);i&&i(t)},t,n)}parse(e){return new yh(e)}},e.FrontSide=L,e.Frustum=br,e.GLBufferAttribute=$h,e.GLSL1="100",e.GLSL3=St,e.GammaEncoding=3007,e.GreaterDepth=we,e.GreaterEqualDepth=Me,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=vu,e.Group=Cs,e.HalfFloatType=Ne,e.HemisphereLight=Vc,e.HemisphereLightHelper=class extends jn{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Tl(t);i.rotateY(.5*Math.PI),this.material=new gi({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);t=i.getAttribute("position"),t=new Float32Array(3*t.count);i.setAttribute("color",new xi(t,3)),this.add(new rr(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const i=e.geometry.getAttribute("color");fu.copy(this.light.color),gu.copy(this.light.groundColor);for(let e=0,t=i.count;e<t;e++){var n=e<t/2?fu:gu;i.setXYZ(e,n.r,n.g,n.b)}i.needsUpdate=!0}e.lookAt(mu.setFromMatrixPosition(this.light.matrixWorld).negate())}},e.HemisphereLightProbe=Mh,e.IcosahedronBufferGeometry=wl,e.IcosahedronGeometry=wl,e.ImageBitmapLoader=gh,e.ImageLoader=fc,e.ImageUtils=Nt,e.ImmediateRenderObject=lu,e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=uh,e.InstancedBufferGeometry=hh,e.InstancedInterleavedBuffer=Qh,e.InstancedMesh=Mo,e.Int16Attribute=function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new wi(e,t)},e.Int16BufferAttribute=wi,e.Int32Attribute=function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Ti(e,t)},e.Int32BufferAttribute=Ti,e.Int8Attribute=function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new _i(e,t)},e.Int8BufferAttribute=_i,e.IntType=o,e.InterleavedBuffer=Hs,e.InterleavedBufferAttribute=Gs,e.Interpolant=Zl,e.InterpolateDiscrete=r,e.InterpolateLinear=gt,e.InterpolateSmooth=2302,e.InvertStencilOp=5386,e.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},e.KeepStencilOp=7680,e.KeyframeTrack=$l,e.LOD=so,e.LatheBufferGeometry=El,e.LatheGeometry=El,e.Layers=Pn,e.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},e.LessDepth=xe,e.LessEqualDepth=_e,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=kc,e.LightProbe=oh,e.Line=Lo,e.Line3=ou,e.LineBasicMaterial=wo,e.LineCurve=Dc,e.LineCurve3=Nc,e.LineDashedMaterial=Xl,e.LineLoop=Do,e.LinePieces=1,e.LineSegments=Io,e.LineStrip=0,e.LinearEncoding=_t,e.LinearFilter=Ae,e.LinearInterpolant=Kl,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=Le,e.LinearMipmapNearestFilter=Re,e.LinearToneMapping=1,e.Loader=uc,e.LoaderUtils=ch,e.LoadingManager=cc,e.LogLuvEncoding=3003,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=f,e.LuminanceFormat=m,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=li,e.MaterialLoader=lh,e.Math=Ct,e.MathUtils=Ct,e.Matrix3=It,e.Matrix4=_n,e.MaxEquation=ae,e.Mesh=rr,e.MeshBasicMaterial=gi,e.MeshDepthMaterial=bs,e.MeshDistanceMaterial=Ms,e.MeshFaceMaterial=function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},e.MeshLambertMaterial=Wl,e.MeshMatcapMaterial=jl,e.MeshNormalMaterial=Vl,e.MeshPhongMaterial=Gl,e.MeshPhysicalMaterial=zl,e.MeshStandardMaterial=Hl,e.MeshToonMaterial=kl,e.MinEquation=re,e.MirroredRepeatWrapping=G,e.MixOperation=1,e.MultiMaterial=function(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e},e.MultiplyBlending=$,e.MultiplyOperation=0,e.NearestFilter=k,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=Te,e.NearestMipmapNearestFilter=V,e.NeverDepth=ve,e.NeverStencilFunc=512,e.NoBlending=Z,e.NoColors=0,e.NoToneMapping=Se,e.NormalAnimationBlendMode=2500,e.NormalBlending=J,e.NotEqualDepth=Ee,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=nc,e.Object3D=jn,e.ObjectLoader=class extends uc{constructor(e){super(e)}load(i,r,e,a){const s=this;var t=""===this.path?ch.extractUrlBase(i):this.path;this.resourcePath=this.resourcePath||t;const n=new pc(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(i,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==a&&a(e),void console.error("THREE:ObjectLoader: Can't parse "+i+".",e.message)}const n=t.metadata;void 0!==n&&void 0!==n.type&&"geometry"!==n.type.toLowerCase()?s.parse(t,r):console.error("THREE.ObjectLoader: Can't load "+i)},e,a)}parse(e,t){var n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){void 0!==t&&t(s)}),i=this.parseTextures(e.textures,a),i=this.parseMaterials(e.materials,i);const s=this.parseObject(e.object,r,i,n);e=this.parseSkeletons(e.skeletons,s);if(this.bindSkeletons(s,e),void 0!==t){let e=!1;for(const o in a)if(a[o]instanceof HTMLImageElement){e=!0;break}!1===e&&t(s)}return s}parseShapes(n){const i={};if(void 0!==n)for(let e=0,t=n.length;e<t;e++){var r=(new Gc).fromJSON(n[e]);i[r.uuid]=r}return i}parseSkeletons(n,e){const i={},r={};if(e.traverse(function(e){e.isBone&&(r[e.uuid]=e)}),void 0!==n)for(let e=0,t=n.length;e<t;e++){var a=(new vo).fromJSON(n[e],r);i[a.uuid]=a}return i}parseGeometries(n,i){const r={};let a;if(void 0!==n){const c=new dh;for(let t=0,e=n.length;t<e;t++){let e;const h=n[t];switch(h.type){case"PlaneGeometry":case"PlaneBufferGeometry":e=new Fl[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":e=new Fl[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":e=new Fl[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":e=new Fl[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":e=new Fl[h.type](h.radius,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":e=new Fl[h.type](h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":e=new Fl[h.type](h.radius,h.detail);break;case"RingGeometry":case"RingBufferGeometry":e=new Fl[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":e=new Fl[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":e=new Fl[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case"TubeGeometry":case"TubeBufferGeometry":e=new Fl[h.type]((new Uc[h.path.type]).fromJSON(h.path),h.tubularSegments,h.radius,h.radialSegments,h.closed);break;case"LatheGeometry":case"LatheBufferGeometry":e=new Fl[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":e=new Fl[h.type](h.vertices,h.indices,h.radius,h.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":a=[];for(let e=0,t=h.shapes.length;e<t;e++){var s=i[h.shapes[e]];a.push(s)}e=new Fl[h.type](a,h.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":a=[];for(let e=0,t=h.shapes.length;e<t;e++){var o=i[h.shapes[e]];a.push(o)}var l=h.options.extrudePath;void 0!==l&&(h.options.extrudePath=(new Uc[l.type]).fromJSON(l)),e=new Fl[h.type](a,h.options);break;case"BufferGeometry":case"InstancedBufferGeometry":e=c.parse(h);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+h.type+'"');continue}e.uuid=h.uuid,void 0!==h.name&&(e.name=h.name),!0===e.isBufferGeometry&&void 0!==h.userData&&(e.userData=h.userData),r[h.uuid]=e}}return r}parseMaterials(n,e){const i={},r={};if(void 0!==n){const o=new lh;o.setTextures(e);for(let e=0,t=n.length;e<t;e++){var a=n[e];if("MultiMaterial"===a.type){const l=[];for(let e=0;e<a.materials.length;e++){var s=a.materials[e];void 0===i[s.uuid]&&(i[s.uuid]=o.parse(s)),l.push(i[s.uuid])}r[a.uuid]=l}else void 0===i[a.uuid]&&(i[a.uuid]=o.parse(a)),r[a.uuid]=i[a.uuid]}}return r}parseAnimations(t){const n={};if(void 0!==t)for(let e=0;e<t.length;e++){var i=t[e],i=oc.parse(i);n[i.uuid]=i}return n}parseImages(n,e){const i=this,r={};let a;function s(e){if("string"!=typeof e)return e.data?{data:Ii(e.type,e.data),width:e.width,height:e.height}:null;var t,e=e,e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e;return t=e,i.manager.itemStart(t),a.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}if(void 0!==n&&0<n.length){e=new cc(e);a=new fc(e),a.setCrossOrigin(this.crossOrigin);for(let e=0,t=n.length;e<t;e++){var o=n[e],l=o.url;if(Array.isArray(l)){r[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var c=s(l[e]);null!==c&&(c instanceof HTMLImageElement?r[o.uuid].push(c):r[o.uuid].push(new yr(c.data,c.width,c.height)))}}else{var h=s(o.url);null!==h&&(r[o.uuid]=h)}}}return r}parseTextures(n,i){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const a={};if(void 0!==n)for(let t=0,e=n.length;t<e;t++){var s=n[t];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===i[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let e;var o=i[s.image];Array.isArray(o)?(e=new gr(o),6===o.length&&(e.needsUpdate=!0)):(e=o&&o.data?new yr(o.data,o.width,o.height):new Ft(o),o&&(e.needsUpdate=!0)),e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=r(s.mapping,ph)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=r(s.wrap[0],mh),e.wrapT=r(s.wrap[1],mh)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=r(s.minFilter,fh)),void 0!==s.magFilter&&(e.magFilter=r(s.magFilter,fh)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),a[s.uuid]=e}return a}parseObject(e,t,a,n){let i;function r(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function s(n){if(void 0!==n){if(Array.isArray(n)){const r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];void 0===a[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),r.push(a[i])}return r}return void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),a[n]}}let o,l;switch(e.type){case"Scene":i=new Us,void 0!==e.background&&Number.isInteger(e.background)&&(i.background=new fi(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?i.fog=new Bs(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(i.fog=new Fs(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":i=new mr(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(i.focus=e.focus),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.filmGauge&&(i.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(i.filmOffset=e.filmOffset),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new th(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(i.zoom=e.zoom),void 0!==e.view&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new rh(e.color,e.intensity);break;case"DirectionalLight":i=new ih(e.color,e.intensity);break;case"PointLight":i=new eh(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new ah(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new Zc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new Vc(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=(new oh).fromJSON(e);break;case"SkinnedMesh":o=r(e.geometry),l=s(e.material),i=new po(o,l),void 0!==e.bindMode&&(i.bindMode=e.bindMode),void 0!==e.bindMatrix&&i.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(i.skeleton=e.skeleton);break;case"Mesh":o=r(e.geometry),l=s(e.material),i=new rr(o,l);break;case"InstancedMesh":o=r(e.geometry),l=s(e.material);var c=e.count,h=e.instanceMatrix,u=e.instanceColor;i=new Mo(o,l,c),i.instanceMatrix=new xi(new Float32Array(h.array),16),void 0!==u&&(i.instanceColor=new xi(new Float32Array(u.array),u.itemSize));break;case"LOD":i=new so;break;case"Line":i=new Lo(r(e.geometry),s(e.material));break;case"LineLoop":i=new Do(r(e.geometry),s(e.material));break;case"LineSegments":i=new Io(r(e.geometry),s(e.material));break;case"PointCloud":case"Points":i=new Ho(r(e.geometry),s(e.material));break;case"Sprite":i=new no(s(e.material));break;case"Group":i=new Cs;break;case"Bone":i=new mo;break;default:i=new jn}if(i.uuid=e.uuid,void 0!==e.name&&(i.name=e.name),void 0!==e.matrix?(i.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(void 0!==e.position&&i.position.fromArray(e.position),void 0!==e.rotation&&i.rotation.fromArray(e.rotation),void 0!==e.quaternion&&i.quaternion.fromArray(e.quaternion),void 0!==e.scale&&i.scale.fromArray(e.scale)),void 0!==e.castShadow&&(i.castShadow=e.castShadow),void 0!==e.receiveShadow&&(i.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(i.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(i.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(i.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&i.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(i.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(i.visible=e.visible),void 0!==e.frustumCulled&&(i.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(i.renderOrder=e.renderOrder),void 0!==e.userData&&(i.userData=e.userData),void 0!==e.layers&&(i.layers.mask=e.layers),void 0!==e.children){var d=e.children;for(let e=0;e<d.length;e++)i.add(this.parseObject(d[e],t,a,n))}if(void 0!==e.animations){var p=e.animations;for(let e=0;e<p.length;e++){var m=p[e];i.animations.push(n[m])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(i.autoUpdate=e.autoUpdate);var f=e.levels;for(let e=0;e<f.length;e++){var g=f[e],v=i.getObjectByProperty("uuid",g.object);void 0!==v&&i.addLevel(v,g.distance)}}return i}bindSkeletons(e,n){0!==Object.keys(n).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=n[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}},e.ObjectSpaceNormalMap=Et,e.OctahedronBufferGeometry=Tl,e.OctahedronGeometry=Tl,e.OneFactor=oe,e.OneMinusDstAlphaFactor=pe,e.OneMinusDstColorFactor=fe,e.OneMinusSrcAlphaFactor=ue,e.OneMinusSrcColorFactor=ce,e.OrthographicCamera=th,e.PCFShadowMap=A,e.PCFSoftShadowMap=2,e.PMREMGenerator=class{constructor(e){var t,n;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(t=20,n=new Float32Array(t),e=new kt(0,1,0),e=new Ul({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e},inputEncoding:{value:Ou[_t]},outputEncoding:{value:Ou[_t]}},vertexShader:Ku(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Qu()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Vu=this._renderer.getRenderTarget();var r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),0<t&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Ju(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Zu(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<Hu.length;e++)Hu[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Vu),e.scissorTest=!1,Yu(e,0,0,e.width,e.height)}_fromTexture(e){Vu=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t,t={magFilter:k,minFilter:k,generateMipmaps:!1,type:Ce,format:i,encoding:void 0===(t=e)||t.type!==Ce||t.encoding!==_t&&t.encoding!==bt&&3007!==t.encoding?3002:e.encoding,depthBuffer:!1};const n=qu(t);return n.depthBuffer=!e,this._pingPongRenderTarget=qu(t),n}_compileMaterial(e){e=new rr(Hu[0],e);this._renderer.compile(e,Uu)}_sceneToCubeUV(t,e,n,i){const r=new mr(90,1,e,n);var a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1];const o=this._renderer;var l=o.autoClear,c=o.outputEncoding,e=o.toneMapping;o.getClearColor(ku),o.toneMapping=Se,o.outputEncoding=_t;let h=o.autoClear=!1;var u,n=t.background;n?n.isColor&&(Fu.color.copy(n).convertSRGBToLinear(),t.background=null,u=ju(Fu.color),Fu.opacity=u,h=!0):(Fu.color.copy(ku).convertSRGBToLinear(),u=ju(Fu.color),Fu.opacity=u,h=!0);for(let e=0;e<6;e++){var d=e%3;0==d?(r.up.set(0,a[e],0),r.lookAt(s[e],0,0)):1==d?(r.up.set(0,0,a[e]),r.lookAt(0,s[e],0)):(r.up.set(0,a[e],0),r.lookAt(0,0,s[e])),Yu(i,d*Iu,2<e?Iu:0,Iu,Iu),o.setRenderTarget(i),h&&o.render(Bu,r),o.render(t,r)}o.toneMapping=e,o.outputEncoding=c,o.autoClear=l}_textureToCubeUV(e,t){const n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Ju()):null==this._equirectShader&&(this._equirectShader=Zu());var i=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new rr(Hu[0],i);const a=i.uniforms;(a.envMap.value=e).isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=Ou[e.encoding],a.outputEncoding.value=Ou[t.texture.encoding],Yu(t,0,0,3*Iu,2*Iu),n.setRenderTarget(t),n.render(r,Uu)}_applyPMREM(t){const e=this._renderer;var n=e.autoClear;e.autoClear=!1;for(let e=1;e<Nu;e++){var i=Math.sqrt(Gu[e]*Gu[e]-Gu[e-1]*Gu[e-1]),r=Wu[(e-1)%Wu.length];this._blur(t,e-1,e,i,r)}e.autoClear=n}_blur(e,t,n,i,r){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,s){const o=this._renderer;var l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var c=new rr(Hu[i],l);const h=l.uniforms;var l=zu[n]-1,l=isFinite(r)?Math.PI/(2*l):2*Math.PI/39,u=r/l,d=isFinite(r)?1+Math.floor(3*u):20;20<d&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${d} samples when the maximum is set to 20`);const p=[];let m=0;for(let e=0;e<20;++e){const g=e/u;var f=Math.exp(-g*g/2);p.push(f),0==e?m+=f:e<d&&(m+=2*f)}for(let e=0;e<p.length;e++)p[e]=p[e]/m;h.envMap.value=e.texture,h.samples.value=d,h.weights.value=p,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s),h.dTheta.value=l,h.mipInt.value=8-n,h.inputEncoding.value=Ou[e.texture.encoding],h.outputEncoding.value=Ou[e.texture.encoding];e=zu[i];const g=3*Math.max(0,Iu-2*e);i=(0===i?0:2*Iu)+2*e*(4<i?i-8+4:0);Yu(t,g,i,3*e,2*e),o.setRenderTarget(t),o.render(c,Uu)}},e.ParametricBufferGeometry=Sl,e.ParametricGeometry=Sl,e.Particle=function(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new no(e)},e.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new No(e)},e.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Ho(e,t)},e.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new No(e)},e.Path=zc,e.PerspectiveCamera=mr,e.Plane=Zn,e.PlaneBufferGeometry=Er,e.PlaneGeometry=Er,e.PlaneHelper=class extends Lo{constructor(e,t=1,n=16776960){const i=new zi;i.setAttribute("position",new Ri([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),super(i,new wo({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const r=new zi;r.setAttribute("position",new Ri([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),r.computeBoundingSphere(),this.add(new rr(r,new gi({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?q:L,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}},e.PointCloud=function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Ho(e,t)},e.PointCloudMaterial=function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new No(e)},e.PointLight=eh,e.PointLightHelper=class extends rr{constructor(e,t,n){super(new Ll(t,4,2),new gi({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},e.Points=Ho,e.PointsMaterial=No,e.PolarGridHelper=class extends Io{constructor(t=10,n=16,i=8,r=64,a=4473924,s=8947848){a=new fi(a),s=new fi(s);const o=[],l=[];for(let e=0;e<=n;e++){var c=e/n*(2*Math.PI),h=Math.sin(c)*t,c=Math.cos(c)*t;o.push(0,0,0),o.push(h,0,c);c=1&e?a:s;l.push(c.r,c.g,c.b),l.push(c.r,c.g,c.b)}for(let e=0;e<=i;e++){var u=1&e?a:s,d=t-t/i*e;for(let e=0;e<r;e++){var p=e/r*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d;o.push(m,0,f),l.push(u.r,u.g,u.b),p=(e+1)/r*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d,o.push(m,0,f),l.push(u.r,u.g,u.b)}}const e=new zi;e.setAttribute("position",new Ri(o,3)),e.setAttribute("color",new Ri(l,3));var g=new wo({vertexColors:!0,toneMapped:!1});super(e,g),this.type="PolarGridHelper"}},e.PolyhedronBufferGeometry=Yo,e.PolyhedronGeometry=Yo,e.PositionalAudio=class extends Ih{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(Dh,Nh,Oh),Fh.set(0,0,1).applyQuaternion(Nh);const t=this.panner;t.positionX?(e=this.context.currentTime+this.listener.timeDelta,t.positionX.linearRampToValueAtTime(Dh.x,e),t.positionY.linearRampToValueAtTime(Dh.y,e),t.positionZ.linearRampToValueAtTime(Dh.z,e),t.orientationX.linearRampToValueAtTime(Fh.x,e),t.orientationY.linearRampToValueAtTime(Fh.y,e),t.orientationZ.linearRampToValueAtTime(Fh.z,e)):(t.setPosition(Dh.x,Dh.y,Dh.z),t.setOrientation(Fh.x,Fh.y,Fh.z))}}},e.PropertyBinding=qh,e.PropertyMixer=Uh,e.QuadraticBezierCurve=Oc,e.QuadraticBezierCurve3=Fc,e.Quaternion=Gt,e.QuaternionKeyframeTrack=rc,e.QuaternionLinearInterpolant=ic,e.REVISION=t,e.RGBADepthPacking=Mt,e.RGBAFormat=Be,e.RGBAIntegerFormat=b,e.RGBA_ASTC_10x10_Format=Qe,e.RGBA_ASTC_10x5_Format=Ze,e.RGBA_ASTC_10x6_Format=Je,e.RGBA_ASTC_10x8_Format=Ke,e.RGBA_ASTC_12x10_Format=$e,e.RGBA_ASTC_12x12_Format=et,e.RGBA_ASTC_4x4_Format=Ge,e.RGBA_ASTC_5x4_Format=ke,e.RGBA_ASTC_5x5_Format=Ve,e.RGBA_ASTC_6x5_Format=We,e.RGBA_ASTC_6x6_Format=je,e.RGBA_ASTC_8x5_Format=Xe,e.RGBA_ASTC_8x6_Format=qe,e.RGBA_ASTC_8x8_Format=Ye,e.RGBA_BPTC_Format=tt,e.RGBA_ETC2_EAC_Format=ze,e.RGBA_PVRTC_2BPPV1_Format=F,e.RGBA_PVRTC_4BPPV1_Format=O,e.RGBA_S3TC_DXT1_Format=C,e.RGBA_S3TC_DXT3_Format=P,e.RGBA_S3TC_DXT5_Format=I,e.RGBDEncoding=3006,e.RGBEEncoding=3002,e.RGBEFormat=i,e.RGBFormat=Fe,e.RGBIntegerFormat=_,e.RGBM16Encoding=3005,e.RGBM7Encoding=3004,e.RGB_ETC1_Format=B,e.RGB_ETC2_Format=U,e.RGB_PVRTC_2BPPV1_Format=N,e.RGB_PVRTC_4BPPV1_Format=D,e.RGB_S3TC_DXT1_Format=M,e.RGFormat=y,e.RGIntegerFormat=x,e.RawShaderMaterial=Ul,e.Ray=xn,e.Raycaster=eu,e.RectAreaLight=ah,e.RedFormat=g,e.RedIntegerFormat=v,e.ReinhardToneMapping=2,e.RepeatWrapping=H,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=ie,e.RingBufferGeometry=Al,e.RingGeometry=Al,e.SRGB8_ALPHA8_ASTC_10x10_Format=pt,e.SRGB8_ALPHA8_ASTC_10x5_Format=ht,e.SRGB8_ALPHA8_ASTC_10x6_Format=ut,e.SRGB8_ALPHA8_ASTC_10x8_Format=dt,e.SRGB8_ALPHA8_ASTC_12x10_Format=mt,e.SRGB8_ALPHA8_ASTC_12x12_Format=ft,e.SRGB8_ALPHA8_ASTC_4x4_Format=nt,e.SRGB8_ALPHA8_ASTC_5x4_Format=it,e.SRGB8_ALPHA8_ASTC_5x5_Format=rt,e.SRGB8_ALPHA8_ASTC_6x5_Format=at,e.SRGB8_ALPHA8_ASTC_6x6_Format=st,e.SRGB8_ALPHA8_ASTC_8x5_Format=ot,e.SRGB8_ALPHA8_ASTC_8x6_Format=lt,e.SRGB8_ALPHA8_ASTC_8x8_Format=ct,e.Scene=Us,e.SceneUtils=Gh,e.ShaderChunk=Tr,e.ShaderLib=Ar,e.ShaderMaterial=dr,e.ShadowMaterial=Bl,e.Shape=Gc,e.ShapeBufferGeometry=Rl,e.ShapeGeometry=Rl,e.ShapePath=vh,e.ShapeUtils=yl,e.ShortType=s,e.Skeleton=vo,e.SkeletonHelper=pu,e.SkinnedMesh=po,e.SmoothShading=2,e.Sphere=un,e.SphereBufferGeometry=Ll,e.SphereGeometry=Ll,e.Spherical=class{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ct.clamp(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},e.SphericalHarmonics3=sh,e.SplineCurve=Bc,e.SpotLight=Zc,e.SpotLightHelper=class extends jn{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new zi,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var r=e/32*Math.PI*2,a=t/32*Math.PI*2;i.push(Math.cos(r),Math.sin(r),1,Math.cos(a),Math.sin(a),1)}n.setAttribute("position",new Ri(i,3));t=new wo({fog:!1,toneMapped:!1});this.cone=new Io(n,t),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),cu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(cu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},e.Sprite=no,e.SpriteMaterial=ks,e.SrcAlphaFactor=he,e.SrcAlphaSaturateFactor=ge,e.SrcColorFactor=le,e.StaticCopyUsage=35046,e.StaticDrawUsage=Tt,e.StaticReadUsage=35045,e.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new mr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new mr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const s=e.projectionMatrix.clone();var n,i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(Ct.DEG2RAD*t.fov*.5)/t.zoom;Th.elements[12]=-i,Eh.elements[12]=i,n=-a*t.aspect+r,i=a*t.aspect+r,s.elements[0]=2*t.near/(i-n),s.elements[8]=(i+n)/(i-n),this.cameraL.projectionMatrix.copy(s),n=-a*t.aspect-r,i=a*t.aspect-r,s.elements[0]=2*t.near/(i-n),s.elements[8]=(i+n)/(i-n),this.cameraR.projectionMatrix.copy(s)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Th),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Eh)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=ac,e.SubtractEquation=ne,e.SubtractiveBlending=Q,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=wt,e.TetrahedronBufferGeometry=Cl,e.TetrahedronGeometry=Cl,e.TextBufferGeometry=Pl,e.TextGeometry=Pl,e.Texture=Ft,e.TextureLoader=yc,e.TorusBufferGeometry=Il,e.TorusGeometry=Il,e.TorusKnotBufferGeometry=Dl,e.TorusKnotGeometry=Dl,e.Triangle=si,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=Nl,e.TubeGeometry=Nl,e.UVMapping=300,e.Uint16Attribute=function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Ei(e,t)},e.Uint16BufferAttribute=Ei,e.Uint32Attribute=function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Si(e,t)},e.Uint32BufferAttribute=Si,e.Uint8Attribute=function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new bi(e,t)},e.Uint8BufferAttribute=bi,e.Uint8ClampedAttribute=function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Mi(e,t)},e.Uint8ClampedBufferAttribute=Mi,e.Uniform=Kh,e.UniformsLib=Sr,e.UniformsUtils=cr,e.UnsignedByteType=Ce,e.UnsignedInt248Type=Oe,e.UnsignedIntType=Ie,e.UnsignedShort4444Type=h,e.UnsignedShort5551Type=u,e.UnsignedShort565Type=d,e.UnsignedShortType=Pe,e.VSMShadowMap=R,e.Vector2=Pt,e.Vector3=kt,e.Vector4=Ut,e.VectorKeyframeTrack=sc,e.Vertex=function(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new kt(e,t,n)},e.VertexColors=2,e.VideoTexture=Go,e.WebGL1Renderer=Os,e.WebGLCubeRenderTarget=vr,e.WebGLMultisampleRenderTarget=zt,e.WebGLRenderTarget=Ht,e.WebGLRenderTargetCube=function(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new vr(e,n)},e.WebGLRenderer=Ns,e.WebGLUtils=Rs,e.WireframeGeometry=Ol,e.WireframeHelper=function(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Io(new Ol(e.geometry),new wo({color:void 0!==t?t:16777215}))},e.WrapAroundEnding=xt,e.XHRLoader=function(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new pc(e)},e.ZeroCurvatureEnding=vt,e.ZeroFactor=se,e.ZeroSlopeEnding=yt,e.ZeroStencilOp=0,e.sRGBEncoding=bt,Object.defineProperty(e,"__esModule",{value:!0})});